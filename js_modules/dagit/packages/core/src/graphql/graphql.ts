/* eslint-disable */
import { TypedDocumentNode as DocumentNode } from '@graphql-typed-document-node/core';
export type Maybe<T> = T | null;
export type InputMaybe<T> = Maybe<T>;
export type Exact<T extends { [key: string]: unknown }> = { [K in keyof T]: T[K] };
export type MakeOptional<T, K extends keyof T> = Omit<T, K> & { [SubKey in K]?: Maybe<T[SubKey]> };
export type MakeMaybe<T, K extends keyof T> = Omit<T, K> & { [SubKey in K]: Maybe<T[SubKey]> };
/** All built-in and custom scalars, mapped to their actual values */
export type Scalars = {
  ID: string;
  String: string;
  Boolean: boolean;
  Int: number;
  Float: number;
  Cursor: any;
  GenericScalar: any;
  RunConfigData: any;
};

export type AlertFailureEvent = MessageEvent & RunEvent & {
  __typename: 'AlertFailureEvent';
  eventType: Maybe<DagsterEventType>;
  level: LogLevel;
  message: Scalars['String'];
  pipelineName: Scalars['String'];
  runId: Scalars['String'];
  solidHandleID: Maybe<Scalars['String']>;
  stepKey: Maybe<Scalars['String']>;
  timestamp: Scalars['String'];
};

export type AlertStartEvent = MessageEvent & RunEvent & {
  __typename: 'AlertStartEvent';
  eventType: Maybe<DagsterEventType>;
  level: LogLevel;
  message: Scalars['String'];
  pipelineName: Scalars['String'];
  runId: Scalars['String'];
  solidHandleID: Maybe<Scalars['String']>;
  stepKey: Maybe<Scalars['String']>;
  timestamp: Scalars['String'];
};

export type AlertSuccessEvent = MessageEvent & RunEvent & {
  __typename: 'AlertSuccessEvent';
  eventType: Maybe<DagsterEventType>;
  level: LogLevel;
  message: Scalars['String'];
  pipelineName: Scalars['String'];
  runId: Scalars['String'];
  solidHandleID: Maybe<Scalars['String']>;
  stepKey: Maybe<Scalars['String']>;
  timestamp: Scalars['String'];
};

export type ArrayConfigType = ConfigType & WrappingConfigType & {
  __typename: 'ArrayConfigType';
  description: Maybe<Scalars['String']>;
  isSelector: Scalars['Boolean'];
  key: Scalars['String'];
  ofType: ConfigType;
  recursiveConfigTypes: Array<ConfigType>;
  typeParamKeys: Array<Scalars['String']>;
};

export type Asset = {
  __typename: 'Asset';
  assetMaterializations: Array<MaterializationEvent>;
  assetObservations: Array<ObservationEvent>;
  definition: Maybe<AssetNode>;
  id: Scalars['String'];
  key: AssetKey;
};


export type AssetAssetMaterializationsArgs = {
  afterTimestampMillis?: InputMaybe<Scalars['String']>;
  beforeTimestampMillis?: InputMaybe<Scalars['String']>;
  limit?: InputMaybe<Scalars['Int']>;
  partitionInLast?: InputMaybe<Scalars['Int']>;
  partitions?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  tags?: InputMaybe<Array<InputTag>>;
};


export type AssetAssetObservationsArgs = {
  afterTimestampMillis?: InputMaybe<Scalars['String']>;
  beforeTimestampMillis?: InputMaybe<Scalars['String']>;
  limit?: InputMaybe<Scalars['Int']>;
  partitionInLast?: InputMaybe<Scalars['Int']>;
  partitions?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
};

export type AssetConnection = {
  __typename: 'AssetConnection';
  nodes: Array<Asset>;
};

export type AssetDependency = {
  __typename: 'AssetDependency';
  asset: AssetNode;
  inputName: Scalars['String'];
};

export type AssetFreshnessInfo = {
  __typename: 'AssetFreshnessInfo';
  currentMinutesLate: Maybe<Scalars['Float']>;
  latestMaterializationMinutesLate: Maybe<Scalars['Float']>;
};

export type AssetGroup = {
  __typename: 'AssetGroup';
  assetKeys: Array<AssetKey>;
  groupName: Scalars['String'];
};

export type AssetGroupSelector = {
  groupName: Scalars['String'];
  repositoryLocationName: Scalars['String'];
  repositoryName: Scalars['String'];
};

export type AssetKey = {
  __typename: 'AssetKey';
  path: Array<Scalars['String']>;
};

export type AssetKeyInput = {
  path: Array<Scalars['String']>;
};

export type AssetLatestInfo = {
  __typename: 'AssetLatestInfo';
  assetKey: AssetKey;
  inProgressRunIds: Array<Scalars['String']>;
  latestMaterialization: Maybe<MaterializationEvent>;
  latestRun: Maybe<Run>;
  unstartedRunIds: Array<Scalars['String']>;
};

export type AssetLineageInfo = {
  __typename: 'AssetLineageInfo';
  assetKey: AssetKey;
  partitions: Array<Scalars['String']>;
};

export type AssetMaterializationPlannedEvent = MessageEvent & RunEvent & {
  __typename: 'AssetMaterializationPlannedEvent';
  assetKey: Maybe<AssetKey>;
  eventType: Maybe<DagsterEventType>;
  level: LogLevel;
  message: Scalars['String'];
  pipelineName: Scalars['String'];
  runId: Scalars['String'];
  runOrError: RunOrError;
  solidHandleID: Maybe<Scalars['String']>;
  stepKey: Maybe<Scalars['String']>;
  timestamp: Scalars['String'];
};

export type AssetMetadataEntry = MetadataEntry & {
  __typename: 'AssetMetadataEntry';
  assetKey: AssetKey;
  description: Maybe<Scalars['String']>;
  label: Scalars['String'];
};

export type AssetNode = {
  __typename: 'AssetNode';
  assetKey: AssetKey;
  assetMaterializations: Array<MaterializationEvent>;
  assetObservations: Array<ObservationEvent>;
  computeKind: Maybe<Scalars['String']>;
  configField: Maybe<ConfigTypeField>;
  currentLogicalVersion: Maybe<Scalars['String']>;
  dependedBy: Array<AssetDependency>;
  dependedByKeys: Array<AssetKey>;
  dependencies: Array<AssetDependency>;
  dependencyKeys: Array<AssetKey>;
  description: Maybe<Scalars['String']>;
  freshnessInfo: Maybe<AssetFreshnessInfo>;
  freshnessPolicy: Maybe<FreshnessPolicy>;
  graphName: Maybe<Scalars['String']>;
  groupName: Maybe<Scalars['String']>;
  id: Scalars['ID'];
  isObservable: Scalars['Boolean'];
  isPartitioned: Scalars['Boolean'];
  isSource: Scalars['Boolean'];
  jobNames: Array<Scalars['String']>;
  jobs: Array<Pipeline>;
  latestMaterializationByPartition: Array<Maybe<MaterializationEvent>>;
  metadataEntries: Array<MetadataEntry>;
  op: Maybe<SolidDefinition>;
  opName: Maybe<Scalars['String']>;
  opNames: Array<Scalars['String']>;
  opVersion: Maybe<Scalars['String']>;
  partitionDefinition: Maybe<PartitionDefinition>;
  partitionKeys: Array<Scalars['String']>;
  partitionKeysByDimension: Array<DimensionPartitionKeys>;
  partitionMaterializationCounts: PartitionMaterializationCounts;
  projectedLogicalVersion: Maybe<Scalars['String']>;
  repository: Repository;
  requiredResources: Array<ResourceRequirement>;
  type: Maybe<DagsterType>;
};


export type AssetNodeAssetMaterializationsArgs = {
  beforeTimestampMillis?: InputMaybe<Scalars['String']>;
  limit?: InputMaybe<Scalars['Int']>;
  partitions?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
};


export type AssetNodeAssetObservationsArgs = {
  beforeTimestampMillis?: InputMaybe<Scalars['String']>;
  limit?: InputMaybe<Scalars['Int']>;
  partitions?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
};


export type AssetNodeLatestMaterializationByPartitionArgs = {
  partitions?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
};

export type AssetNodeDefinitionCollision = {
  __typename: 'AssetNodeDefinitionCollision';
  assetKey: AssetKey;
  repositories: Array<Repository>;
};

export type AssetNodeOrError = AssetNode | AssetNotFoundError;

export type AssetNotFoundError = Error & {
  __typename: 'AssetNotFoundError';
  message: Scalars['String'];
};

export type AssetOrError = Asset | AssetNotFoundError;

export type AssetWipeMutationResult = AssetNotFoundError | AssetWipeSuccess | PythonError | UnauthorizedError;

export type AssetWipeSuccess = {
  __typename: 'AssetWipeSuccess';
  assetKeys: Array<AssetKey>;
};

export type AssetsOrError = AssetConnection | PythonError;

export type BoolMetadataEntry = MetadataEntry & {
  __typename: 'BoolMetadataEntry';
  boolValue: Maybe<Scalars['Boolean']>;
  description: Maybe<Scalars['String']>;
  label: Scalars['String'];
};

export enum BulkActionStatus {
  CANCELED = 'CANCELED',
  COMPLETED = 'COMPLETED',
  FAILED = 'FAILED',
  REQUESTED = 'REQUESTED'
}

export type CancelBackfillResult = CancelBackfillSuccess | PythonError | UnauthorizedError;

export type CancelBackfillSuccess = {
  __typename: 'CancelBackfillSuccess';
  backfillId: Scalars['String'];
};

export type CapturedLogs = {
  __typename: 'CapturedLogs';
  cursor: Maybe<Scalars['String']>;
  logKey: Array<Scalars['String']>;
  stderr: Maybe<Scalars['String']>;
  stdout: Maybe<Scalars['String']>;
};

export type CapturedLogsMetadata = {
  __typename: 'CapturedLogsMetadata';
  stderrDownloadUrl: Maybe<Scalars['String']>;
  stderrLocation: Maybe<Scalars['String']>;
  stdoutDownloadUrl: Maybe<Scalars['String']>;
  stdoutLocation: Maybe<Scalars['String']>;
};

export type CompositeConfigType = ConfigType & {
  __typename: 'CompositeConfigType';
  description: Maybe<Scalars['String']>;
  fields: Array<ConfigTypeField>;
  isSelector: Scalars['Boolean'];
  key: Scalars['String'];
  recursiveConfigTypes: Array<ConfigType>;
  typeParamKeys: Array<Scalars['String']>;
};

export type CompositeSolidDefinition = ISolidDefinition & SolidContainer & {
  __typename: 'CompositeSolidDefinition';
  assetNodes: Array<AssetNode>;
  description: Maybe<Scalars['String']>;
  id: Scalars['ID'];
  inputDefinitions: Array<InputDefinition>;
  inputMappings: Array<InputMapping>;
  metadata: Array<MetadataItemDefinition>;
  modes: Array<Mode>;
  name: Scalars['String'];
  outputDefinitions: Array<OutputDefinition>;
  outputMappings: Array<OutputMapping>;
  solidHandle: Maybe<SolidHandle>;
  solidHandles: Array<SolidHandle>;
  solids: Array<Solid>;
};


export type CompositeSolidDefinitionSolidHandleArgs = {
  handleID: Scalars['String'];
};


export type CompositeSolidDefinitionSolidHandlesArgs = {
  parentHandleID?: InputMaybe<Scalars['String']>;
};

export enum ComputeIoType {
  STDERR = 'STDERR',
  STDOUT = 'STDOUT'
}

export type ComputeLogFile = {
  __typename: 'ComputeLogFile';
  cursor: Scalars['Int'];
  data: Maybe<Scalars['String']>;
  downloadUrl: Maybe<Scalars['String']>;
  path: Scalars['String'];
  size: Scalars['Int'];
};

export type ComputeLogs = {
  __typename: 'ComputeLogs';
  runId: Scalars['String'];
  stderr: Maybe<ComputeLogFile>;
  stdout: Maybe<ComputeLogFile>;
  stepKey: Scalars['String'];
};

export type ConfigType = {
  description: Maybe<Scalars['String']>;
  isSelector: Scalars['Boolean'];
  key: Scalars['String'];
  recursiveConfigTypes: Array<ConfigType>;
  typeParamKeys: Array<Scalars['String']>;
};

export type ConfigTypeField = {
  __typename: 'ConfigTypeField';
  configType: ConfigType;
  configTypeKey: Scalars['String'];
  defaultValueAsJson: Maybe<Scalars['String']>;
  description: Maybe<Scalars['String']>;
  isRequired: Scalars['Boolean'];
  name: Scalars['String'];
};

export type ConfigTypeNotFoundError = Error & {
  __typename: 'ConfigTypeNotFoundError';
  configTypeName: Scalars['String'];
  message: Scalars['String'];
  pipeline: Pipeline;
};

export type ConfigTypeOrError = CompositeConfigType | ConfigTypeNotFoundError | EnumConfigType | PipelineNotFoundError | PythonError | RegularConfigType;

export type ConflictingExecutionParamsError = Error & {
  __typename: 'ConflictingExecutionParamsError';
  message: Scalars['String'];
};

export type DaemonHealth = {
  __typename: 'DaemonHealth';
  allDaemonStatuses: Array<DaemonStatus>;
  daemonStatus: DaemonStatus;
  id: Scalars['String'];
};


export type DaemonHealthDaemonStatusArgs = {
  daemonType?: InputMaybe<Scalars['String']>;
};

export type DaemonStatus = {
  __typename: 'DaemonStatus';
  daemonType: Scalars['String'];
  healthy: Maybe<Scalars['Boolean']>;
  id: Scalars['ID'];
  lastHeartbeatErrors: Array<PythonError>;
  lastHeartbeatTime: Maybe<Scalars['Float']>;
  required: Scalars['Boolean'];
};

export type DagitMutation = {
  __typename: 'DagitMutation';
  cancelPartitionBackfill: CancelBackfillResult;
  deletePipelineRun: DeletePipelineRunResult;
  deleteRun: DeletePipelineRunResult;
  launchPartitionBackfill: LaunchBackfillResult;
  launchPipelineExecution: LaunchRunResult;
  launchPipelineReexecution: LaunchRunReexecutionResult;
  launchRun: LaunchRunResult;
  launchRunReexecution: LaunchRunReexecutionResult;
  logTelemetry: LogTelemetryMutationResult;
  reloadRepositoryLocation: ReloadRepositoryLocationMutationResult;
  reloadWorkspace: ReloadWorkspaceMutationResult;
  resumePartitionBackfill: ResumeBackfillResult;
  setSensorCursor: SensorOrError;
  shutdownRepositoryLocation: ShutdownRepositoryLocationMutationResult;
  startSchedule: ScheduleMutationResult;
  startSensor: SensorOrError;
  stopRunningSchedule: ScheduleMutationResult;
  stopSensor: StopSensorMutationResultOrError;
  terminatePipelineExecution: TerminateRunResult;
  terminateRun: TerminateRunResult;
  testInstigator: SensorOrError;
  wipeAssets: AssetWipeMutationResult;
};


export type DagitMutationCancelPartitionBackfillArgs = {
  backfillId: Scalars['String'];
};


export type DagitMutationDeletePipelineRunArgs = {
  runId: Scalars['String'];
};


export type DagitMutationDeleteRunArgs = {
  runId: Scalars['String'];
};


export type DagitMutationLaunchPartitionBackfillArgs = {
  backfillParams: LaunchBackfillParams;
};


export type DagitMutationLaunchPipelineExecutionArgs = {
  executionParams: ExecutionParams;
};


export type DagitMutationLaunchPipelineReexecutionArgs = {
  executionParams?: InputMaybe<ExecutionParams>;
  reexecutionParams?: InputMaybe<ReexecutionParams>;
};


export type DagitMutationLaunchRunArgs = {
  executionParams: ExecutionParams;
};


export type DagitMutationLaunchRunReexecutionArgs = {
  executionParams?: InputMaybe<ExecutionParams>;
  reexecutionParams?: InputMaybe<ReexecutionParams>;
};


export type DagitMutationLogTelemetryArgs = {
  action: Scalars['String'];
  clientId: Scalars['String'];
  clientTime: Scalars['String'];
  metadata: Scalars['String'];
};


export type DagitMutationReloadRepositoryLocationArgs = {
  repositoryLocationName: Scalars['String'];
};


export type DagitMutationResumePartitionBackfillArgs = {
  backfillId: Scalars['String'];
};


export type DagitMutationSetSensorCursorArgs = {
  cursor?: InputMaybe<Scalars['String']>;
  sensorSelector: SensorSelector;
};


export type DagitMutationShutdownRepositoryLocationArgs = {
  repositoryLocationName: Scalars['String'];
};


export type DagitMutationStartScheduleArgs = {
  scheduleSelector: ScheduleSelector;
};


export type DagitMutationStartSensorArgs = {
  sensorSelector: SensorSelector;
};


export type DagitMutationStopRunningScheduleArgs = {
  scheduleOriginId: Scalars['String'];
  scheduleSelectorId: Scalars['String'];
};


export type DagitMutationStopSensorArgs = {
  jobOriginId: Scalars['String'];
  jobSelectorId: Scalars['String'];
};


export type DagitMutationTerminatePipelineExecutionArgs = {
  runId: Scalars['String'];
  terminatePolicy?: InputMaybe<TerminateRunPolicy>;
};


export type DagitMutationTerminateRunArgs = {
  runId: Scalars['String'];
  terminatePolicy?: InputMaybe<TerminateRunPolicy>;
};


export type DagitMutationTestInstigatorArgs = {
  cursor?: InputMaybe<Scalars['String']>;
  instigatorSelector: InstigatorSelector;
};


export type DagitMutationWipeAssetsArgs = {
  assetKeys: Array<AssetKeyInput>;
};

export type DagitQuery = {
  __typename: 'DagitQuery';
  assetNodeDefinitionCollisions: Array<AssetNodeDefinitionCollision>;
  assetNodeOrError: AssetNodeOrError;
  assetNodes: Array<AssetNode>;
  assetOrError: AssetOrError;
  assetsLatestInfo: Array<AssetLatestInfo>;
  assetsOrError: AssetsOrError;
  capturedLogs: CapturedLogs;
  capturedLogsMetadata: CapturedLogsMetadata;
  executionPlanOrError: ExecutionPlanOrError;
  graphOrError: GraphOrError;
  instance: Instance;
  instigationStateOrError: InstigationStateOrError;
  isPipelineConfigValid: PipelineConfigValidationResult;
  locationStatusesOrError: WorkspaceLocationStatusEntriesOrError;
  logsForRun: EventConnectionOrError;
  partitionBackfillOrError: PartitionBackfillOrError;
  partitionBackfillsOrError: PartitionBackfillsOrError;
  partitionSetOrError: PartitionSetOrError;
  partitionSetsOrError: PartitionSetsOrError;
  permissions: Array<Permission>;
  pipelineOrError: PipelineOrError;
  pipelineRunOrError: RunOrError;
  pipelineRunTags: Array<PipelineTagAndValues>;
  pipelineRunsOrError: RunsOrError;
  pipelineSnapshotOrError: PipelineSnapshotOrError;
  repositoriesOrError: RepositoriesOrError;
  repositoryOrError: RepositoryOrError;
  runConfigSchemaOrError: RunConfigSchemaOrError;
  runGroupOrError: RunGroupOrError;
  runGroupsOrError: RunGroupsOrError;
  runOrError: RunOrError;
  runsOrError: RunsOrError;
  scheduleOrError: ScheduleOrError;
  scheduler: SchedulerOrError;
  schedulesOrError: SchedulesOrError;
  sensorOrError: SensorOrError;
  sensorsOrError: SensorsOrError;
  unloadableInstigationStatesOrError: InstigationStatesOrError;
  version: Scalars['String'];
  workspaceOrError: WorkspaceOrError;
};


export type DagitQueryAssetNodeDefinitionCollisionsArgs = {
  assetKeys?: InputMaybe<Array<AssetKeyInput>>;
};


export type DagitQueryAssetNodeOrErrorArgs = {
  assetKey: AssetKeyInput;
};


export type DagitQueryAssetNodesArgs = {
  assetKeys?: InputMaybe<Array<AssetKeyInput>>;
  group?: InputMaybe<AssetGroupSelector>;
  loadMaterializations?: InputMaybe<Scalars['Boolean']>;
  pipeline?: InputMaybe<PipelineSelector>;
};


export type DagitQueryAssetOrErrorArgs = {
  assetKey: AssetKeyInput;
};


export type DagitQueryAssetsLatestInfoArgs = {
  assetKeys: Array<AssetKeyInput>;
};


export type DagitQueryAssetsOrErrorArgs = {
  cursor?: InputMaybe<Scalars['String']>;
  limit?: InputMaybe<Scalars['Int']>;
  prefix?: InputMaybe<Array<Scalars['String']>>;
};


export type DagitQueryCapturedLogsArgs = {
  cursor?: InputMaybe<Scalars['String']>;
  limit?: InputMaybe<Scalars['Int']>;
  logKey: Array<Scalars['String']>;
};


export type DagitQueryCapturedLogsMetadataArgs = {
  logKey: Array<Scalars['String']>;
};


export type DagitQueryExecutionPlanOrErrorArgs = {
  mode: Scalars['String'];
  pipeline: PipelineSelector;
  runConfigData?: InputMaybe<Scalars['RunConfigData']>;
};


export type DagitQueryGraphOrErrorArgs = {
  selector?: InputMaybe<GraphSelector>;
};


export type DagitQueryInstigationStateOrErrorArgs = {
  instigationSelector: InstigationSelector;
};


export type DagitQueryIsPipelineConfigValidArgs = {
  mode: Scalars['String'];
  pipeline: PipelineSelector;
  runConfigData?: InputMaybe<Scalars['RunConfigData']>;
};


export type DagitQueryLogsForRunArgs = {
  afterCursor?: InputMaybe<Scalars['String']>;
  limit?: InputMaybe<Scalars['Int']>;
  runId: Scalars['ID'];
};


export type DagitQueryPartitionBackfillOrErrorArgs = {
  backfillId: Scalars['String'];
};


export type DagitQueryPartitionBackfillsOrErrorArgs = {
  cursor?: InputMaybe<Scalars['String']>;
  limit?: InputMaybe<Scalars['Int']>;
  status?: InputMaybe<BulkActionStatus>;
};


export type DagitQueryPartitionSetOrErrorArgs = {
  partitionSetName?: InputMaybe<Scalars['String']>;
  repositorySelector: RepositorySelector;
};


export type DagitQueryPartitionSetsOrErrorArgs = {
  pipelineName: Scalars['String'];
  repositorySelector: RepositorySelector;
};


export type DagitQueryPipelineOrErrorArgs = {
  params: PipelineSelector;
};


export type DagitQueryPipelineRunOrErrorArgs = {
  runId: Scalars['ID'];
};


export type DagitQueryPipelineRunsOrErrorArgs = {
  cursor?: InputMaybe<Scalars['String']>;
  filter?: InputMaybe<RunsFilter>;
  limit?: InputMaybe<Scalars['Int']>;
};


export type DagitQueryPipelineSnapshotOrErrorArgs = {
  activePipelineSelector?: InputMaybe<PipelineSelector>;
  snapshotId?: InputMaybe<Scalars['String']>;
};


export type DagitQueryRepositoriesOrErrorArgs = {
  repositorySelector?: InputMaybe<RepositorySelector>;
};


export type DagitQueryRepositoryOrErrorArgs = {
  repositorySelector: RepositorySelector;
};


export type DagitQueryRunConfigSchemaOrErrorArgs = {
  mode?: InputMaybe<Scalars['String']>;
  selector: PipelineSelector;
};


export type DagitQueryRunGroupOrErrorArgs = {
  runId: Scalars['ID'];
};


export type DagitQueryRunGroupsOrErrorArgs = {
  cursor?: InputMaybe<Scalars['String']>;
  filter?: InputMaybe<RunsFilter>;
  limit?: InputMaybe<Scalars['Int']>;
};


export type DagitQueryRunOrErrorArgs = {
  runId: Scalars['ID'];
};


export type DagitQueryRunsOrErrorArgs = {
  cursor?: InputMaybe<Scalars['String']>;
  filter?: InputMaybe<RunsFilter>;
  limit?: InputMaybe<Scalars['Int']>;
};


export type DagitQueryScheduleOrErrorArgs = {
  scheduleSelector: ScheduleSelector;
};


export type DagitQuerySchedulesOrErrorArgs = {
  repositorySelector: RepositorySelector;
};


export type DagitQuerySensorOrErrorArgs = {
  sensorSelector: SensorSelector;
};


export type DagitQuerySensorsOrErrorArgs = {
  repositorySelector: RepositorySelector;
};


export type DagitQueryUnloadableInstigationStatesOrErrorArgs = {
  instigationType?: InputMaybe<InstigationType>;
};

export type DagitSubscription = {
  __typename: 'DagitSubscription';
  capturedLogs: CapturedLogs;
  computeLogs: ComputeLogFile;
  locationStateChangeEvents: LocationStateChangeSubscription;
  pipelineRunLogs: PipelineRunLogsSubscriptionPayload;
};


export type DagitSubscriptionCapturedLogsArgs = {
  cursor?: InputMaybe<Scalars['String']>;
  logKey: Array<Scalars['String']>;
};


export type DagitSubscriptionComputeLogsArgs = {
  cursor?: InputMaybe<Scalars['String']>;
  ioType: ComputeIoType;
  runId: Scalars['ID'];
  stepKey: Scalars['String'];
};


export type DagitSubscriptionPipelineRunLogsArgs = {
  cursor?: InputMaybe<Scalars['String']>;
  runId: Scalars['ID'];
};

export enum DagsterEventType {
  ALERT_FAILURE = 'ALERT_FAILURE',
  ALERT_START = 'ALERT_START',
  ALERT_SUCCESS = 'ALERT_SUCCESS',
  ASSET_MATERIALIZATION = 'ASSET_MATERIALIZATION',
  ASSET_MATERIALIZATION_PLANNED = 'ASSET_MATERIALIZATION_PLANNED',
  ASSET_OBSERVATION = 'ASSET_OBSERVATION',
  ASSET_STORE_OPERATION = 'ASSET_STORE_OPERATION',
  ENGINE_EVENT = 'ENGINE_EVENT',
  HANDLED_OUTPUT = 'HANDLED_OUTPUT',
  HOOK_COMPLETED = 'HOOK_COMPLETED',
  HOOK_ERRORED = 'HOOK_ERRORED',
  HOOK_SKIPPED = 'HOOK_SKIPPED',
  LOADED_INPUT = 'LOADED_INPUT',
  LOGS_CAPTURED = 'LOGS_CAPTURED',
  OBJECT_STORE_OPERATION = 'OBJECT_STORE_OPERATION',
  PIPELINE_CANCELED = 'PIPELINE_CANCELED',
  PIPELINE_CANCELING = 'PIPELINE_CANCELING',
  PIPELINE_DEQUEUED = 'PIPELINE_DEQUEUED',
  PIPELINE_ENQUEUED = 'PIPELINE_ENQUEUED',
  PIPELINE_FAILURE = 'PIPELINE_FAILURE',
  PIPELINE_START = 'PIPELINE_START',
  PIPELINE_STARTING = 'PIPELINE_STARTING',
  PIPELINE_SUCCESS = 'PIPELINE_SUCCESS',
  RESOURCE_INIT_FAILURE = 'RESOURCE_INIT_FAILURE',
  RESOURCE_INIT_STARTED = 'RESOURCE_INIT_STARTED',
  RESOURCE_INIT_SUCCESS = 'RESOURCE_INIT_SUCCESS',
  RUN_CANCELED = 'RUN_CANCELED',
  RUN_CANCELING = 'RUN_CANCELING',
  RUN_DEQUEUED = 'RUN_DEQUEUED',
  RUN_ENQUEUED = 'RUN_ENQUEUED',
  RUN_FAILURE = 'RUN_FAILURE',
  RUN_START = 'RUN_START',
  RUN_STARTING = 'RUN_STARTING',
  RUN_SUCCESS = 'RUN_SUCCESS',
  STEP_EXPECTATION_RESULT = 'STEP_EXPECTATION_RESULT',
  STEP_FAILURE = 'STEP_FAILURE',
  STEP_INPUT = 'STEP_INPUT',
  STEP_OUTPUT = 'STEP_OUTPUT',
  STEP_RESTARTED = 'STEP_RESTARTED',
  STEP_SKIPPED = 'STEP_SKIPPED',
  STEP_START = 'STEP_START',
  STEP_SUCCESS = 'STEP_SUCCESS',
  STEP_UP_FOR_RETRY = 'STEP_UP_FOR_RETRY',
  STEP_WORKER_STARTED = 'STEP_WORKER_STARTED',
  STEP_WORKER_STARTING = 'STEP_WORKER_STARTING'
}

export type DagsterRunEvent = AlertFailureEvent | AlertStartEvent | AlertSuccessEvent | AssetMaterializationPlannedEvent | EngineEvent | ExecutionStepFailureEvent | ExecutionStepInputEvent | ExecutionStepOutputEvent | ExecutionStepRestartEvent | ExecutionStepSkippedEvent | ExecutionStepStartEvent | ExecutionStepSuccessEvent | ExecutionStepUpForRetryEvent | HandledOutputEvent | HookCompletedEvent | HookErroredEvent | HookSkippedEvent | LoadedInputEvent | LogMessageEvent | LogsCapturedEvent | MaterializationEvent | ObjectStoreOperationEvent | ObservationEvent | ResourceInitFailureEvent | ResourceInitStartedEvent | ResourceInitSuccessEvent | RunCanceledEvent | RunCancelingEvent | RunDequeuedEvent | RunEnqueuedEvent | RunFailureEvent | RunStartEvent | RunStartingEvent | RunSuccessEvent | StepExpectationResultEvent | StepWorkerStartedEvent | StepWorkerStartingEvent;

export type DagsterType = {
  description: Maybe<Scalars['String']>;
  displayName: Scalars['String'];
  innerTypes: Array<DagsterType>;
  inputSchemaType: Maybe<ConfigType>;
  isBuiltin: Scalars['Boolean'];
  isList: Scalars['Boolean'];
  isNothing: Scalars['Boolean'];
  isNullable: Scalars['Boolean'];
  key: Scalars['String'];
  metadataEntries: Array<MetadataEntry>;
  name: Maybe<Scalars['String']>;
  outputSchemaType: Maybe<ConfigType>;
};

export type DagsterTypeNotFoundError = Error & {
  __typename: 'DagsterTypeNotFoundError';
  dagsterTypeName: Scalars['String'];
  message: Scalars['String'];
};

export type DagsterTypeOrError = DagsterTypeNotFoundError | PipelineNotFoundError | PythonError | RegularDagsterType;

export type DeletePipelineRunResult = DeletePipelineRunSuccess | PythonError | RunNotFoundError | UnauthorizedError;

export type DeletePipelineRunSuccess = {
  __typename: 'DeletePipelineRunSuccess';
  runId: Scalars['String'];
};

export type DeleteRunMutation = {
  __typename: 'DeleteRunMutation';
  Output: DeletePipelineRunResult;
};

export type DimensionDefinitionType = {
  __typename: 'DimensionDefinitionType';
  description: Scalars['String'];
  name: Scalars['String'];
  type: PartitionDefinitionType;
};

export type DimensionPartitionKeys = {
  __typename: 'DimensionPartitionKeys';
  name: Scalars['String'];
  partitionKeys: Array<Scalars['String']>;
};

export type DisplayableEvent = {
  description: Maybe<Scalars['String']>;
  label: Maybe<Scalars['String']>;
  metadataEntries: Array<MetadataEntry>;
};

export type EngineEvent = DisplayableEvent & ErrorEvent & MarkerEvent & MessageEvent & StepEvent & {
  __typename: 'EngineEvent';
  description: Maybe<Scalars['String']>;
  error: Maybe<PythonError>;
  eventType: Maybe<DagsterEventType>;
  label: Maybe<Scalars['String']>;
  level: LogLevel;
  markerEnd: Maybe<Scalars['String']>;
  markerStart: Maybe<Scalars['String']>;
  message: Scalars['String'];
  metadataEntries: Array<MetadataEntry>;
  runId: Scalars['String'];
  solidHandleID: Maybe<Scalars['String']>;
  stepKey: Maybe<Scalars['String']>;
  timestamp: Scalars['String'];
};

export type EnumConfigType = ConfigType & {
  __typename: 'EnumConfigType';
  description: Maybe<Scalars['String']>;
  givenName: Scalars['String'];
  isSelector: Scalars['Boolean'];
  key: Scalars['String'];
  recursiveConfigTypes: Array<ConfigType>;
  typeParamKeys: Array<Scalars['String']>;
  values: Array<EnumConfigValue>;
};

export type EnumConfigValue = {
  __typename: 'EnumConfigValue';
  description: Maybe<Scalars['String']>;
  value: Scalars['String'];
};

export type Error = {
  message: Scalars['String'];
};

export type ErrorChainLink = Error & {
  __typename: 'ErrorChainLink';
  error: PythonError;
  isExplicitLink: Scalars['Boolean'];
  message: Scalars['String'];
};

export type ErrorEvent = {
  error: Maybe<PythonError>;
};

export enum ErrorSource {
  FRAMEWORK_ERROR = 'FRAMEWORK_ERROR',
  INTERRUPT = 'INTERRUPT',
  UNEXPECTED_ERROR = 'UNEXPECTED_ERROR',
  USER_CODE_ERROR = 'USER_CODE_ERROR'
}

export enum EvaluationErrorReason {
  FIELDS_NOT_DEFINED = 'FIELDS_NOT_DEFINED',
  FIELD_NOT_DEFINED = 'FIELD_NOT_DEFINED',
  MISSING_REQUIRED_FIELD = 'MISSING_REQUIRED_FIELD',
  MISSING_REQUIRED_FIELDS = 'MISSING_REQUIRED_FIELDS',
  RUNTIME_TYPE_MISMATCH = 'RUNTIME_TYPE_MISMATCH',
  SELECTOR_FIELD_ERROR = 'SELECTOR_FIELD_ERROR'
}

export type EvaluationStack = {
  __typename: 'EvaluationStack';
  entries: Array<EvaluationStackEntry>;
};

export type EvaluationStackEntry = EvaluationStackListItemEntry | EvaluationStackMapKeyEntry | EvaluationStackMapValueEntry | EvaluationStackPathEntry;

export type EvaluationStackListItemEntry = {
  __typename: 'EvaluationStackListItemEntry';
  listIndex: Scalars['Int'];
};

export type EvaluationStackMapKeyEntry = {
  __typename: 'EvaluationStackMapKeyEntry';
  mapKey: Scalars['GenericScalar'];
};

export type EvaluationStackMapValueEntry = {
  __typename: 'EvaluationStackMapValueEntry';
  mapKey: Scalars['GenericScalar'];
};

export type EvaluationStackPathEntry = {
  __typename: 'EvaluationStackPathEntry';
  fieldName: Scalars['String'];
};

export type EventConnection = {
  __typename: 'EventConnection';
  cursor: Scalars['String'];
  events: Array<DagsterRunEvent>;
  hasMore: Scalars['Boolean'];
};

export type EventConnectionOrError = EventConnection | PythonError | RunNotFoundError;

export type ExecutionMetadata = {
  parentRunId?: InputMaybe<Scalars['String']>;
  rootRunId?: InputMaybe<Scalars['String']>;
  runId?: InputMaybe<Scalars['String']>;
  tags?: InputMaybe<Array<ExecutionTag>>;
};

export type ExecutionParams = {
  executionMetadata?: InputMaybe<ExecutionMetadata>;
  mode?: InputMaybe<Scalars['String']>;
  preset?: InputMaybe<Scalars['String']>;
  runConfigData?: InputMaybe<Scalars['RunConfigData']>;
  selector: JobOrPipelineSelector;
  stepKeys?: InputMaybe<Array<Scalars['String']>>;
};

export type ExecutionPlan = {
  __typename: 'ExecutionPlan';
  artifactsPersisted: Scalars['Boolean'];
  steps: Array<ExecutionStep>;
};

export type ExecutionPlanOrError = ExecutionPlan | InvalidSubsetError | PipelineNotFoundError | PythonError | RunConfigValidationInvalid;

export type ExecutionStep = {
  __typename: 'ExecutionStep';
  inputs: Array<ExecutionStepInput>;
  key: Scalars['String'];
  kind: StepKind;
  metadata: Array<MetadataItemDefinition>;
  outputs: Array<ExecutionStepOutput>;
  solidHandleID: Scalars['String'];
};

export type ExecutionStepFailureEvent = ErrorEvent & MessageEvent & StepEvent & {
  __typename: 'ExecutionStepFailureEvent';
  error: Maybe<PythonError>;
  errorSource: Maybe<ErrorSource>;
  eventType: Maybe<DagsterEventType>;
  failureMetadata: Maybe<FailureMetadata>;
  level: LogLevel;
  message: Scalars['String'];
  runId: Scalars['String'];
  solidHandleID: Maybe<Scalars['String']>;
  stepKey: Maybe<Scalars['String']>;
  timestamp: Scalars['String'];
};

export type ExecutionStepInput = {
  __typename: 'ExecutionStepInput';
  dependsOn: Array<ExecutionStep>;
  name: Scalars['String'];
};

export type ExecutionStepInputEvent = MessageEvent & StepEvent & {
  __typename: 'ExecutionStepInputEvent';
  eventType: Maybe<DagsterEventType>;
  inputName: Scalars['String'];
  level: LogLevel;
  message: Scalars['String'];
  runId: Scalars['String'];
  solidHandleID: Maybe<Scalars['String']>;
  stepKey: Maybe<Scalars['String']>;
  timestamp: Scalars['String'];
  typeCheck: TypeCheck;
};

export type ExecutionStepOutput = {
  __typename: 'ExecutionStepOutput';
  name: Scalars['String'];
};

export type ExecutionStepOutputEvent = DisplayableEvent & MessageEvent & StepEvent & {
  __typename: 'ExecutionStepOutputEvent';
  description: Maybe<Scalars['String']>;
  eventType: Maybe<DagsterEventType>;
  label: Maybe<Scalars['String']>;
  level: LogLevel;
  message: Scalars['String'];
  metadataEntries: Array<MetadataEntry>;
  outputName: Scalars['String'];
  runId: Scalars['String'];
  solidHandleID: Maybe<Scalars['String']>;
  stepKey: Maybe<Scalars['String']>;
  timestamp: Scalars['String'];
  typeCheck: TypeCheck;
};

export type ExecutionStepRestartEvent = MessageEvent & StepEvent & {
  __typename: 'ExecutionStepRestartEvent';
  eventType: Maybe<DagsterEventType>;
  level: LogLevel;
  message: Scalars['String'];
  runId: Scalars['String'];
  solidHandleID: Maybe<Scalars['String']>;
  stepKey: Maybe<Scalars['String']>;
  timestamp: Scalars['String'];
};

export type ExecutionStepSkippedEvent = MessageEvent & StepEvent & {
  __typename: 'ExecutionStepSkippedEvent';
  eventType: Maybe<DagsterEventType>;
  level: LogLevel;
  message: Scalars['String'];
  runId: Scalars['String'];
  solidHandleID: Maybe<Scalars['String']>;
  stepKey: Maybe<Scalars['String']>;
  timestamp: Scalars['String'];
};

export type ExecutionStepStartEvent = MessageEvent & StepEvent & {
  __typename: 'ExecutionStepStartEvent';
  eventType: Maybe<DagsterEventType>;
  level: LogLevel;
  message: Scalars['String'];
  runId: Scalars['String'];
  solidHandleID: Maybe<Scalars['String']>;
  stepKey: Maybe<Scalars['String']>;
  timestamp: Scalars['String'];
};

export type ExecutionStepSuccessEvent = MessageEvent & StepEvent & {
  __typename: 'ExecutionStepSuccessEvent';
  eventType: Maybe<DagsterEventType>;
  level: LogLevel;
  message: Scalars['String'];
  runId: Scalars['String'];
  solidHandleID: Maybe<Scalars['String']>;
  stepKey: Maybe<Scalars['String']>;
  timestamp: Scalars['String'];
};

export type ExecutionStepUpForRetryEvent = ErrorEvent & MessageEvent & StepEvent & {
  __typename: 'ExecutionStepUpForRetryEvent';
  error: Maybe<PythonError>;
  eventType: Maybe<DagsterEventType>;
  level: LogLevel;
  message: Scalars['String'];
  runId: Scalars['String'];
  secondsToWait: Maybe<Scalars['Int']>;
  solidHandleID: Maybe<Scalars['String']>;
  stepKey: Maybe<Scalars['String']>;
  timestamp: Scalars['String'];
};

export type ExecutionTag = {
  key: Scalars['String'];
  value: Scalars['String'];
};

export type ExpectationResult = DisplayableEvent & {
  __typename: 'ExpectationResult';
  description: Maybe<Scalars['String']>;
  label: Maybe<Scalars['String']>;
  metadataEntries: Array<MetadataEntry>;
  success: Scalars['Boolean'];
};

export type FailureMetadata = DisplayableEvent & {
  __typename: 'FailureMetadata';
  description: Maybe<Scalars['String']>;
  label: Maybe<Scalars['String']>;
  metadataEntries: Array<MetadataEntry>;
};

export type FieldNotDefinedConfigError = PipelineConfigValidationError & {
  __typename: 'FieldNotDefinedConfigError';
  fieldName: Scalars['String'];
  message: Scalars['String'];
  path: Array<Scalars['String']>;
  reason: EvaluationErrorReason;
  stack: EvaluationStack;
};

export type FieldsNotDefinedConfigError = PipelineConfigValidationError & {
  __typename: 'FieldsNotDefinedConfigError';
  fieldNames: Array<Scalars['String']>;
  message: Scalars['String'];
  path: Array<Scalars['String']>;
  reason: EvaluationErrorReason;
  stack: EvaluationStack;
};

export type FloatMetadataEntry = MetadataEntry & {
  __typename: 'FloatMetadataEntry';
  description: Maybe<Scalars['String']>;
  floatValue: Maybe<Scalars['Float']>;
  label: Scalars['String'];
};

export type FreshnessPolicy = {
  __typename: 'FreshnessPolicy';
  cronSchedule: Maybe<Scalars['String']>;
  maximumLagMinutes: Scalars['Float'];
};

export type FutureInstigationTick = {
  __typename: 'FutureInstigationTick';
  evaluationResult: Maybe<TickEvaluation>;
  timestamp: Scalars['Float'];
};

export type FutureInstigationTicks = {
  __typename: 'FutureInstigationTicks';
  cursor: Scalars['Float'];
  results: Array<FutureInstigationTick>;
};

export type Graph = SolidContainer & {
  __typename: 'Graph';
  description: Maybe<Scalars['String']>;
  id: Scalars['ID'];
  modes: Array<Mode>;
  name: Scalars['String'];
  solidHandle: Maybe<SolidHandle>;
  solidHandles: Array<SolidHandle>;
  solids: Array<Solid>;
};


export type GraphSolidHandleArgs = {
  handleID: Scalars['String'];
};


export type GraphSolidHandlesArgs = {
  parentHandleID?: InputMaybe<Scalars['String']>;
};

export type GraphNotFoundError = Error & {
  __typename: 'GraphNotFoundError';
  graphName: Scalars['String'];
  message: Scalars['String'];
  repositoryLocationName: Scalars['String'];
  repositoryName: Scalars['String'];
};

export type GraphOrError = Graph | GraphNotFoundError | PythonError;

export type GraphSelector = {
  graphName: Scalars['String'];
  repositoryLocationName: Scalars['String'];
  repositoryName: Scalars['String'];
};

export type HandledOutputEvent = DisplayableEvent & MessageEvent & StepEvent & {
  __typename: 'HandledOutputEvent';
  description: Maybe<Scalars['String']>;
  eventType: Maybe<DagsterEventType>;
  label: Maybe<Scalars['String']>;
  level: LogLevel;
  managerKey: Scalars['String'];
  message: Scalars['String'];
  metadataEntries: Array<MetadataEntry>;
  outputName: Scalars['String'];
  runId: Scalars['String'];
  solidHandleID: Maybe<Scalars['String']>;
  stepKey: Maybe<Scalars['String']>;
  timestamp: Scalars['String'];
};

export type HookCompletedEvent = MessageEvent & StepEvent & {
  __typename: 'HookCompletedEvent';
  eventType: Maybe<DagsterEventType>;
  level: LogLevel;
  message: Scalars['String'];
  runId: Scalars['String'];
  solidHandleID: Maybe<Scalars['String']>;
  stepKey: Maybe<Scalars['String']>;
  timestamp: Scalars['String'];
};

export type HookErroredEvent = ErrorEvent & MessageEvent & StepEvent & {
  __typename: 'HookErroredEvent';
  error: Maybe<PythonError>;
  eventType: Maybe<DagsterEventType>;
  level: LogLevel;
  message: Scalars['String'];
  runId: Scalars['String'];
  solidHandleID: Maybe<Scalars['String']>;
  stepKey: Maybe<Scalars['String']>;
  timestamp: Scalars['String'];
};

export type HookSkippedEvent = MessageEvent & StepEvent & {
  __typename: 'HookSkippedEvent';
  eventType: Maybe<DagsterEventType>;
  level: LogLevel;
  message: Scalars['String'];
  runId: Scalars['String'];
  solidHandleID: Maybe<Scalars['String']>;
  stepKey: Maybe<Scalars['String']>;
  timestamp: Scalars['String'];
};

export type IPipelineSnapshot = {
  dagsterTypeOrError: DagsterTypeOrError;
  dagsterTypes: Array<DagsterType>;
  description: Maybe<Scalars['String']>;
  graphName: Scalars['String'];
  metadataEntries: Array<MetadataEntry>;
  modes: Array<Mode>;
  name: Scalars['String'];
  parentSnapshotId: Maybe<Scalars['String']>;
  pipelineSnapshotId: Scalars['String'];
  runs: Array<Run>;
  schedules: Array<Schedule>;
  sensors: Array<Sensor>;
  solidHandle: Maybe<SolidHandle>;
  solidHandles: Array<SolidHandle>;
  solids: Array<Solid>;
  tags: Array<PipelineTag>;
};


export type IPipelineSnapshotDagsterTypeOrErrorArgs = {
  dagsterTypeName: Scalars['String'];
};


export type IPipelineSnapshotRunsArgs = {
  cursor?: InputMaybe<Scalars['String']>;
  limit?: InputMaybe<Scalars['Int']>;
};


export type IPipelineSnapshotSolidHandleArgs = {
  handleID: Scalars['String'];
};


export type IPipelineSnapshotSolidHandlesArgs = {
  parentHandleID?: InputMaybe<Scalars['String']>;
};

export type ISolidDefinition = {
  assetNodes: Array<AssetNode>;
  description: Maybe<Scalars['String']>;
  inputDefinitions: Array<InputDefinition>;
  metadata: Array<MetadataItemDefinition>;
  name: Scalars['String'];
  outputDefinitions: Array<OutputDefinition>;
};

export type Input = {
  __typename: 'Input';
  definition: InputDefinition;
  dependsOn: Array<Output>;
  isDynamicCollect: Scalars['Boolean'];
  solid: Solid;
};

export type InputDefinition = {
  __typename: 'InputDefinition';
  description: Maybe<Scalars['String']>;
  metadataEntries: Array<MetadataEntry>;
  name: Scalars['String'];
  solidDefinition: SolidDefinition;
  type: DagsterType;
};

export type InputMapping = {
  __typename: 'InputMapping';
  definition: InputDefinition;
  mappedInput: Input;
};

export type InputTag = {
  name: Scalars['String'];
  value: Scalars['String'];
};

export type Instance = {
  __typename: 'Instance';
  daemonHealth: DaemonHealth;
  executablePath: Scalars['String'];
  hasCapturedLogManager: Scalars['Boolean'];
  hasInfo: Scalars['Boolean'];
  info: Maybe<Scalars['String']>;
  runLauncher: Maybe<RunLauncher>;
  runQueuingSupported: Scalars['Boolean'];
};

export type InstigationEvent = {
  __typename: 'InstigationEvent';
  level: LogLevel;
  message: Scalars['String'];
  timestamp: Scalars['String'];
};

export type InstigationEventConnection = {
  __typename: 'InstigationEventConnection';
  cursor: Scalars['String'];
  events: Array<InstigationEvent>;
  hasMore: Scalars['Boolean'];
};

export type InstigationSelector = {
  name: Scalars['String'];
  repositoryLocationName: Scalars['String'];
  repositoryName: Scalars['String'];
};

export type InstigationState = {
  __typename: 'InstigationState';
  id: Scalars['ID'];
  instigationType: InstigationType;
  name: Scalars['String'];
  nextTick: Maybe<FutureInstigationTick>;
  repositoryLocationName: Scalars['String'];
  repositoryName: Scalars['String'];
  repositoryOrigin: RepositoryOrigin;
  runningCount: Scalars['Int'];
  runs: Array<Run>;
  runsCount: Scalars['Int'];
  selectorId: Scalars['String'];
  status: InstigationStatus;
  tick: Maybe<InstigationTick>;
  ticks: Array<InstigationTick>;
  typeSpecificData: Maybe<InstigationTypeSpecificData>;
};


export type InstigationStateRunsArgs = {
  limit?: InputMaybe<Scalars['Int']>;
};


export type InstigationStateTickArgs = {
  timestamp?: InputMaybe<Scalars['Float']>;
};


export type InstigationStateTicksArgs = {
  cursor?: InputMaybe<Scalars['String']>;
  dayOffset?: InputMaybe<Scalars['Int']>;
  dayRange?: InputMaybe<Scalars['Int']>;
  limit?: InputMaybe<Scalars['Int']>;
  statuses?: InputMaybe<Array<InstigationTickStatus>>;
};

export type InstigationStateNotFoundError = Error & {
  __typename: 'InstigationStateNotFoundError';
  message: Scalars['String'];
  name: Scalars['String'];
};

export type InstigationStateOrError = InstigationState | InstigationStateNotFoundError | PythonError;

export type InstigationStates = {
  __typename: 'InstigationStates';
  results: Array<InstigationState>;
};

export type InstigationStatesOrError = InstigationStates | PythonError;

export enum InstigationStatus {
  RUNNING = 'RUNNING',
  STOPPED = 'STOPPED'
}

export type InstigationTick = {
  __typename: 'InstigationTick';
  cursor: Maybe<Scalars['String']>;
  error: Maybe<PythonError>;
  id: Scalars['ID'];
  logEvents: InstigationEventConnection;
  logKey: Maybe<Array<Scalars['String']>>;
  originRunIds: Array<Scalars['String']>;
  runIds: Array<Scalars['String']>;
  runKeys: Array<Scalars['String']>;
  runs: Array<Run>;
  skipReason: Maybe<Scalars['String']>;
  status: InstigationTickStatus;
  timestamp: Scalars['Float'];
};

export enum InstigationTickStatus {
  FAILURE = 'FAILURE',
  SKIPPED = 'SKIPPED',
  STARTED = 'STARTED',
  SUCCESS = 'SUCCESS'
}

export enum InstigationType {
  SCHEDULE = 'SCHEDULE',
  SENSOR = 'SENSOR'
}

export type InstigationTypeSpecificData = ScheduleData | SensorData;

export type InstigatorSelector = {
  instigatorType: Scalars['String'];
  repositoryLocationName: Scalars['String'];
  repositoryName: Scalars['String'];
  scheduleName: Scalars['String'];
};

export type IntMetadataEntry = MetadataEntry & {
  __typename: 'IntMetadataEntry';
  description: Maybe<Scalars['String']>;
  intRepr: Scalars['String'];
  intValue: Maybe<Scalars['Int']>;
  label: Scalars['String'];
};

export type InvalidOutputError = {
  __typename: 'InvalidOutputError';
  invalidOutputName: Scalars['String'];
  stepKey: Scalars['String'];
};

export type InvalidPipelineRunsFilterError = Error & {
  __typename: 'InvalidPipelineRunsFilterError';
  message: Scalars['String'];
};

export type InvalidStepError = {
  __typename: 'InvalidStepError';
  invalidStepKey: Scalars['String'];
};

export type InvalidSubsetError = Error & {
  __typename: 'InvalidSubsetError';
  message: Scalars['String'];
  pipeline: Pipeline;
};

export type Job = IPipelineSnapshot & SolidContainer & {
  __typename: 'Job';
  dagsterTypeOrError: DagsterTypeOrError;
  dagsterTypes: Array<DagsterType>;
  description: Maybe<Scalars['String']>;
  graphName: Scalars['String'];
  id: Scalars['ID'];
  isAssetJob: Scalars['Boolean'];
  isJob: Scalars['Boolean'];
  metadataEntries: Array<MetadataEntry>;
  modes: Array<Mode>;
  name: Scalars['String'];
  parentSnapshotId: Maybe<Scalars['String']>;
  pipelineSnapshotId: Scalars['String'];
  presets: Array<PipelinePreset>;
  repository: Repository;
  runs: Array<Run>;
  schedules: Array<Schedule>;
  sensors: Array<Sensor>;
  solidHandle: Maybe<SolidHandle>;
  solidHandles: Array<SolidHandle>;
  solids: Array<Solid>;
  tags: Array<PipelineTag>;
};


export type JobDagsterTypeOrErrorArgs = {
  dagsterTypeName: Scalars['String'];
};


export type JobRunsArgs = {
  cursor?: InputMaybe<Scalars['String']>;
  limit?: InputMaybe<Scalars['Int']>;
};


export type JobSolidHandleArgs = {
  handleID: Scalars['String'];
};


export type JobSolidHandlesArgs = {
  parentHandleID?: InputMaybe<Scalars['String']>;
};

export type JobOrPipelineSelector = {
  assetSelection?: InputMaybe<Array<AssetKeyInput>>;
  jobName?: InputMaybe<Scalars['String']>;
  pipelineName?: InputMaybe<Scalars['String']>;
  repositoryLocationName: Scalars['String'];
  repositoryName: Scalars['String'];
  solidSelection?: InputMaybe<Array<Scalars['String']>>;
};

export type JsonMetadataEntry = MetadataEntry & {
  __typename: 'JsonMetadataEntry';
  description: Maybe<Scalars['String']>;
  jsonString: Scalars['String'];
  label: Scalars['String'];
};

export type LaunchBackfillMutation = {
  __typename: 'LaunchBackfillMutation';
  Output: LaunchBackfillResult;
};

export type LaunchBackfillParams = {
  allPartitions?: InputMaybe<Scalars['Boolean']>;
  assetSelection?: InputMaybe<Array<AssetKeyInput>>;
  forceSynchronousSubmission?: InputMaybe<Scalars['Boolean']>;
  fromFailure?: InputMaybe<Scalars['Boolean']>;
  partitionNames?: InputMaybe<Array<Scalars['String']>>;
  reexecutionSteps?: InputMaybe<Array<Scalars['String']>>;
  selector?: InputMaybe<PartitionSetSelector>;
  tags?: InputMaybe<Array<ExecutionTag>>;
};

export type LaunchBackfillResult = ConflictingExecutionParamsError | InvalidOutputError | InvalidStepError | InvalidSubsetError | LaunchBackfillSuccess | NoModeProvidedError | PartitionSetNotFoundError | PipelineNotFoundError | PresetNotFoundError | PythonError | RunConfigValidationInvalid | RunConflict | UnauthorizedError;

export type LaunchBackfillSuccess = {
  __typename: 'LaunchBackfillSuccess';
  backfillId: Scalars['String'];
  launchedRunIds: Maybe<Array<Maybe<Scalars['String']>>>;
};

export type LaunchPipelineRunSuccess = {
  run: Run;
};

export type LaunchRunMutation = {
  __typename: 'LaunchRunMutation';
  Output: LaunchRunResult;
};

export type LaunchRunReexecutionMutation = {
  __typename: 'LaunchRunReexecutionMutation';
  Output: LaunchRunReexecutionResult;
};

export type LaunchRunReexecutionResult = ConflictingExecutionParamsError | InvalidOutputError | InvalidStepError | InvalidSubsetError | LaunchRunSuccess | NoModeProvidedError | PipelineNotFoundError | PresetNotFoundError | PythonError | RunConfigValidationInvalid | RunConflict | UnauthorizedError;

export type LaunchRunResult = ConflictingExecutionParamsError | InvalidOutputError | InvalidStepError | InvalidSubsetError | LaunchRunSuccess | NoModeProvidedError | PipelineNotFoundError | PresetNotFoundError | PythonError | RunConfigValidationInvalid | RunConflict | UnauthorizedError;

export type LaunchRunSuccess = LaunchPipelineRunSuccess & {
  __typename: 'LaunchRunSuccess';
  run: Run;
};

export type ListDagsterType = DagsterType & WrappingDagsterType & {
  __typename: 'ListDagsterType';
  description: Maybe<Scalars['String']>;
  displayName: Scalars['String'];
  innerTypes: Array<DagsterType>;
  inputSchemaType: Maybe<ConfigType>;
  isBuiltin: Scalars['Boolean'];
  isList: Scalars['Boolean'];
  isNothing: Scalars['Boolean'];
  isNullable: Scalars['Boolean'];
  key: Scalars['String'];
  metadataEntries: Array<MetadataEntry>;
  name: Maybe<Scalars['String']>;
  ofType: DagsterType;
  outputSchemaType: Maybe<ConfigType>;
};

export type LoadedInputEvent = DisplayableEvent & MessageEvent & StepEvent & {
  __typename: 'LoadedInputEvent';
  description: Maybe<Scalars['String']>;
  eventType: Maybe<DagsterEventType>;
  inputName: Scalars['String'];
  label: Maybe<Scalars['String']>;
  level: LogLevel;
  managerKey: Scalars['String'];
  message: Scalars['String'];
  metadataEntries: Array<MetadataEntry>;
  runId: Scalars['String'];
  solidHandleID: Maybe<Scalars['String']>;
  stepKey: Maybe<Scalars['String']>;
  timestamp: Scalars['String'];
  upstreamOutputName: Maybe<Scalars['String']>;
  upstreamStepKey: Maybe<Scalars['String']>;
};

export type LocationStateChangeEvent = {
  __typename: 'LocationStateChangeEvent';
  eventType: LocationStateChangeEventType;
  locationName: Scalars['String'];
  message: Scalars['String'];
  serverId: Maybe<Scalars['String']>;
};

export enum LocationStateChangeEventType {
  LOCATION_DISCONNECTED = 'LOCATION_DISCONNECTED',
  LOCATION_ERROR = 'LOCATION_ERROR',
  LOCATION_RECONNECTED = 'LOCATION_RECONNECTED',
  LOCATION_UPDATED = 'LOCATION_UPDATED'
}

export type LocationStateChangeSubscription = {
  __typename: 'LocationStateChangeSubscription';
  event: LocationStateChangeEvent;
};

export enum LogLevel {
  CRITICAL = 'CRITICAL',
  DEBUG = 'DEBUG',
  ERROR = 'ERROR',
  INFO = 'INFO',
  WARNING = 'WARNING'
}

export type LogMessageEvent = MessageEvent & {
  __typename: 'LogMessageEvent';
  eventType: Maybe<DagsterEventType>;
  level: LogLevel;
  message: Scalars['String'];
  runId: Scalars['String'];
  solidHandleID: Maybe<Scalars['String']>;
  stepKey: Maybe<Scalars['String']>;
  timestamp: Scalars['String'];
};

export type LogTelemetryMutationResult = LogTelemetrySuccess | PythonError;

export type LogTelemetrySuccess = {
  __typename: 'LogTelemetrySuccess';
  action: Scalars['String'];
};

export type Logger = {
  __typename: 'Logger';
  configField: Maybe<ConfigTypeField>;
  description: Maybe<Scalars['String']>;
  name: Scalars['String'];
};

export type LogsCapturedEvent = MessageEvent & {
  __typename: 'LogsCapturedEvent';
  eventType: Maybe<DagsterEventType>;
  externalUrl: Maybe<Scalars['String']>;
  fileKey: Scalars['String'];
  level: LogLevel;
  logKey: Scalars['String'];
  message: Scalars['String'];
  pid: Maybe<Scalars['Int']>;
  runId: Scalars['String'];
  solidHandleID: Maybe<Scalars['String']>;
  stepKey: Maybe<Scalars['String']>;
  stepKeys: Maybe<Array<Scalars['String']>>;
  timestamp: Scalars['String'];
};

export type MapConfigType = ConfigType & {
  __typename: 'MapConfigType';
  description: Maybe<Scalars['String']>;
  isSelector: Scalars['Boolean'];
  key: Scalars['String'];
  keyLabelName: Maybe<Scalars['String']>;
  keyType: ConfigType;
  recursiveConfigTypes: Array<ConfigType>;
  typeParamKeys: Array<Scalars['String']>;
  valueType: ConfigType;
};

export type MarkdownMetadataEntry = MetadataEntry & {
  __typename: 'MarkdownMetadataEntry';
  description: Maybe<Scalars['String']>;
  label: Scalars['String'];
  mdStr: Scalars['String'];
};

export type MarkerEvent = {
  markerEnd: Maybe<Scalars['String']>;
  markerStart: Maybe<Scalars['String']>;
};

export type MarshalledInput = {
  inputName: Scalars['String'];
  key: Scalars['String'];
};

export type MarshalledOutput = {
  key: Scalars['String'];
  outputName: Scalars['String'];
};

export type MaterializationCountGroupedByDimension = {
  __typename: 'MaterializationCountGroupedByDimension';
  materializationCountsGrouped: Array<Array<Scalars['Int']>>;
};

export type MaterializationCountSingleDimension = {
  __typename: 'MaterializationCountSingleDimension';
  materializationCounts: Array<Scalars['Int']>;
};

export type MaterializationEvent = DisplayableEvent & MessageEvent & StepEvent & {
  __typename: 'MaterializationEvent';
  assetKey: Maybe<AssetKey>;
  assetLineage: Array<AssetLineageInfo>;
  description: Maybe<Scalars['String']>;
  eventType: Maybe<DagsterEventType>;
  label: Maybe<Scalars['String']>;
  level: LogLevel;
  message: Scalars['String'];
  metadataEntries: Array<MetadataEntry>;
  partition: Maybe<Scalars['String']>;
  runId: Scalars['String'];
  runOrError: RunOrError;
  solidHandleID: Maybe<Scalars['String']>;
  stepKey: Maybe<Scalars['String']>;
  stepStats: RunStepStats;
  timestamp: Scalars['String'];
};

export type MessageEvent = {
  eventType: Maybe<DagsterEventType>;
  level: LogLevel;
  message: Scalars['String'];
  runId: Scalars['String'];
  solidHandleID: Maybe<Scalars['String']>;
  stepKey: Maybe<Scalars['String']>;
  timestamp: Scalars['String'];
};

export type MetadataEntry = {
  description: Maybe<Scalars['String']>;
  label: Scalars['String'];
};

export type MetadataItemDefinition = {
  __typename: 'MetadataItemDefinition';
  key: Scalars['String'];
  value: Scalars['String'];
};

export type MissingFieldConfigError = PipelineConfigValidationError & {
  __typename: 'MissingFieldConfigError';
  field: ConfigTypeField;
  message: Scalars['String'];
  path: Array<Scalars['String']>;
  reason: EvaluationErrorReason;
  stack: EvaluationStack;
};

export type MissingFieldsConfigError = PipelineConfigValidationError & {
  __typename: 'MissingFieldsConfigError';
  fields: Array<ConfigTypeField>;
  message: Scalars['String'];
  path: Array<Scalars['String']>;
  reason: EvaluationErrorReason;
  stack: EvaluationStack;
};

export type MissingRunIdErrorEvent = {
  __typename: 'MissingRunIdErrorEvent';
  invalidRunId: Scalars['String'];
};

export type Mode = {
  __typename: 'Mode';
  description: Maybe<Scalars['String']>;
  id: Scalars['String'];
  loggers: Array<Logger>;
  name: Scalars['String'];
  resources: Array<Resource>;
};

export type ModeNotFoundError = Error & {
  __typename: 'ModeNotFoundError';
  message: Scalars['String'];
  mode: Scalars['String'];
};

export type NoModeProvidedError = Error & {
  __typename: 'NoModeProvidedError';
  message: Scalars['String'];
  pipelineName: Scalars['String'];
};

export type NodeInvocationSite = {
  __typename: 'NodeInvocationSite';
  pipeline: Pipeline;
  solidHandle: SolidHandle;
};

export type NotebookMetadataEntry = MetadataEntry & {
  __typename: 'NotebookMetadataEntry';
  description: Maybe<Scalars['String']>;
  label: Scalars['String'];
  path: Scalars['String'];
};

export type NullMetadataEntry = MetadataEntry & {
  __typename: 'NullMetadataEntry';
  description: Maybe<Scalars['String']>;
  label: Scalars['String'];
};

export type NullableConfigType = ConfigType & WrappingConfigType & {
  __typename: 'NullableConfigType';
  description: Maybe<Scalars['String']>;
  isSelector: Scalars['Boolean'];
  key: Scalars['String'];
  ofType: ConfigType;
  recursiveConfigTypes: Array<ConfigType>;
  typeParamKeys: Array<Scalars['String']>;
};

export type NullableDagsterType = DagsterType & WrappingDagsterType & {
  __typename: 'NullableDagsterType';
  description: Maybe<Scalars['String']>;
  displayName: Scalars['String'];
  innerTypes: Array<DagsterType>;
  inputSchemaType: Maybe<ConfigType>;
  isBuiltin: Scalars['Boolean'];
  isList: Scalars['Boolean'];
  isNothing: Scalars['Boolean'];
  isNullable: Scalars['Boolean'];
  key: Scalars['String'];
  metadataEntries: Array<MetadataEntry>;
  name: Maybe<Scalars['String']>;
  ofType: DagsterType;
  outputSchemaType: Maybe<ConfigType>;
};

export type ObjectStoreOperationEvent = MessageEvent & StepEvent & {
  __typename: 'ObjectStoreOperationEvent';
  eventType: Maybe<DagsterEventType>;
  level: LogLevel;
  message: Scalars['String'];
  operationResult: ObjectStoreOperationResult;
  runId: Scalars['String'];
  solidHandleID: Maybe<Scalars['String']>;
  stepKey: Maybe<Scalars['String']>;
  timestamp: Scalars['String'];
};

export type ObjectStoreOperationResult = DisplayableEvent & {
  __typename: 'ObjectStoreOperationResult';
  description: Maybe<Scalars['String']>;
  label: Maybe<Scalars['String']>;
  metadataEntries: Array<MetadataEntry>;
  op: ObjectStoreOperationType;
};

export enum ObjectStoreOperationType {
  CP_OBJECT = 'CP_OBJECT',
  GET_OBJECT = 'GET_OBJECT',
  RM_OBJECT = 'RM_OBJECT',
  SET_OBJECT = 'SET_OBJECT'
}

export type ObservationEvent = DisplayableEvent & MessageEvent & StepEvent & {
  __typename: 'ObservationEvent';
  assetKey: Maybe<AssetKey>;
  description: Maybe<Scalars['String']>;
  eventType: Maybe<DagsterEventType>;
  label: Maybe<Scalars['String']>;
  level: LogLevel;
  message: Scalars['String'];
  metadataEntries: Array<MetadataEntry>;
  partition: Maybe<Scalars['String']>;
  runId: Scalars['String'];
  runOrError: RunOrError;
  solidHandleID: Maybe<Scalars['String']>;
  stepKey: Maybe<Scalars['String']>;
  stepStats: RunStepStats;
  timestamp: Scalars['String'];
};

export type Output = {
  __typename: 'Output';
  definition: OutputDefinition;
  dependedBy: Array<Input>;
  solid: Solid;
};

export type OutputDefinition = {
  __typename: 'OutputDefinition';
  description: Maybe<Scalars['String']>;
  isDynamic: Maybe<Scalars['Boolean']>;
  metadataEntries: Array<MetadataEntry>;
  name: Scalars['String'];
  solidDefinition: SolidDefinition;
  type: DagsterType;
};

export type OutputMapping = {
  __typename: 'OutputMapping';
  definition: OutputDefinition;
  mappedOutput: Output;
};

export type Partition = {
  __typename: 'Partition';
  mode: Scalars['String'];
  name: Scalars['String'];
  partitionSetName: Scalars['String'];
  runConfigOrError: PartitionRunConfigOrError;
  runs: Array<Run>;
  solidSelection: Maybe<Array<Scalars['String']>>;
  status: Maybe<RunStatus>;
  tagsOrError: PartitionTagsOrError;
};


export type PartitionRunsArgs = {
  cursor?: InputMaybe<Scalars['String']>;
  filter?: InputMaybe<RunsFilter>;
  limit?: InputMaybe<Scalars['Int']>;
};

export type PartitionBackfill = {
  __typename: 'PartitionBackfill';
  assetSelection: Maybe<Array<AssetKey>>;
  backfillId: Scalars['String'];
  error: Maybe<PythonError>;
  fromFailure: Scalars['Boolean'];
  numCancelable: Scalars['Int'];
  numPartitions: Scalars['Int'];
  partitionNames: Array<Scalars['String']>;
  partitionSet: Maybe<PartitionSet>;
  partitionSetName: Maybe<Scalars['String']>;
  partitionStatuses: PartitionStatuses;
  reexecutionSteps: Maybe<Array<Scalars['String']>>;
  runs: Array<Run>;
  status: BulkActionStatus;
  timestamp: Scalars['Float'];
  unfinishedRuns: Array<Run>;
};


export type PartitionBackfillRunsArgs = {
  limit?: InputMaybe<Scalars['Int']>;
};


export type PartitionBackfillUnfinishedRunsArgs = {
  limit?: InputMaybe<Scalars['Int']>;
};

export type PartitionBackfillOrError = PartitionBackfill | PythonError;

export type PartitionBackfills = {
  __typename: 'PartitionBackfills';
  results: Array<PartitionBackfill>;
};

export type PartitionBackfillsOrError = PartitionBackfills | PythonError;

export type PartitionDefinition = {
  __typename: 'PartitionDefinition';
  description: Scalars['String'];
  dimensionTypes: Array<DimensionDefinitionType>;
  type: PartitionDefinitionType;
};

export enum PartitionDefinitionType {
  MULTIPARTITIONED = 'MULTIPARTITIONED',
  STATIC = 'STATIC',
  TIME_WINDOW = 'TIME_WINDOW'
}

export type PartitionMaterializationCounts = MaterializationCountGroupedByDimension | MaterializationCountSingleDimension;

export type PartitionRun = {
  __typename: 'PartitionRun';
  id: Scalars['String'];
  partitionName: Scalars['String'];
  run: Maybe<Run>;
};

export type PartitionRunConfig = {
  __typename: 'PartitionRunConfig';
  yaml: Scalars['String'];
};

export type PartitionRunConfigOrError = PartitionRunConfig | PythonError;

export type PartitionSet = {
  __typename: 'PartitionSet';
  backfills: Array<PartitionBackfill>;
  id: Scalars['ID'];
  mode: Scalars['String'];
  name: Scalars['String'];
  partition: Maybe<Partition>;
  partitionRuns: Array<PartitionRun>;
  partitionStatusesOrError: PartitionStatusesOrError;
  partitionsOrError: PartitionsOrError;
  pipelineName: Scalars['String'];
  repositoryOrigin: RepositoryOrigin;
  solidSelection: Maybe<Array<Scalars['String']>>;
};


export type PartitionSetBackfillsArgs = {
  cursor?: InputMaybe<Scalars['String']>;
  limit?: InputMaybe<Scalars['Int']>;
};


export type PartitionSetPartitionArgs = {
  partitionName: Scalars['String'];
};


export type PartitionSetPartitionsOrErrorArgs = {
  cursor?: InputMaybe<Scalars['String']>;
  limit?: InputMaybe<Scalars['Int']>;
  reverse?: InputMaybe<Scalars['Boolean']>;
};

export type PartitionSetNotFoundError = Error & {
  __typename: 'PartitionSetNotFoundError';
  message: Scalars['String'];
  partitionSetName: Scalars['String'];
};

export type PartitionSetOrError = PartitionSet | PartitionSetNotFoundError | PythonError;

export type PartitionSetSelector = {
  partitionSetName: Scalars['String'];
  repositorySelector: RepositorySelector;
};

export type PartitionSets = {
  __typename: 'PartitionSets';
  results: Array<PartitionSet>;
};

export type PartitionSetsOrError = PartitionSets | PipelineNotFoundError | PythonError;

export type PartitionStatus = {
  __typename: 'PartitionStatus';
  id: Scalars['String'];
  partitionName: Scalars['String'];
  runDuration: Maybe<Scalars['Float']>;
  runId: Maybe<Scalars['String']>;
  runStatus: Maybe<RunStatus>;
};

export type PartitionStatuses = {
  __typename: 'PartitionStatuses';
  results: Array<PartitionStatus>;
};

export type PartitionStatusesOrError = PartitionStatuses | PythonError;

export type PartitionTags = {
  __typename: 'PartitionTags';
  results: Array<PipelineTag>;
};

export type PartitionTagsOrError = PartitionTags | PythonError;

export type Partitions = {
  __typename: 'Partitions';
  results: Array<Partition>;
};

export type PartitionsOrError = Partitions | PythonError;

export type PathMetadataEntry = MetadataEntry & {
  __typename: 'PathMetadataEntry';
  description: Maybe<Scalars['String']>;
  label: Scalars['String'];
  path: Scalars['String'];
};

export type Permission = {
  __typename: 'Permission';
  disabledReason: Maybe<Scalars['String']>;
  permission: Scalars['String'];
  value: Scalars['Boolean'];
};

export type Pipeline = IPipelineSnapshot & SolidContainer & {
  __typename: 'Pipeline';
  dagsterTypeOrError: DagsterTypeOrError;
  dagsterTypes: Array<DagsterType>;
  description: Maybe<Scalars['String']>;
  graphName: Scalars['String'];
  id: Scalars['ID'];
  isAssetJob: Scalars['Boolean'];
  isJob: Scalars['Boolean'];
  metadataEntries: Array<MetadataEntry>;
  modes: Array<Mode>;
  name: Scalars['String'];
  parentSnapshotId: Maybe<Scalars['String']>;
  pipelineSnapshotId: Scalars['String'];
  presets: Array<PipelinePreset>;
  repository: Repository;
  runs: Array<Run>;
  schedules: Array<Schedule>;
  sensors: Array<Sensor>;
  solidHandle: Maybe<SolidHandle>;
  solidHandles: Array<SolidHandle>;
  solids: Array<Solid>;
  tags: Array<PipelineTag>;
};


export type PipelineDagsterTypeOrErrorArgs = {
  dagsterTypeName: Scalars['String'];
};


export type PipelineRunsArgs = {
  cursor?: InputMaybe<Scalars['String']>;
  limit?: InputMaybe<Scalars['Int']>;
};


export type PipelineSolidHandleArgs = {
  handleID: Scalars['String'];
};


export type PipelineSolidHandlesArgs = {
  parentHandleID?: InputMaybe<Scalars['String']>;
};

export type PipelineConfigValidationError = {
  message: Scalars['String'];
  path: Array<Scalars['String']>;
  reason: EvaluationErrorReason;
  stack: EvaluationStack;
};

export type PipelineConfigValidationInvalid = {
  errors: Array<PipelineConfigValidationError>;
  pipelineName: Scalars['String'];
};

export type PipelineConfigValidationResult = InvalidSubsetError | PipelineConfigValidationValid | PipelineNotFoundError | PythonError | RunConfigValidationInvalid;

export type PipelineConfigValidationValid = {
  __typename: 'PipelineConfigValidationValid';
  pipelineName: Scalars['String'];
};

export type PipelineNotFoundError = Error & {
  __typename: 'PipelineNotFoundError';
  message: Scalars['String'];
  pipelineName: Scalars['String'];
  repositoryLocationName: Scalars['String'];
  repositoryName: Scalars['String'];
};

export type PipelineOrError = InvalidSubsetError | Pipeline | PipelineNotFoundError | PythonError;

export type PipelinePreset = {
  __typename: 'PipelinePreset';
  mode: Scalars['String'];
  name: Scalars['String'];
  runConfigYaml: Scalars['String'];
  solidSelection: Maybe<Array<Scalars['String']>>;
  tags: Array<PipelineTag>;
};

export type PipelineReference = {
  name: Scalars['String'];
  solidSelection: Maybe<Array<Scalars['String']>>;
};

export type PipelineRun = {
  assets: Array<Asset>;
  canTerminate: Scalars['Boolean'];
  capturedLogs: CapturedLogs;
  computeLogs: ComputeLogs;
  eventConnection: EventConnection;
  executionPlan: Maybe<ExecutionPlan>;
  id: Scalars['ID'];
  jobName: Scalars['String'];
  mode: Scalars['String'];
  parentRunId: Maybe<Scalars['String']>;
  pipeline: PipelineReference;
  pipelineName: Scalars['String'];
  pipelineSnapshotId: Maybe<Scalars['String']>;
  repositoryOrigin: Maybe<RepositoryOrigin>;
  rootRunId: Maybe<Scalars['String']>;
  runConfig: Scalars['RunConfigData'];
  runConfigYaml: Scalars['String'];
  runId: Scalars['String'];
  solidSelection: Maybe<Array<Scalars['String']>>;
  stats: RunStatsSnapshotOrError;
  status: RunStatus;
  stepKeysToExecute: Maybe<Array<Scalars['String']>>;
  stepStats: Array<RunStepStats>;
  tags: Array<PipelineTag>;
};


export type PipelineRunCapturedLogsArgs = {
  fileKey: Scalars['String'];
};


export type PipelineRunComputeLogsArgs = {
  stepKey: Scalars['String'];
};


export type PipelineRunEventConnectionArgs = {
  afterCursor?: InputMaybe<Scalars['String']>;
};

export type PipelineRunConflict = {
  message: Scalars['String'];
};

export type PipelineRunLogsSubscriptionFailure = {
  __typename: 'PipelineRunLogsSubscriptionFailure';
  message: Scalars['String'];
  missingRunId: Maybe<Scalars['String']>;
};

export type PipelineRunLogsSubscriptionPayload = PipelineRunLogsSubscriptionFailure | PipelineRunLogsSubscriptionSuccess;

export type PipelineRunLogsSubscriptionSuccess = {
  __typename: 'PipelineRunLogsSubscriptionSuccess';
  cursor: Scalars['String'];
  hasMorePastEvents: Scalars['Boolean'];
  messages: Array<DagsterRunEvent>;
  run: Run;
};

export type PipelineRunMetadataEntry = MetadataEntry & {
  __typename: 'PipelineRunMetadataEntry';
  description: Maybe<Scalars['String']>;
  label: Scalars['String'];
  runId: Scalars['String'];
};

export type PipelineRunNotFoundError = {
  message: Scalars['String'];
  runId: Scalars['String'];
};

export type PipelineRunStatsSnapshot = {
  endTime: Maybe<Scalars['Float']>;
  enqueuedTime: Maybe<Scalars['Float']>;
  expectations: Scalars['Int'];
  id: Scalars['String'];
  launchTime: Maybe<Scalars['Float']>;
  materializations: Scalars['Int'];
  runId: Scalars['String'];
  startTime: Maybe<Scalars['Float']>;
  stepsFailed: Scalars['Int'];
  stepsSucceeded: Scalars['Int'];
};

export type PipelineRunStepStats = {
  endTime: Maybe<Scalars['Float']>;
  expectationResults: Array<ExpectationResult>;
  materializations: Array<MaterializationEvent>;
  runId: Scalars['String'];
  startTime: Maybe<Scalars['Float']>;
  status: Maybe<StepEventStatus>;
  stepKey: Scalars['String'];
};

export type PipelineRuns = {
  count: Maybe<Scalars['Int']>;
  results: Array<Run>;
};

export type PipelineSelector = {
  assetSelection?: InputMaybe<Array<AssetKeyInput>>;
  pipelineName: Scalars['String'];
  repositoryLocationName: Scalars['String'];
  repositoryName: Scalars['String'];
  solidSelection?: InputMaybe<Array<Scalars['String']>>;
};

export type PipelineSnapshot = IPipelineSnapshot & PipelineReference & SolidContainer & {
  __typename: 'PipelineSnapshot';
  dagsterTypeOrError: DagsterTypeOrError;
  dagsterTypes: Array<DagsterType>;
  description: Maybe<Scalars['String']>;
  graphName: Scalars['String'];
  id: Scalars['ID'];
  metadataEntries: Array<MetadataEntry>;
  modes: Array<Mode>;
  name: Scalars['String'];
  parentSnapshotId: Maybe<Scalars['String']>;
  pipelineSnapshotId: Scalars['String'];
  runs: Array<Run>;
  schedules: Array<Schedule>;
  sensors: Array<Sensor>;
  solidHandle: Maybe<SolidHandle>;
  solidHandles: Array<SolidHandle>;
  solidSelection: Maybe<Array<Scalars['String']>>;
  solids: Array<Solid>;
  tags: Array<PipelineTag>;
};


export type PipelineSnapshotDagsterTypeOrErrorArgs = {
  dagsterTypeName: Scalars['String'];
};


export type PipelineSnapshotRunsArgs = {
  cursor?: InputMaybe<Scalars['String']>;
  limit?: InputMaybe<Scalars['Int']>;
};


export type PipelineSnapshotSolidHandleArgs = {
  handleID: Scalars['String'];
};


export type PipelineSnapshotSolidHandlesArgs = {
  parentHandleID?: InputMaybe<Scalars['String']>;
};

export type PipelineSnapshotNotFoundError = Error & {
  __typename: 'PipelineSnapshotNotFoundError';
  message: Scalars['String'];
  snapshotId: Scalars['String'];
};

export type PipelineSnapshotOrError = PipelineNotFoundError | PipelineSnapshot | PipelineSnapshotNotFoundError | PythonError;

export type PipelineTag = {
  __typename: 'PipelineTag';
  key: Scalars['String'];
  value: Scalars['String'];
};

export type PipelineTagAndValues = {
  __typename: 'PipelineTagAndValues';
  key: Scalars['String'];
  values: Array<Scalars['String']>;
};

export type PresetNotFoundError = Error & {
  __typename: 'PresetNotFoundError';
  message: Scalars['String'];
  preset: Scalars['String'];
};

export type PythonArtifactMetadataEntry = MetadataEntry & {
  __typename: 'PythonArtifactMetadataEntry';
  description: Maybe<Scalars['String']>;
  label: Scalars['String'];
  module: Scalars['String'];
  name: Scalars['String'];
};

export type PythonError = Error & {
  __typename: 'PythonError';
  cause: Maybe<PythonError>;
  causes: Array<PythonError>;
  className: Maybe<Scalars['String']>;
  errorChain: Array<ErrorChainLink>;
  message: Scalars['String'];
  stack: Array<Scalars['String']>;
};

export type ReexecutionParams = {
  parentRunId: Scalars['String'];
  strategy: ReexecutionStrategy;
};

export enum ReexecutionStrategy {
  ALL_STEPS = 'ALL_STEPS',
  FROM_FAILURE = 'FROM_FAILURE'
}

export type RegularConfigType = ConfigType & {
  __typename: 'RegularConfigType';
  description: Maybe<Scalars['String']>;
  givenName: Scalars['String'];
  isSelector: Scalars['Boolean'];
  key: Scalars['String'];
  recursiveConfigTypes: Array<ConfigType>;
  typeParamKeys: Array<Scalars['String']>;
};

export type RegularDagsterType = DagsterType & {
  __typename: 'RegularDagsterType';
  description: Maybe<Scalars['String']>;
  displayName: Scalars['String'];
  innerTypes: Array<DagsterType>;
  inputSchemaType: Maybe<ConfigType>;
  isBuiltin: Scalars['Boolean'];
  isList: Scalars['Boolean'];
  isNothing: Scalars['Boolean'];
  isNullable: Scalars['Boolean'];
  key: Scalars['String'];
  metadataEntries: Array<MetadataEntry>;
  name: Maybe<Scalars['String']>;
  outputSchemaType: Maybe<ConfigType>;
};

export type ReloadNotSupported = Error & {
  __typename: 'ReloadNotSupported';
  message: Scalars['String'];
};

export type ReloadRepositoryLocationMutation = {
  __typename: 'ReloadRepositoryLocationMutation';
  Output: ReloadRepositoryLocationMutationResult;
};

export type ReloadRepositoryLocationMutationResult = PythonError | ReloadNotSupported | RepositoryLocationNotFound | UnauthorizedError | WorkspaceLocationEntry;

export type ReloadWorkspaceMutation = {
  __typename: 'ReloadWorkspaceMutation';
  Output: ReloadWorkspaceMutationResult;
};

export type ReloadWorkspaceMutationResult = PythonError | UnauthorizedError | Workspace;

export type RepositoriesOrError = PythonError | RepositoryConnection;

export type Repository = {
  __typename: 'Repository';
  assetGroups: Array<AssetGroup>;
  assetNodes: Array<AssetNode>;
  displayMetadata: Array<RepositoryMetadata>;
  id: Scalars['ID'];
  jobs: Array<Job>;
  location: RepositoryLocation;
  name: Scalars['String'];
  origin: RepositoryOrigin;
  partitionSets: Array<PartitionSet>;
  pipelines: Array<Pipeline>;
  schedules: Array<Schedule>;
  sensors: Array<Sensor>;
  usedSolid: Maybe<UsedSolid>;
  usedSolids: Array<UsedSolid>;
};


export type RepositoryUsedSolidArgs = {
  name: Scalars['String'];
};

export type RepositoryConnection = {
  __typename: 'RepositoryConnection';
  nodes: Array<Repository>;
};

export type RepositoryLocation = {
  __typename: 'RepositoryLocation';
  environmentPath: Maybe<Scalars['String']>;
  id: Scalars['ID'];
  isReloadSupported: Scalars['Boolean'];
  name: Scalars['String'];
  repositories: Array<Repository>;
  serverId: Maybe<Scalars['String']>;
};

export enum RepositoryLocationLoadStatus {
  LOADED = 'LOADED',
  LOADING = 'LOADING'
}

export type RepositoryLocationNotFound = Error & {
  __typename: 'RepositoryLocationNotFound';
  message: Scalars['String'];
};

export type RepositoryLocationOrLoadError = PythonError | RepositoryLocation;

export type RepositoryMetadata = {
  __typename: 'RepositoryMetadata';
  key: Scalars['String'];
  value: Scalars['String'];
};

export type RepositoryNotFoundError = Error & {
  __typename: 'RepositoryNotFoundError';
  message: Scalars['String'];
  repositoryLocationName: Scalars['String'];
  repositoryName: Scalars['String'];
};

export type RepositoryOrError = PythonError | Repository | RepositoryNotFoundError;

export type RepositoryOrigin = {
  __typename: 'RepositoryOrigin';
  id: Scalars['String'];
  repositoryLocationMetadata: Array<RepositoryMetadata>;
  repositoryLocationName: Scalars['String'];
  repositoryName: Scalars['String'];
};

export type RepositorySelector = {
  repositoryLocationName: Scalars['String'];
  repositoryName: Scalars['String'];
};

export type Resource = {
  __typename: 'Resource';
  configField: Maybe<ConfigTypeField>;
  description: Maybe<Scalars['String']>;
  name: Scalars['String'];
};

export type ResourceInitFailureEvent = DisplayableEvent & ErrorEvent & MarkerEvent & MessageEvent & StepEvent & {
  __typename: 'ResourceInitFailureEvent';
  description: Maybe<Scalars['String']>;
  error: Maybe<PythonError>;
  eventType: Maybe<DagsterEventType>;
  label: Maybe<Scalars['String']>;
  level: LogLevel;
  markerEnd: Maybe<Scalars['String']>;
  markerStart: Maybe<Scalars['String']>;
  message: Scalars['String'];
  metadataEntries: Array<MetadataEntry>;
  runId: Scalars['String'];
  solidHandleID: Maybe<Scalars['String']>;
  stepKey: Maybe<Scalars['String']>;
  timestamp: Scalars['String'];
};

export type ResourceInitStartedEvent = DisplayableEvent & MarkerEvent & MessageEvent & StepEvent & {
  __typename: 'ResourceInitStartedEvent';
  description: Maybe<Scalars['String']>;
  eventType: Maybe<DagsterEventType>;
  label: Maybe<Scalars['String']>;
  level: LogLevel;
  markerEnd: Maybe<Scalars['String']>;
  markerStart: Maybe<Scalars['String']>;
  message: Scalars['String'];
  metadataEntries: Array<MetadataEntry>;
  runId: Scalars['String'];
  solidHandleID: Maybe<Scalars['String']>;
  stepKey: Maybe<Scalars['String']>;
  timestamp: Scalars['String'];
};

export type ResourceInitSuccessEvent = DisplayableEvent & MarkerEvent & MessageEvent & StepEvent & {
  __typename: 'ResourceInitSuccessEvent';
  description: Maybe<Scalars['String']>;
  eventType: Maybe<DagsterEventType>;
  label: Maybe<Scalars['String']>;
  level: LogLevel;
  markerEnd: Maybe<Scalars['String']>;
  markerStart: Maybe<Scalars['String']>;
  message: Scalars['String'];
  metadataEntries: Array<MetadataEntry>;
  runId: Scalars['String'];
  solidHandleID: Maybe<Scalars['String']>;
  stepKey: Maybe<Scalars['String']>;
  timestamp: Scalars['String'];
};

export type ResourceRequirement = {
  __typename: 'ResourceRequirement';
  resourceKey: Scalars['String'];
};

export type ResumeBackfillResult = PythonError | ResumeBackfillSuccess | UnauthorizedError;

export type ResumeBackfillSuccess = {
  __typename: 'ResumeBackfillSuccess';
  backfillId: Scalars['String'];
};

export type Run = PipelineRun & {
  __typename: 'Run';
  assetMaterializations: Array<MaterializationEvent>;
  assetSelection: Maybe<Array<AssetKey>>;
  assets: Array<Asset>;
  canTerminate: Scalars['Boolean'];
  capturedLogs: CapturedLogs;
  computeLogs: ComputeLogs;
  endTime: Maybe<Scalars['Float']>;
  eventConnection: EventConnection;
  executionPlan: Maybe<ExecutionPlan>;
  id: Scalars['ID'];
  jobName: Scalars['String'];
  mode: Scalars['String'];
  parentPipelineSnapshotId: Maybe<Scalars['String']>;
  parentRunId: Maybe<Scalars['String']>;
  pipeline: PipelineReference;
  pipelineName: Scalars['String'];
  pipelineSnapshotId: Maybe<Scalars['String']>;
  repositoryOrigin: Maybe<RepositoryOrigin>;
  resolvedOpSelection: Maybe<Array<Scalars['String']>>;
  rootRunId: Maybe<Scalars['String']>;
  runConfig: Scalars['RunConfigData'];
  runConfigYaml: Scalars['String'];
  runId: Scalars['String'];
  solidSelection: Maybe<Array<Scalars['String']>>;
  startTime: Maybe<Scalars['Float']>;
  stats: RunStatsSnapshotOrError;
  status: RunStatus;
  stepKeysToExecute: Maybe<Array<Scalars['String']>>;
  stepStats: Array<RunStepStats>;
  tags: Array<PipelineTag>;
  updateTime: Maybe<Scalars['Float']>;
};


export type RunCapturedLogsArgs = {
  fileKey: Scalars['String'];
};


export type RunComputeLogsArgs = {
  stepKey: Scalars['String'];
};


export type RunEventConnectionArgs = {
  afterCursor?: InputMaybe<Scalars['String']>;
};

export type RunCanceledEvent = MessageEvent & RunEvent & {
  __typename: 'RunCanceledEvent';
  eventType: Maybe<DagsterEventType>;
  level: LogLevel;
  message: Scalars['String'];
  pipelineName: Scalars['String'];
  runId: Scalars['String'];
  solidHandleID: Maybe<Scalars['String']>;
  stepKey: Maybe<Scalars['String']>;
  timestamp: Scalars['String'];
};

export type RunCancelingEvent = MessageEvent & RunEvent & {
  __typename: 'RunCancelingEvent';
  eventType: Maybe<DagsterEventType>;
  level: LogLevel;
  message: Scalars['String'];
  pipelineName: Scalars['String'];
  runId: Scalars['String'];
  solidHandleID: Maybe<Scalars['String']>;
  stepKey: Maybe<Scalars['String']>;
  timestamp: Scalars['String'];
};

export type RunConfigSchema = {
  __typename: 'RunConfigSchema';
  allConfigTypes: Array<ConfigType>;
  isRunConfigValid: PipelineConfigValidationResult;
  rootConfigType: ConfigType;
};


export type RunConfigSchemaIsRunConfigValidArgs = {
  runConfigData?: InputMaybe<Scalars['RunConfigData']>;
};

export type RunConfigSchemaOrError = InvalidSubsetError | ModeNotFoundError | PipelineNotFoundError | PythonError | RunConfigSchema;

export type RunConfigValidationInvalid = PipelineConfigValidationInvalid & {
  __typename: 'RunConfigValidationInvalid';
  errors: Array<PipelineConfigValidationError>;
  pipelineName: Scalars['String'];
};

export type RunConflict = Error & PipelineRunConflict & {
  __typename: 'RunConflict';
  message: Scalars['String'];
};

export type RunDequeuedEvent = MessageEvent & RunEvent & {
  __typename: 'RunDequeuedEvent';
  eventType: Maybe<DagsterEventType>;
  level: LogLevel;
  message: Scalars['String'];
  pipelineName: Scalars['String'];
  runId: Scalars['String'];
  solidHandleID: Maybe<Scalars['String']>;
  stepKey: Maybe<Scalars['String']>;
  timestamp: Scalars['String'];
};

export type RunEnqueuedEvent = MessageEvent & RunEvent & {
  __typename: 'RunEnqueuedEvent';
  eventType: Maybe<DagsterEventType>;
  level: LogLevel;
  message: Scalars['String'];
  pipelineName: Scalars['String'];
  runId: Scalars['String'];
  solidHandleID: Maybe<Scalars['String']>;
  stepKey: Maybe<Scalars['String']>;
  timestamp: Scalars['String'];
};

export type RunEvent = {
  pipelineName: Scalars['String'];
};

export type RunFailureEvent = ErrorEvent & MessageEvent & RunEvent & {
  __typename: 'RunFailureEvent';
  error: Maybe<PythonError>;
  eventType: Maybe<DagsterEventType>;
  level: LogLevel;
  message: Scalars['String'];
  pipelineName: Scalars['String'];
  runId: Scalars['String'];
  solidHandleID: Maybe<Scalars['String']>;
  stepKey: Maybe<Scalars['String']>;
  timestamp: Scalars['String'];
};

export type RunGroup = {
  __typename: 'RunGroup';
  rootRunId: Scalars['String'];
  runs: Maybe<Array<Maybe<Run>>>;
};

export type RunGroupNotFoundError = Error & {
  __typename: 'RunGroupNotFoundError';
  message: Scalars['String'];
  runId: Scalars['String'];
};

export type RunGroupOrError = PythonError | RunGroup | RunGroupNotFoundError;

export type RunGroups = {
  __typename: 'RunGroups';
  results: Array<RunGroup>;
};

export type RunGroupsOrError = {
  __typename: 'RunGroupsOrError';
  results: Array<RunGroup>;
};

export type RunLauncher = {
  __typename: 'RunLauncher';
  name: Scalars['String'];
};

export type RunMarker = {
  __typename: 'RunMarker';
  endTime: Maybe<Scalars['Float']>;
  startTime: Maybe<Scalars['Float']>;
};

export type RunNotFoundError = Error & PipelineRunNotFoundError & {
  __typename: 'RunNotFoundError';
  message: Scalars['String'];
  runId: Scalars['String'];
};

export type RunOrError = PythonError | Run | RunNotFoundError;

export type RunRequest = {
  __typename: 'RunRequest';
  runConfigYaml: Scalars['String'];
  runKey: Maybe<Scalars['String']>;
  tags: Array<PipelineTag>;
};

export type RunStartEvent = MessageEvent & RunEvent & {
  __typename: 'RunStartEvent';
  eventType: Maybe<DagsterEventType>;
  level: LogLevel;
  message: Scalars['String'];
  pipelineName: Scalars['String'];
  runId: Scalars['String'];
  solidHandleID: Maybe<Scalars['String']>;
  stepKey: Maybe<Scalars['String']>;
  timestamp: Scalars['String'];
};

export type RunStartingEvent = MessageEvent & RunEvent & {
  __typename: 'RunStartingEvent';
  eventType: Maybe<DagsterEventType>;
  level: LogLevel;
  message: Scalars['String'];
  pipelineName: Scalars['String'];
  runId: Scalars['String'];
  solidHandleID: Maybe<Scalars['String']>;
  stepKey: Maybe<Scalars['String']>;
  timestamp: Scalars['String'];
};

export type RunStatsSnapshot = PipelineRunStatsSnapshot & {
  __typename: 'RunStatsSnapshot';
  endTime: Maybe<Scalars['Float']>;
  enqueuedTime: Maybe<Scalars['Float']>;
  expectations: Scalars['Int'];
  id: Scalars['String'];
  launchTime: Maybe<Scalars['Float']>;
  materializations: Scalars['Int'];
  runId: Scalars['String'];
  startTime: Maybe<Scalars['Float']>;
  stepsFailed: Scalars['Int'];
  stepsSucceeded: Scalars['Int'];
};

export type RunStatsSnapshotOrError = PythonError | RunStatsSnapshot;

export enum RunStatus {
  CANCELED = 'CANCELED',
  CANCELING = 'CANCELING',
  FAILURE = 'FAILURE',
  MANAGED = 'MANAGED',
  NOT_STARTED = 'NOT_STARTED',
  QUEUED = 'QUEUED',
  STARTED = 'STARTED',
  STARTING = 'STARTING',
  SUCCESS = 'SUCCESS'
}

export type RunStepStats = PipelineRunStepStats & {
  __typename: 'RunStepStats';
  attempts: Array<RunMarker>;
  endTime: Maybe<Scalars['Float']>;
  expectationResults: Array<ExpectationResult>;
  markers: Array<RunMarker>;
  materializations: Array<MaterializationEvent>;
  runId: Scalars['String'];
  startTime: Maybe<Scalars['Float']>;
  status: Maybe<StepEventStatus>;
  stepKey: Scalars['String'];
};

export type RunSuccessEvent = MessageEvent & RunEvent & {
  __typename: 'RunSuccessEvent';
  eventType: Maybe<DagsterEventType>;
  level: LogLevel;
  message: Scalars['String'];
  pipelineName: Scalars['String'];
  runId: Scalars['String'];
  solidHandleID: Maybe<Scalars['String']>;
  stepKey: Maybe<Scalars['String']>;
  timestamp: Scalars['String'];
};

export type Runs = PipelineRuns & {
  __typename: 'Runs';
  count: Maybe<Scalars['Int']>;
  results: Array<Run>;
};

export type RunsFilter = {
  createdBefore?: InputMaybe<Scalars['Float']>;
  mode?: InputMaybe<Scalars['String']>;
  pipelineName?: InputMaybe<Scalars['String']>;
  runIds?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  snapshotId?: InputMaybe<Scalars['String']>;
  statuses?: InputMaybe<Array<RunStatus>>;
  tags?: InputMaybe<Array<ExecutionTag>>;
  updatedAfter?: InputMaybe<Scalars['Float']>;
};

export type RunsOrError = InvalidPipelineRunsFilterError | PythonError | Runs;

export type RuntimeMismatchConfigError = PipelineConfigValidationError & {
  __typename: 'RuntimeMismatchConfigError';
  message: Scalars['String'];
  path: Array<Scalars['String']>;
  reason: EvaluationErrorReason;
  stack: EvaluationStack;
  valueRep: Maybe<Scalars['String']>;
};

export type ScalarUnionConfigType = ConfigType & {
  __typename: 'ScalarUnionConfigType';
  description: Maybe<Scalars['String']>;
  isSelector: Scalars['Boolean'];
  key: Scalars['String'];
  nonScalarType: ConfigType;
  nonScalarTypeKey: Scalars['String'];
  recursiveConfigTypes: Array<ConfigType>;
  scalarType: ConfigType;
  scalarTypeKey: Scalars['String'];
  typeParamKeys: Array<Scalars['String']>;
};

export type Schedule = {
  __typename: 'Schedule';
  cronSchedule: Scalars['String'];
  description: Maybe<Scalars['String']>;
  executionTimezone: Maybe<Scalars['String']>;
  futureTick: FutureInstigationTick;
  futureTicks: FutureInstigationTicks;
  id: Scalars['ID'];
  mode: Scalars['String'];
  name: Scalars['String'];
  partitionSet: Maybe<PartitionSet>;
  pipelineName: Scalars['String'];
  scheduleState: InstigationState;
  solidSelection: Maybe<Array<Maybe<Scalars['String']>>>;
};


export type ScheduleFutureTickArgs = {
  tickTimestamp: Scalars['Int'];
};


export type ScheduleFutureTicksArgs = {
  cursor?: InputMaybe<Scalars['Float']>;
  limit?: InputMaybe<Scalars['Int']>;
  until?: InputMaybe<Scalars['Float']>;
};

export type ScheduleData = {
  __typename: 'ScheduleData';
  cronSchedule: Scalars['String'];
  startTimestamp: Maybe<Scalars['Float']>;
};

export type ScheduleMutationResult = PythonError | ScheduleStateResult | UnauthorizedError;

export type ScheduleNotFoundError = Error & {
  __typename: 'ScheduleNotFoundError';
  message: Scalars['String'];
  scheduleName: Scalars['String'];
};

export type ScheduleOrError = PythonError | Schedule | ScheduleNotFoundError;

export type ScheduleSelector = {
  repositoryLocationName: Scalars['String'];
  repositoryName: Scalars['String'];
  scheduleName: Scalars['String'];
};

export type ScheduleStateResult = {
  __typename: 'ScheduleStateResult';
  scheduleState: InstigationState;
};

export enum ScheduleStatus {
  ENDED = 'ENDED',
  RUNNING = 'RUNNING',
  STOPPED = 'STOPPED'
}

export type ScheduleTick = {
  __typename: 'ScheduleTick';
  status: InstigationTickStatus;
  tickId: Scalars['String'];
  tickSpecificData: Maybe<ScheduleTickSpecificData>;
  timestamp: Scalars['Float'];
};

export type ScheduleTickFailureData = {
  __typename: 'ScheduleTickFailureData';
  error: PythonError;
};

export type ScheduleTickSpecificData = ScheduleTickFailureData | ScheduleTickSuccessData;

export type ScheduleTickSuccessData = {
  __typename: 'ScheduleTickSuccessData';
  run: Maybe<Run>;
};

export type Scheduler = {
  __typename: 'Scheduler';
  schedulerClass: Maybe<Scalars['String']>;
};

export type SchedulerNotDefinedError = Error & {
  __typename: 'SchedulerNotDefinedError';
  message: Scalars['String'];
};

export type SchedulerOrError = PythonError | Scheduler | SchedulerNotDefinedError;

export type Schedules = {
  __typename: 'Schedules';
  results: Array<Schedule>;
};

export type SchedulesOrError = PythonError | RepositoryNotFoundError | Schedules;

export type SelectorTypeConfigError = PipelineConfigValidationError & {
  __typename: 'SelectorTypeConfigError';
  incomingFields: Array<Scalars['String']>;
  message: Scalars['String'];
  path: Array<Scalars['String']>;
  reason: EvaluationErrorReason;
  stack: EvaluationStack;
};

export type Sensor = {
  __typename: 'Sensor';
  description: Maybe<Scalars['String']>;
  id: Scalars['ID'];
  jobOriginId: Scalars['String'];
  metadata: SensorMetadata;
  minIntervalSeconds: Scalars['Int'];
  name: Scalars['String'];
  nextTick: Maybe<FutureInstigationTick>;
  sensorState: InstigationState;
  targets: Maybe<Array<Target>>;
};

export type SensorData = {
  __typename: 'SensorData';
  lastCursor: Maybe<Scalars['String']>;
  lastRunKey: Maybe<Scalars['String']>;
  lastTickTimestamp: Maybe<Scalars['Float']>;
};

export type SensorMetadata = {
  __typename: 'SensorMetadata';
  assetKeys: Maybe<Array<AssetKey>>;
};

export type SensorNotFoundError = Error & {
  __typename: 'SensorNotFoundError';
  message: Scalars['String'];
  sensorName: Scalars['String'];
};

export type SensorOrError = PythonError | Sensor | SensorNotFoundError | UnauthorizedError;

export type SensorSelector = {
  repositoryLocationName: Scalars['String'];
  repositoryName: Scalars['String'];
  sensorName: Scalars['String'];
};

export type Sensors = {
  __typename: 'Sensors';
  results: Array<Sensor>;
};

export type SensorsOrError = PythonError | RepositoryNotFoundError | Sensors;

export type SetSensorCursorMutation = {
  __typename: 'SetSensorCursorMutation';
  Output: SensorOrError;
};

export type ShutdownRepositoryLocationMutation = {
  __typename: 'ShutdownRepositoryLocationMutation';
  Output: ShutdownRepositoryLocationMutationResult;
};

export type ShutdownRepositoryLocationMutationResult = PythonError | RepositoryLocationNotFound | ShutdownRepositoryLocationSuccess | UnauthorizedError;

export type ShutdownRepositoryLocationSuccess = {
  __typename: 'ShutdownRepositoryLocationSuccess';
  repositoryLocationName: Scalars['String'];
};

export type Solid = {
  __typename: 'Solid';
  definition: ISolidDefinition;
  inputs: Array<Input>;
  isDynamicMapped: Scalars['Boolean'];
  name: Scalars['String'];
  outputs: Array<Output>;
};

export type SolidContainer = {
  description: Maybe<Scalars['String']>;
  id: Scalars['ID'];
  modes: Array<Mode>;
  name: Scalars['String'];
  solidHandle: Maybe<SolidHandle>;
  solidHandles: Array<SolidHandle>;
  solids: Array<Solid>;
};


export type SolidContainerSolidHandleArgs = {
  handleID: Scalars['String'];
};


export type SolidContainerSolidHandlesArgs = {
  parentHandleID?: InputMaybe<Scalars['String']>;
};

export type SolidDefinition = ISolidDefinition & {
  __typename: 'SolidDefinition';
  assetNodes: Array<AssetNode>;
  configField: Maybe<ConfigTypeField>;
  description: Maybe<Scalars['String']>;
  inputDefinitions: Array<InputDefinition>;
  metadata: Array<MetadataItemDefinition>;
  name: Scalars['String'];
  outputDefinitions: Array<OutputDefinition>;
  requiredResources: Array<ResourceRequirement>;
};

export type SolidHandle = {
  __typename: 'SolidHandle';
  handleID: Scalars['String'];
  parent: Maybe<SolidHandle>;
  solid: Solid;
  stepStats: Maybe<SolidStepStatsOrError>;
};


export type SolidHandleStepStatsArgs = {
  limit?: InputMaybe<Scalars['Int']>;
};

export type SolidStepStatsConnection = {
  __typename: 'SolidStepStatsConnection';
  nodes: Array<RunStepStats>;
};

export type SolidStepStatsOrError = SolidStepStatsConnection | SolidStepStatusUnavailableError;

export type SolidStepStatusUnavailableError = Error & {
  __typename: 'SolidStepStatusUnavailableError';
  message: Scalars['String'];
};

export type StartScheduleMutation = {
  __typename: 'StartScheduleMutation';
  Output: ScheduleMutationResult;
};

export type StepEvent = {
  solidHandleID: Maybe<Scalars['String']>;
  stepKey: Maybe<Scalars['String']>;
};

export enum StepEventStatus {
  FAILURE = 'FAILURE',
  IN_PROGRESS = 'IN_PROGRESS',
  SKIPPED = 'SKIPPED',
  SUCCESS = 'SUCCESS'
}

export type StepExecution = {
  marshalledInputs?: InputMaybe<Array<MarshalledInput>>;
  marshalledOutputs?: InputMaybe<Array<MarshalledOutput>>;
  stepKey: Scalars['String'];
};

export type StepExpectationResultEvent = MessageEvent & StepEvent & {
  __typename: 'StepExpectationResultEvent';
  eventType: Maybe<DagsterEventType>;
  expectationResult: ExpectationResult;
  level: LogLevel;
  message: Scalars['String'];
  runId: Scalars['String'];
  solidHandleID: Maybe<Scalars['String']>;
  stepKey: Maybe<Scalars['String']>;
  timestamp: Scalars['String'];
};

export enum StepKind {
  COMPUTE = 'COMPUTE',
  UNRESOLVED_COLLECT = 'UNRESOLVED_COLLECT',
  UNRESOLVED_MAPPED = 'UNRESOLVED_MAPPED'
}

export type StepOutputHandle = {
  outputName: Scalars['String'];
  stepKey: Scalars['String'];
};

export type StepWorkerStartedEvent = DisplayableEvent & MarkerEvent & MessageEvent & StepEvent & {
  __typename: 'StepWorkerStartedEvent';
  description: Maybe<Scalars['String']>;
  eventType: Maybe<DagsterEventType>;
  label: Maybe<Scalars['String']>;
  level: LogLevel;
  markerEnd: Maybe<Scalars['String']>;
  markerStart: Maybe<Scalars['String']>;
  message: Scalars['String'];
  metadataEntries: Array<MetadataEntry>;
  runId: Scalars['String'];
  solidHandleID: Maybe<Scalars['String']>;
  stepKey: Maybe<Scalars['String']>;
  timestamp: Scalars['String'];
};

export type StepWorkerStartingEvent = DisplayableEvent & MarkerEvent & MessageEvent & StepEvent & {
  __typename: 'StepWorkerStartingEvent';
  description: Maybe<Scalars['String']>;
  eventType: Maybe<DagsterEventType>;
  label: Maybe<Scalars['String']>;
  level: LogLevel;
  markerEnd: Maybe<Scalars['String']>;
  markerStart: Maybe<Scalars['String']>;
  message: Scalars['String'];
  metadataEntries: Array<MetadataEntry>;
  runId: Scalars['String'];
  solidHandleID: Maybe<Scalars['String']>;
  stepKey: Maybe<Scalars['String']>;
  timestamp: Scalars['String'];
};

export type StopRunningScheduleMutation = {
  __typename: 'StopRunningScheduleMutation';
  Output: ScheduleMutationResult;
};

export type StopSensorMutation = {
  __typename: 'StopSensorMutation';
  Output: StopSensorMutationResultOrError;
};

export type StopSensorMutationResult = {
  __typename: 'StopSensorMutationResult';
  instigationState: Maybe<InstigationState>;
};

export type StopSensorMutationResultOrError = PythonError | StopSensorMutationResult | UnauthorizedError;

export type Table = {
  __typename: 'Table';
  records: Array<Scalars['String']>;
  schema: TableSchema;
};

export type TableColumn = {
  __typename: 'TableColumn';
  constraints: TableColumnConstraints;
  description: Maybe<Scalars['String']>;
  name: Scalars['String'];
  type: Scalars['String'];
};

export type TableColumnConstraints = {
  __typename: 'TableColumnConstraints';
  nullable: Scalars['Boolean'];
  other: Array<Scalars['String']>;
  unique: Scalars['Boolean'];
};

export type TableConstraints = {
  __typename: 'TableConstraints';
  other: Array<Scalars['String']>;
};

export type TableMetadataEntry = MetadataEntry & {
  __typename: 'TableMetadataEntry';
  description: Maybe<Scalars['String']>;
  label: Scalars['String'];
  table: Table;
};

export type TableSchema = {
  __typename: 'TableSchema';
  columns: Array<TableColumn>;
  constraints: Maybe<TableConstraints>;
};

export type TableSchemaMetadataEntry = MetadataEntry & {
  __typename: 'TableSchemaMetadataEntry';
  description: Maybe<Scalars['String']>;
  label: Scalars['String'];
  schema: TableSchema;
};

export type Target = {
  __typename: 'Target';
  mode: Scalars['String'];
  pipelineName: Scalars['String'];
  solidSelection: Maybe<Array<Scalars['String']>>;
};

export type TerminatePipelineExecutionFailure = {
  message: Scalars['String'];
  run: Run;
};

export type TerminatePipelineExecutionSuccess = {
  run: Run;
};

export type TerminateRunFailure = TerminatePipelineExecutionFailure & {
  __typename: 'TerminateRunFailure';
  message: Scalars['String'];
  run: Run;
};

export type TerminateRunMutation = {
  __typename: 'TerminateRunMutation';
  Output: TerminateRunResult;
};

export enum TerminateRunPolicy {
  MARK_AS_CANCELED_IMMEDIATELY = 'MARK_AS_CANCELED_IMMEDIATELY',
  SAFE_TERMINATE = 'SAFE_TERMINATE'
}

export type TerminateRunResult = PythonError | RunNotFoundError | TerminateRunFailure | TerminateRunSuccess | UnauthorizedError;

export type TerminateRunSuccess = TerminatePipelineExecutionSuccess & {
  __typename: 'TerminateRunSuccess';
  run: Run;
};

export type TextMetadataEntry = MetadataEntry & {
  __typename: 'TextMetadataEntry';
  description: Maybe<Scalars['String']>;
  label: Scalars['String'];
  text: Scalars['String'];
};

export type TickEvaluation = {
  __typename: 'TickEvaluation';
  error: Maybe<PythonError>;
  runRequests: Maybe<Array<Maybe<RunRequest>>>;
  skipReason: Maybe<Scalars['String']>;
};

export type TypeCheck = DisplayableEvent & {
  __typename: 'TypeCheck';
  description: Maybe<Scalars['String']>;
  label: Maybe<Scalars['String']>;
  metadataEntries: Array<MetadataEntry>;
  success: Scalars['Boolean'];
};

export type UnauthorizedError = Error & {
  __typename: 'UnauthorizedError';
  message: Scalars['String'];
};

export type UnknownPipeline = PipelineReference & {
  __typename: 'UnknownPipeline';
  name: Scalars['String'];
  solidSelection: Maybe<Array<Scalars['String']>>;
};

export type UrlMetadataEntry = MetadataEntry & {
  __typename: 'UrlMetadataEntry';
  description: Maybe<Scalars['String']>;
  label: Scalars['String'];
  url: Scalars['String'];
};

export type UsedSolid = {
  __typename: 'UsedSolid';
  definition: ISolidDefinition;
  invocations: Array<NodeInvocationSite>;
};

export type Workspace = {
  __typename: 'Workspace';
  locationEntries: Array<WorkspaceLocationEntry>;
};

export type WorkspaceLocationEntry = {
  __typename: 'WorkspaceLocationEntry';
  displayMetadata: Array<RepositoryMetadata>;
  id: Scalars['ID'];
  loadStatus: RepositoryLocationLoadStatus;
  locationOrLoadError: Maybe<RepositoryLocationOrLoadError>;
  name: Scalars['String'];
  permissions: Array<Permission>;
  updatedTimestamp: Scalars['Float'];
};

export type WorkspaceLocationStatusEntries = {
  __typename: 'WorkspaceLocationStatusEntries';
  entries: Array<WorkspaceLocationStatusEntry>;
};

export type WorkspaceLocationStatusEntriesOrError = PythonError | WorkspaceLocationStatusEntries;

export type WorkspaceLocationStatusEntry = {
  __typename: 'WorkspaceLocationStatusEntry';
  id: Scalars['ID'];
  loadStatus: RepositoryLocationLoadStatus;
  name: Scalars['String'];
  updateTimestamp: Scalars['Float'];
};

export type WorkspaceOrError = PythonError | Workspace;

export type WrappingConfigType = {
  ofType: ConfigType;
};

export type WrappingDagsterType = {
  ofType: DagsterType;
};

export type CapturedLogsSubscriptionSubscriptionVariables = Exact<{
  logKey: Array<Scalars['String']> | Scalars['String'];
  cursor?: InputMaybe<Scalars['String']>;
}>;


export type CapturedLogsSubscriptionSubscription = { __typename: 'DagitSubscription', capturedLogs: { __typename: 'CapturedLogs', stdout: string | null, stderr: string | null, cursor: string | null } };

export type CapturedLogFragment = { __typename: 'CapturedLogs', stdout: string | null, stderr: string | null, cursor: string | null };

export type CapturedLogsMetadataQueryQueryVariables = Exact<{
  logKey: Array<Scalars['String']> | Scalars['String'];
}>;


export type CapturedLogsMetadataQueryQuery = { __typename: 'DagitQuery', capturedLogsMetadata: { __typename: 'CapturedLogsMetadata', stdoutDownloadUrl: string | null, stdoutLocation: string | null, stderrDownloadUrl: string | null, stderrLocation: string | null } };

export type CapturedLogsQueryQueryVariables = Exact<{
  logKey: Array<Scalars['String']> | Scalars['String'];
  cursor?: InputMaybe<Scalars['String']>;
  limit?: InputMaybe<Scalars['Int']>;
}>;


export type CapturedLogsQueryQuery = { __typename: 'DagitQuery', capturedLogs: { __typename: 'CapturedLogs', stdout: string | null, stderr: string | null, cursor: string | null } };

export type TickLogEventsQueryQueryVariables = Exact<{
  instigationSelector: InstigationSelector;
  timestamp: Scalars['Float'];
}>;


export type TickLogEventsQueryQuery = { __typename: 'DagitQuery', instigationStateOrError: { __typename: 'InstigationState', id: string, tick: { __typename: 'InstigationTick', id: string, status: InstigationTickStatus, timestamp: number, logEvents: { __typename: 'InstigationEventConnection', events: Array<{ __typename: 'InstigationEvent', message: string, timestamp: string, level: LogLevel }> } } | null } | { __typename: 'InstigationStateNotFoundError' } | { __typename: 'PythonError' } };

export type TickLogEventFragment = { __typename: 'InstigationEvent', message: string, timestamp: string, level: LogLevel };

export type PermissionsQueryQueryVariables = Exact<{ [key: string]: never; }>;


export type PermissionsQueryQuery = { __typename: 'DagitQuery', unscopedPermissions: Array<{ __typename: 'Permission', permission: string, value: boolean, disabledReason: string | null }>, workspaceOrError: { __typename: 'PythonError' } | { __typename: 'Workspace', locationEntries: Array<{ __typename: 'WorkspaceLocationEntry', id: string, name: string, permissions: Array<{ __typename: 'Permission', permission: string, value: boolean, disabledReason: string | null }> }> } };

export type PermissionFragmentFragment = { __typename: 'Permission', permission: string, value: boolean, disabledReason: string | null };

export type UnauthorizedErrorFragmentFragment = { __typename: 'UnauthorizedError', message: string };

export type PythonErrorFragmentFragment = { __typename: 'PythonError', message: string, stack: Array<string>, errorChain: Array<{ __typename: 'ErrorChainLink', isExplicitLink: boolean, error: { __typename: 'PythonError', message: string, stack: Array<string> } }> };

export type PythonErrorChainFragment = { __typename: 'ErrorChainLink', isExplicitLink: boolean, error: { __typename: 'PythonError', message: string, stack: Array<string> } };

export type LogTelemetryMutationMutationVariables = Exact<{
  action: Scalars['String'];
  metadata: Scalars['String'];
  clientTime: Scalars['String'];
  clientId: Scalars['String'];
}>;


export type LogTelemetryMutationMutation = { __typename: 'DagitMutation', logTelemetry: { __typename: 'LogTelemetrySuccess', action: string } | { __typename: 'PythonError', message: string, stack: Array<string>, errorChain: Array<{ __typename: 'ErrorChainLink', isExplicitLink: boolean, error: { __typename: 'PythonError', message: string, stack: Array<string> } }> } };

export type AssetGraphSidebarQueryQueryVariables = Exact<{
  pipelineSelector: PipelineSelector;
}>;


export type AssetGraphSidebarQueryQuery = { __typename: 'DagitQuery', pipelineSnapshotOrError: { __typename: 'PipelineNotFoundError', message: string } | { __typename: 'PipelineSnapshot', id: string, pipelineSnapshotId: string, parentSnapshotId: string | null, name: string, description: string | null, metadataEntries: Array<{ __typename: 'AssetMetadataEntry', label: string, description: string | null, assetKey: { __typename: 'AssetKey', path: Array<string> } } | { __typename: 'BoolMetadataEntry', boolValue: boolean | null, label: string, description: string | null } | { __typename: 'FloatMetadataEntry', floatValue: number | null, label: string, description: string | null } | { __typename: 'IntMetadataEntry', intValue: number | null, intRepr: string, label: string, description: string | null } | { __typename: 'JsonMetadataEntry', jsonString: string, label: string, description: string | null } | { __typename: 'MarkdownMetadataEntry', mdStr: string, label: string, description: string | null } | { __typename: 'NotebookMetadataEntry', path: string, label: string, description: string | null } | { __typename: 'NullMetadataEntry', label: string, description: string | null } | { __typename: 'PathMetadataEntry', path: string, label: string, description: string | null } | { __typename: 'PipelineRunMetadataEntry', runId: string, label: string, description: string | null } | { __typename: 'PythonArtifactMetadataEntry', module: string, name: string, label: string, description: string | null } | { __typename: 'TableMetadataEntry', label: string, description: string | null, table: { __typename: 'Table', records: Array<string>, schema: { __typename: 'TableSchema', columns: Array<{ __typename: 'TableColumn', name: string, description: string | null, type: string, constraints: { __typename: 'TableColumnConstraints', nullable: boolean, unique: boolean, other: Array<string> } }>, constraints: { __typename: 'TableConstraints', other: Array<string> } | null } } } | { __typename: 'TableSchemaMetadataEntry', label: string, description: string | null, schema: { __typename: 'TableSchema', columns: Array<{ __typename: 'TableColumn', name: string, description: string | null, type: string, constraints: { __typename: 'TableColumnConstraints', nullable: boolean, unique: boolean, other: Array<string> } }>, constraints: { __typename: 'TableConstraints', other: Array<string> } | null } } | { __typename: 'TextMetadataEntry', text: string, label: string, description: string | null } | { __typename: 'UrlMetadataEntry', url: string, label: string, description: string | null }>, modes: Array<{ __typename: 'Mode', id: string, name: string, description: string | null, resources: Array<{ __typename: 'Resource', name: string, description: string | null, configField: { __typename: 'ConfigTypeField', configType: { __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } } | null }>, loggers: Array<{ __typename: 'Logger', name: string, description: string | null, configField: { __typename: 'ConfigTypeField', configType: { __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } } | null }> }> } | { __typename: 'PipelineSnapshotNotFoundError', message: string } | { __typename: 'PythonError', message: string, stack: Array<string>, errorChain: Array<{ __typename: 'ErrorChainLink', isExplicitLink: boolean, error: { __typename: 'PythonError', message: string, stack: Array<string> } }> } };

export type AssetNodeLiveFragmentFragment = { __typename: 'AssetNode', id: string, opNames: Array<string>, currentLogicalVersion: string | null, projectedLogicalVersion: string | null, repository: { __typename: 'Repository', id: string }, assetKey: { __typename: 'AssetKey', path: Array<string> }, assetMaterializations: Array<{ __typename: 'MaterializationEvent', timestamp: string, runId: string }>, freshnessPolicy: { __typename: 'FreshnessPolicy', maximumLagMinutes: number, cronSchedule: string | null } | null, freshnessInfo: { __typename: 'AssetFreshnessInfo', currentMinutesLate: number | null } | null, assetObservations: Array<{ __typename: 'ObservationEvent', timestamp: string, runId: string }> };

export type AssetNodeLiveFreshnessPolicyFragment = { __typename: 'FreshnessPolicy', maximumLagMinutes: number, cronSchedule: string | null };

export type AssetNodeLiveFreshnessInfoFragment = { __typename: 'AssetFreshnessInfo', currentMinutesLate: number | null };

export type AssetNodeLiveMaterializationFragment = { __typename: 'MaterializationEvent', timestamp: string, runId: string };

export type AssetNodeLiveObservationFragment = { __typename: 'ObservationEvent', timestamp: string, runId: string };

export type AssetNodeFragmentFragment = { __typename: 'AssetNode', id: string, graphName: string | null, jobNames: Array<string>, opNames: Array<string>, opVersion: string | null, description: string | null, computeKind: string | null, isPartitioned: boolean, isObservable: boolean, isSource: boolean, assetKey: { __typename: 'AssetKey', path: Array<string> } };

export type AssetNodeKeyFragment = { __typename: 'AssetKey', path: Array<string> };

export type SidebarAssetFragmentFragment = { __typename: 'AssetNode', id: string, description: string | null, opVersion: string | null, metadataEntries: Array<{ __typename: 'AssetMetadataEntry', label: string, description: string | null, assetKey: { __typename: 'AssetKey', path: Array<string> } } | { __typename: 'BoolMetadataEntry', boolValue: boolean | null, label: string, description: string | null } | { __typename: 'FloatMetadataEntry', floatValue: number | null, label: string, description: string | null } | { __typename: 'IntMetadataEntry', intValue: number | null, intRepr: string, label: string, description: string | null } | { __typename: 'JsonMetadataEntry', jsonString: string, label: string, description: string | null } | { __typename: 'MarkdownMetadataEntry', mdStr: string, label: string, description: string | null } | { __typename: 'NotebookMetadataEntry', path: string, label: string, description: string | null } | { __typename: 'NullMetadataEntry', label: string, description: string | null } | { __typename: 'PathMetadataEntry', path: string, label: string, description: string | null } | { __typename: 'PipelineRunMetadataEntry', runId: string, label: string, description: string | null } | { __typename: 'PythonArtifactMetadataEntry', module: string, name: string, label: string, description: string | null } | { __typename: 'TableMetadataEntry', label: string, description: string | null, table: { __typename: 'Table', records: Array<string>, schema: { __typename: 'TableSchema', columns: Array<{ __typename: 'TableColumn', name: string, description: string | null, type: string, constraints: { __typename: 'TableColumnConstraints', nullable: boolean, unique: boolean, other: Array<string> } }>, constraints: { __typename: 'TableConstraints', other: Array<string> } | null } } } | { __typename: 'TableSchemaMetadataEntry', label: string, description: string | null, schema: { __typename: 'TableSchema', columns: Array<{ __typename: 'TableColumn', name: string, description: string | null, type: string, constraints: { __typename: 'TableColumnConstraints', nullable: boolean, unique: boolean, other: Array<string> } }>, constraints: { __typename: 'TableConstraints', other: Array<string> } | null } } | { __typename: 'TextMetadataEntry', text: string, label: string, description: string | null } | { __typename: 'UrlMetadataEntry', url: string, label: string, description: string | null }>, partitionDefinition: { __typename: 'PartitionDefinition', description: string } | null, assetKey: { __typename: 'AssetKey', path: Array<string> }, op: { __typename: 'SolidDefinition', name: string, description: string | null, metadata: Array<{ __typename: 'MetadataItemDefinition', key: string, value: string }> } | null, repository: { __typename: 'Repository', id: string, name: string, location: { __typename: 'RepositoryLocation', id: string, name: string } }, configField: { __typename: 'ConfigTypeField', name: string, isRequired: boolean, configType: { __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } } | null, type: { __typename: 'ListDagsterType', key: string, name: string | null, displayName: string, description: string | null, isNullable: boolean, isList: boolean, isBuiltin: boolean, isNothing: boolean, innerTypes: Array<{ __typename: 'ListDagsterType', key: string, name: string | null, displayName: string, description: string | null, isNullable: boolean, isList: boolean, isBuiltin: boolean, isNothing: boolean, metadataEntries: Array<{ __typename: 'AssetMetadataEntry', label: string, description: string | null, assetKey: { __typename: 'AssetKey', path: Array<string> } } | { __typename: 'BoolMetadataEntry', boolValue: boolean | null, label: string, description: string | null } | { __typename: 'FloatMetadataEntry', floatValue: number | null, label: string, description: string | null } | { __typename: 'IntMetadataEntry', intValue: number | null, intRepr: string, label: string, description: string | null } | { __typename: 'JsonMetadataEntry', jsonString: string, label: string, description: string | null } | { __typename: 'MarkdownMetadataEntry', mdStr: string, label: string, description: string | null } | { __typename: 'NotebookMetadataEntry', path: string, label: string, description: string | null } | { __typename: 'NullMetadataEntry', label: string, description: string | null } | { __typename: 'PathMetadataEntry', path: string, label: string, description: string | null } | { __typename: 'PipelineRunMetadataEntry', runId: string, label: string, description: string | null } | { __typename: 'PythonArtifactMetadataEntry', module: string, name: string, label: string, description: string | null } | { __typename: 'TableMetadataEntry', label: string, description: string | null, table: { __typename: 'Table', records: Array<string>, schema: { __typename: 'TableSchema', columns: Array<{ __typename: 'TableColumn', name: string, description: string | null, type: string, constraints: { __typename: 'TableColumnConstraints', nullable: boolean, unique: boolean, other: Array<string> } }>, constraints: { __typename: 'TableConstraints', other: Array<string> } | null } } } | { __typename: 'TableSchemaMetadataEntry', label: string, description: string | null, schema: { __typename: 'TableSchema', columns: Array<{ __typename: 'TableColumn', name: string, description: string | null, type: string, constraints: { __typename: 'TableColumnConstraints', nullable: boolean, unique: boolean, other: Array<string> } }>, constraints: { __typename: 'TableConstraints', other: Array<string> } | null } } | { __typename: 'TextMetadataEntry', text: string, label: string, description: string | null } | { __typename: 'UrlMetadataEntry', url: string, label: string, description: string | null }>, inputSchemaType: { __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | null, outputSchemaType: { __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | null } | { __typename: 'NullableDagsterType', key: string, name: string | null, displayName: string, description: string | null, isNullable: boolean, isList: boolean, isBuiltin: boolean, isNothing: boolean, metadataEntries: Array<{ __typename: 'AssetMetadataEntry', label: string, description: string | null, assetKey: { __typename: 'AssetKey', path: Array<string> } } | { __typename: 'BoolMetadataEntry', boolValue: boolean | null, label: string, description: string | null } | { __typename: 'FloatMetadataEntry', floatValue: number | null, label: string, description: string | null } | { __typename: 'IntMetadataEntry', intValue: number | null, intRepr: string, label: string, description: string | null } | { __typename: 'JsonMetadataEntry', jsonString: string, label: string, description: string | null } | { __typename: 'MarkdownMetadataEntry', mdStr: string, label: string, description: string | null } | { __typename: 'NotebookMetadataEntry', path: string, label: string, description: string | null } | { __typename: 'NullMetadataEntry', label: string, description: string | null } | { __typename: 'PathMetadataEntry', path: string, label: string, description: string | null } | { __typename: 'PipelineRunMetadataEntry', runId: string, label: string, description: string | null } | { __typename: 'PythonArtifactMetadataEntry', module: string, name: string, label: string, description: string | null } | { __typename: 'TableMetadataEntry', label: string, description: string | null, table: { __typename: 'Table', records: Array<string>, schema: { __typename: 'TableSchema', columns: Array<{ __typename: 'TableColumn', name: string, description: string | null, type: string, constraints: { __typename: 'TableColumnConstraints', nullable: boolean, unique: boolean, other: Array<string> } }>, constraints: { __typename: 'TableConstraints', other: Array<string> } | null } } } | { __typename: 'TableSchemaMetadataEntry', label: string, description: string | null, schema: { __typename: 'TableSchema', columns: Array<{ __typename: 'TableColumn', name: string, description: string | null, type: string, constraints: { __typename: 'TableColumnConstraints', nullable: boolean, unique: boolean, other: Array<string> } }>, constraints: { __typename: 'TableConstraints', other: Array<string> } | null } } | { __typename: 'TextMetadataEntry', text: string, label: string, description: string | null } | { __typename: 'UrlMetadataEntry', url: string, label: string, description: string | null }>, inputSchemaType: { __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | null, outputSchemaType: { __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | null } | { __typename: 'RegularDagsterType', key: string, name: string | null, displayName: string, description: string | null, isNullable: boolean, isList: boolean, isBuiltin: boolean, isNothing: boolean, metadataEntries: Array<{ __typename: 'AssetMetadataEntry', label: string, description: string | null, assetKey: { __typename: 'AssetKey', path: Array<string> } } | { __typename: 'BoolMetadataEntry', boolValue: boolean | null, label: string, description: string | null } | { __typename: 'FloatMetadataEntry', floatValue: number | null, label: string, description: string | null } | { __typename: 'IntMetadataEntry', intValue: number | null, intRepr: string, label: string, description: string | null } | { __typename: 'JsonMetadataEntry', jsonString: string, label: string, description: string | null } | { __typename: 'MarkdownMetadataEntry', mdStr: string, label: string, description: string | null } | { __typename: 'NotebookMetadataEntry', path: string, label: string, description: string | null } | { __typename: 'NullMetadataEntry', label: string, description: string | null } | { __typename: 'PathMetadataEntry', path: string, label: string, description: string | null } | { __typename: 'PipelineRunMetadataEntry', runId: string, label: string, description: string | null } | { __typename: 'PythonArtifactMetadataEntry', module: string, name: string, label: string, description: string | null } | { __typename: 'TableMetadataEntry', label: string, description: string | null, table: { __typename: 'Table', records: Array<string>, schema: { __typename: 'TableSchema', columns: Array<{ __typename: 'TableColumn', name: string, description: string | null, type: string, constraints: { __typename: 'TableColumnConstraints', nullable: boolean, unique: boolean, other: Array<string> } }>, constraints: { __typename: 'TableConstraints', other: Array<string> } | null } } } | { __typename: 'TableSchemaMetadataEntry', label: string, description: string | null, schema: { __typename: 'TableSchema', columns: Array<{ __typename: 'TableColumn', name: string, description: string | null, type: string, constraints: { __typename: 'TableColumnConstraints', nullable: boolean, unique: boolean, other: Array<string> } }>, constraints: { __typename: 'TableConstraints', other: Array<string> } | null } } | { __typename: 'TextMetadataEntry', text: string, label: string, description: string | null } | { __typename: 'UrlMetadataEntry', url: string, label: string, description: string | null }>, inputSchemaType: { __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | null, outputSchemaType: { __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | null }>, metadataEntries: Array<{ __typename: 'AssetMetadataEntry', label: string, description: string | null, assetKey: { __typename: 'AssetKey', path: Array<string> } } | { __typename: 'BoolMetadataEntry', boolValue: boolean | null, label: string, description: string | null } | { __typename: 'FloatMetadataEntry', floatValue: number | null, label: string, description: string | null } | { __typename: 'IntMetadataEntry', intValue: number | null, intRepr: string, label: string, description: string | null } | { __typename: 'JsonMetadataEntry', jsonString: string, label: string, description: string | null } | { __typename: 'MarkdownMetadataEntry', mdStr: string, label: string, description: string | null } | { __typename: 'NotebookMetadataEntry', path: string, label: string, description: string | null } | { __typename: 'NullMetadataEntry', label: string, description: string | null } | { __typename: 'PathMetadataEntry', path: string, label: string, description: string | null } | { __typename: 'PipelineRunMetadataEntry', runId: string, label: string, description: string | null } | { __typename: 'PythonArtifactMetadataEntry', module: string, name: string, label: string, description: string | null } | { __typename: 'TableMetadataEntry', label: string, description: string | null, table: { __typename: 'Table', records: Array<string>, schema: { __typename: 'TableSchema', columns: Array<{ __typename: 'TableColumn', name: string, description: string | null, type: string, constraints: { __typename: 'TableColumnConstraints', nullable: boolean, unique: boolean, other: Array<string> } }>, constraints: { __typename: 'TableConstraints', other: Array<string> } | null } } } | { __typename: 'TableSchemaMetadataEntry', label: string, description: string | null, schema: { __typename: 'TableSchema', columns: Array<{ __typename: 'TableColumn', name: string, description: string | null, type: string, constraints: { __typename: 'TableColumnConstraints', nullable: boolean, unique: boolean, other: Array<string> } }>, constraints: { __typename: 'TableConstraints', other: Array<string> } | null } } | { __typename: 'TextMetadataEntry', text: string, label: string, description: string | null } | { __typename: 'UrlMetadataEntry', url: string, label: string, description: string | null }>, inputSchemaType: { __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | null, outputSchemaType: { __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | null } | { __typename: 'NullableDagsterType', key: string, name: string | null, displayName: string, description: string | null, isNullable: boolean, isList: boolean, isBuiltin: boolean, isNothing: boolean, innerTypes: Array<{ __typename: 'ListDagsterType', key: string, name: string | null, displayName: string, description: string | null, isNullable: boolean, isList: boolean, isBuiltin: boolean, isNothing: boolean, metadataEntries: Array<{ __typename: 'AssetMetadataEntry', label: string, description: string | null, assetKey: { __typename: 'AssetKey', path: Array<string> } } | { __typename: 'BoolMetadataEntry', boolValue: boolean | null, label: string, description: string | null } | { __typename: 'FloatMetadataEntry', floatValue: number | null, label: string, description: string | null } | { __typename: 'IntMetadataEntry', intValue: number | null, intRepr: string, label: string, description: string | null } | { __typename: 'JsonMetadataEntry', jsonString: string, label: string, description: string | null } | { __typename: 'MarkdownMetadataEntry', mdStr: string, label: string, description: string | null } | { __typename: 'NotebookMetadataEntry', path: string, label: string, description: string | null } | { __typename: 'NullMetadataEntry', label: string, description: string | null } | { __typename: 'PathMetadataEntry', path: string, label: string, description: string | null } | { __typename: 'PipelineRunMetadataEntry', runId: string, label: string, description: string | null } | { __typename: 'PythonArtifactMetadataEntry', module: string, name: string, label: string, description: string | null } | { __typename: 'TableMetadataEntry', label: string, description: string | null, table: { __typename: 'Table', records: Array<string>, schema: { __typename: 'TableSchema', columns: Array<{ __typename: 'TableColumn', name: string, description: string | null, type: string, constraints: { __typename: 'TableColumnConstraints', nullable: boolean, unique: boolean, other: Array<string> } }>, constraints: { __typename: 'TableConstraints', other: Array<string> } | null } } } | { __typename: 'TableSchemaMetadataEntry', label: string, description: string | null, schema: { __typename: 'TableSchema', columns: Array<{ __typename: 'TableColumn', name: string, description: string | null, type: string, constraints: { __typename: 'TableColumnConstraints', nullable: boolean, unique: boolean, other: Array<string> } }>, constraints: { __typename: 'TableConstraints', other: Array<string> } | null } } | { __typename: 'TextMetadataEntry', text: string, label: string, description: string | null } | { __typename: 'UrlMetadataEntry', url: string, label: string, description: string | null }>, inputSchemaType: { __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | null, outputSchemaType: { __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | null } | { __typename: 'NullableDagsterType', key: string, name: string | null, displayName: string, description: string | null, isNullable: boolean, isList: boolean, isBuiltin: boolean, isNothing: boolean, metadataEntries: Array<{ __typename: 'AssetMetadataEntry', label: string, description: string | null, assetKey: { __typename: 'AssetKey', path: Array<string> } } | { __typename: 'BoolMetadataEntry', boolValue: boolean | null, label: string, description: string | null } | { __typename: 'FloatMetadataEntry', floatValue: number | null, label: string, description: string | null } | { __typename: 'IntMetadataEntry', intValue: number | null, intRepr: string, label: string, description: string | null } | { __typename: 'JsonMetadataEntry', jsonString: string, label: string, description: string | null } | { __typename: 'MarkdownMetadataEntry', mdStr: string, label: string, description: string | null } | { __typename: 'NotebookMetadataEntry', path: string, label: string, description: string | null } | { __typename: 'NullMetadataEntry', label: string, description: string | null } | { __typename: 'PathMetadataEntry', path: string, label: string, description: string | null } | { __typename: 'PipelineRunMetadataEntry', runId: string, label: string, description: string | null } | { __typename: 'PythonArtifactMetadataEntry', module: string, name: string, label: string, description: string | null } | { __typename: 'TableMetadataEntry', label: string, description: string | null, table: { __typename: 'Table', records: Array<string>, schema: { __typename: 'TableSchema', columns: Array<{ __typename: 'TableColumn', name: string, description: string | null, type: string, constraints: { __typename: 'TableColumnConstraints', nullable: boolean, unique: boolean, other: Array<string> } }>, constraints: { __typename: 'TableConstraints', other: Array<string> } | null } } } | { __typename: 'TableSchemaMetadataEntry', label: string, description: string | null, schema: { __typename: 'TableSchema', columns: Array<{ __typename: 'TableColumn', name: string, description: string | null, type: string, constraints: { __typename: 'TableColumnConstraints', nullable: boolean, unique: boolean, other: Array<string> } }>, constraints: { __typename: 'TableConstraints', other: Array<string> } | null } } | { __typename: 'TextMetadataEntry', text: string, label: string, description: string | null } | { __typename: 'UrlMetadataEntry', url: string, label: string, description: string | null }>, inputSchemaType: { __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | null, outputSchemaType: { __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | null } | { __typename: 'RegularDagsterType', key: string, name: string | null, displayName: string, description: string | null, isNullable: boolean, isList: boolean, isBuiltin: boolean, isNothing: boolean, metadataEntries: Array<{ __typename: 'AssetMetadataEntry', label: string, description: string | null, assetKey: { __typename: 'AssetKey', path: Array<string> } } | { __typename: 'BoolMetadataEntry', boolValue: boolean | null, label: string, description: string | null } | { __typename: 'FloatMetadataEntry', floatValue: number | null, label: string, description: string | null } | { __typename: 'IntMetadataEntry', intValue: number | null, intRepr: string, label: string, description: string | null } | { __typename: 'JsonMetadataEntry', jsonString: string, label: string, description: string | null } | { __typename: 'MarkdownMetadataEntry', mdStr: string, label: string, description: string | null } | { __typename: 'NotebookMetadataEntry', path: string, label: string, description: string | null } | { __typename: 'NullMetadataEntry', label: string, description: string | null } | { __typename: 'PathMetadataEntry', path: string, label: string, description: string | null } | { __typename: 'PipelineRunMetadataEntry', runId: string, label: string, description: string | null } | { __typename: 'PythonArtifactMetadataEntry', module: string, name: string, label: string, description: string | null } | { __typename: 'TableMetadataEntry', label: string, description: string | null, table: { __typename: 'Table', records: Array<string>, schema: { __typename: 'TableSchema', columns: Array<{ __typename: 'TableColumn', name: string, description: string | null, type: string, constraints: { __typename: 'TableColumnConstraints', nullable: boolean, unique: boolean, other: Array<string> } }>, constraints: { __typename: 'TableConstraints', other: Array<string> } | null } } } | { __typename: 'TableSchemaMetadataEntry', label: string, description: string | null, schema: { __typename: 'TableSchema', columns: Array<{ __typename: 'TableColumn', name: string, description: string | null, type: string, constraints: { __typename: 'TableColumnConstraints', nullable: boolean, unique: boolean, other: Array<string> } }>, constraints: { __typename: 'TableConstraints', other: Array<string> } | null } } | { __typename: 'TextMetadataEntry', text: string, label: string, description: string | null } | { __typename: 'UrlMetadataEntry', url: string, label: string, description: string | null }>, inputSchemaType: { __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | null, outputSchemaType: { __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | null }>, metadataEntries: Array<{ __typename: 'AssetMetadataEntry', label: string, description: string | null, assetKey: { __typename: 'AssetKey', path: Array<string> } } | { __typename: 'BoolMetadataEntry', boolValue: boolean | null, label: string, description: string | null } | { __typename: 'FloatMetadataEntry', floatValue: number | null, label: string, description: string | null } | { __typename: 'IntMetadataEntry', intValue: number | null, intRepr: string, label: string, description: string | null } | { __typename: 'JsonMetadataEntry', jsonString: string, label: string, description: string | null } | { __typename: 'MarkdownMetadataEntry', mdStr: string, label: string, description: string | null } | { __typename: 'NotebookMetadataEntry', path: string, label: string, description: string | null } | { __typename: 'NullMetadataEntry', label: string, description: string | null } | { __typename: 'PathMetadataEntry', path: string, label: string, description: string | null } | { __typename: 'PipelineRunMetadataEntry', runId: string, label: string, description: string | null } | { __typename: 'PythonArtifactMetadataEntry', module: string, name: string, label: string, description: string | null } | { __typename: 'TableMetadataEntry', label: string, description: string | null, table: { __typename: 'Table', records: Array<string>, schema: { __typename: 'TableSchema', columns: Array<{ __typename: 'TableColumn', name: string, description: string | null, type: string, constraints: { __typename: 'TableColumnConstraints', nullable: boolean, unique: boolean, other: Array<string> } }>, constraints: { __typename: 'TableConstraints', other: Array<string> } | null } } } | { __typename: 'TableSchemaMetadataEntry', label: string, description: string | null, schema: { __typename: 'TableSchema', columns: Array<{ __typename: 'TableColumn', name: string, description: string | null, type: string, constraints: { __typename: 'TableColumnConstraints', nullable: boolean, unique: boolean, other: Array<string> } }>, constraints: { __typename: 'TableConstraints', other: Array<string> } | null } } | { __typename: 'TextMetadataEntry', text: string, label: string, description: string | null } | { __typename: 'UrlMetadataEntry', url: string, label: string, description: string | null }>, inputSchemaType: { __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | null, outputSchemaType: { __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | null } | { __typename: 'RegularDagsterType', key: string, name: string | null, displayName: string, description: string | null, isNullable: boolean, isList: boolean, isBuiltin: boolean, isNothing: boolean, innerTypes: Array<{ __typename: 'ListDagsterType', key: string, name: string | null, displayName: string, description: string | null, isNullable: boolean, isList: boolean, isBuiltin: boolean, isNothing: boolean, metadataEntries: Array<{ __typename: 'AssetMetadataEntry', label: string, description: string | null, assetKey: { __typename: 'AssetKey', path: Array<string> } } | { __typename: 'BoolMetadataEntry', boolValue: boolean | null, label: string, description: string | null } | { __typename: 'FloatMetadataEntry', floatValue: number | null, label: string, description: string | null } | { __typename: 'IntMetadataEntry', intValue: number | null, intRepr: string, label: string, description: string | null } | { __typename: 'JsonMetadataEntry', jsonString: string, label: string, description: string | null } | { __typename: 'MarkdownMetadataEntry', mdStr: string, label: string, description: string | null } | { __typename: 'NotebookMetadataEntry', path: string, label: string, description: string | null } | { __typename: 'NullMetadataEntry', label: string, description: string | null } | { __typename: 'PathMetadataEntry', path: string, label: string, description: string | null } | { __typename: 'PipelineRunMetadataEntry', runId: string, label: string, description: string | null } | { __typename: 'PythonArtifactMetadataEntry', module: string, name: string, label: string, description: string | null } | { __typename: 'TableMetadataEntry', label: string, description: string | null, table: { __typename: 'Table', records: Array<string>, schema: { __typename: 'TableSchema', columns: Array<{ __typename: 'TableColumn', name: string, description: string | null, type: string, constraints: { __typename: 'TableColumnConstraints', nullable: boolean, unique: boolean, other: Array<string> } }>, constraints: { __typename: 'TableConstraints', other: Array<string> } | null } } } | { __typename: 'TableSchemaMetadataEntry', label: string, description: string | null, schema: { __typename: 'TableSchema', columns: Array<{ __typename: 'TableColumn', name: string, description: string | null, type: string, constraints: { __typename: 'TableColumnConstraints', nullable: boolean, unique: boolean, other: Array<string> } }>, constraints: { __typename: 'TableConstraints', other: Array<string> } | null } } | { __typename: 'TextMetadataEntry', text: string, label: string, description: string | null } | { __typename: 'UrlMetadataEntry', url: string, label: string, description: string | null }>, inputSchemaType: { __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | null, outputSchemaType: { __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | null } | { __typename: 'NullableDagsterType', key: string, name: string | null, displayName: string, description: string | null, isNullable: boolean, isList: boolean, isBuiltin: boolean, isNothing: boolean, metadataEntries: Array<{ __typename: 'AssetMetadataEntry', label: string, description: string | null, assetKey: { __typename: 'AssetKey', path: Array<string> } } | { __typename: 'BoolMetadataEntry', boolValue: boolean | null, label: string, description: string | null } | { __typename: 'FloatMetadataEntry', floatValue: number | null, label: string, description: string | null } | { __typename: 'IntMetadataEntry', intValue: number | null, intRepr: string, label: string, description: string | null } | { __typename: 'JsonMetadataEntry', jsonString: string, label: string, description: string | null } | { __typename: 'MarkdownMetadataEntry', mdStr: string, label: string, description: string | null } | { __typename: 'NotebookMetadataEntry', path: string, label: string, description: string | null } | { __typename: 'NullMetadataEntry', label: string, description: string | null } | { __typename: 'PathMetadataEntry', path: string, label: string, description: string | null } | { __typename: 'PipelineRunMetadataEntry', runId: string, label: string, description: string | null } | { __typename: 'PythonArtifactMetadataEntry', module: string, name: string, label: string, description: string | null } | { __typename: 'TableMetadataEntry', label: string, description: string | null, table: { __typename: 'Table', records: Array<string>, schema: { __typename: 'TableSchema', columns: Array<{ __typename: 'TableColumn', name: string, description: string | null, type: string, constraints: { __typename: 'TableColumnConstraints', nullable: boolean, unique: boolean, other: Array<string> } }>, constraints: { __typename: 'TableConstraints', other: Array<string> } | null } } } | { __typename: 'TableSchemaMetadataEntry', label: string, description: string | null, schema: { __typename: 'TableSchema', columns: Array<{ __typename: 'TableColumn', name: string, description: string | null, type: string, constraints: { __typename: 'TableColumnConstraints', nullable: boolean, unique: boolean, other: Array<string> } }>, constraints: { __typename: 'TableConstraints', other: Array<string> } | null } } | { __typename: 'TextMetadataEntry', text: string, label: string, description: string | null } | { __typename: 'UrlMetadataEntry', url: string, label: string, description: string | null }>, inputSchemaType: { __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | null, outputSchemaType: { __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | null } | { __typename: 'RegularDagsterType', key: string, name: string | null, displayName: string, description: string | null, isNullable: boolean, isList: boolean, isBuiltin: boolean, isNothing: boolean, metadataEntries: Array<{ __typename: 'AssetMetadataEntry', label: string, description: string | null, assetKey: { __typename: 'AssetKey', path: Array<string> } } | { __typename: 'BoolMetadataEntry', boolValue: boolean | null, label: string, description: string | null } | { __typename: 'FloatMetadataEntry', floatValue: number | null, label: string, description: string | null } | { __typename: 'IntMetadataEntry', intValue: number | null, intRepr: string, label: string, description: string | null } | { __typename: 'JsonMetadataEntry', jsonString: string, label: string, description: string | null } | { __typename: 'MarkdownMetadataEntry', mdStr: string, label: string, description: string | null } | { __typename: 'NotebookMetadataEntry', path: string, label: string, description: string | null } | { __typename: 'NullMetadataEntry', label: string, description: string | null } | { __typename: 'PathMetadataEntry', path: string, label: string, description: string | null } | { __typename: 'PipelineRunMetadataEntry', runId: string, label: string, description: string | null } | { __typename: 'PythonArtifactMetadataEntry', module: string, name: string, label: string, description: string | null } | { __typename: 'TableMetadataEntry', label: string, description: string | null, table: { __typename: 'Table', records: Array<string>, schema: { __typename: 'TableSchema', columns: Array<{ __typename: 'TableColumn', name: string, description: string | null, type: string, constraints: { __typename: 'TableColumnConstraints', nullable: boolean, unique: boolean, other: Array<string> } }>, constraints: { __typename: 'TableConstraints', other: Array<string> } | null } } } | { __typename: 'TableSchemaMetadataEntry', label: string, description: string | null, schema: { __typename: 'TableSchema', columns: Array<{ __typename: 'TableColumn', name: string, description: string | null, type: string, constraints: { __typename: 'TableColumnConstraints', nullable: boolean, unique: boolean, other: Array<string> } }>, constraints: { __typename: 'TableConstraints', other: Array<string> } | null } } | { __typename: 'TextMetadataEntry', text: string, label: string, description: string | null } | { __typename: 'UrlMetadataEntry', url: string, label: string, description: string | null }>, inputSchemaType: { __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | null, outputSchemaType: { __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | null }>, metadataEntries: Array<{ __typename: 'AssetMetadataEntry', label: string, description: string | null, assetKey: { __typename: 'AssetKey', path: Array<string> } } | { __typename: 'BoolMetadataEntry', boolValue: boolean | null, label: string, description: string | null } | { __typename: 'FloatMetadataEntry', floatValue: number | null, label: string, description: string | null } | { __typename: 'IntMetadataEntry', intValue: number | null, intRepr: string, label: string, description: string | null } | { __typename: 'JsonMetadataEntry', jsonString: string, label: string, description: string | null } | { __typename: 'MarkdownMetadataEntry', mdStr: string, label: string, description: string | null } | { __typename: 'NotebookMetadataEntry', path: string, label: string, description: string | null } | { __typename: 'NullMetadataEntry', label: string, description: string | null } | { __typename: 'PathMetadataEntry', path: string, label: string, description: string | null } | { __typename: 'PipelineRunMetadataEntry', runId: string, label: string, description: string | null } | { __typename: 'PythonArtifactMetadataEntry', module: string, name: string, label: string, description: string | null } | { __typename: 'TableMetadataEntry', label: string, description: string | null, table: { __typename: 'Table', records: Array<string>, schema: { __typename: 'TableSchema', columns: Array<{ __typename: 'TableColumn', name: string, description: string | null, type: string, constraints: { __typename: 'TableColumnConstraints', nullable: boolean, unique: boolean, other: Array<string> } }>, constraints: { __typename: 'TableConstraints', other: Array<string> } | null } } } | { __typename: 'TableSchemaMetadataEntry', label: string, description: string | null, schema: { __typename: 'TableSchema', columns: Array<{ __typename: 'TableColumn', name: string, description: string | null, type: string, constraints: { __typename: 'TableColumnConstraints', nullable: boolean, unique: boolean, other: Array<string> } }>, constraints: { __typename: 'TableConstraints', other: Array<string> } | null } } | { __typename: 'TextMetadataEntry', text: string, label: string, description: string | null } | { __typename: 'UrlMetadataEntry', url: string, label: string, description: string | null }>, inputSchemaType: { __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | null, outputSchemaType: { __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | null } | null };

export type SidebarAssetQueryQueryVariables = Exact<{
  assetKey: AssetKeyInput;
}>;


export type SidebarAssetQueryQuery = { __typename: 'DagitQuery', assetNodeOrError: { __typename: 'AssetNode', id: string, description: string | null, opVersion: string | null, metadataEntries: Array<{ __typename: 'AssetMetadataEntry', label: string, description: string | null, assetKey: { __typename: 'AssetKey', path: Array<string> } } | { __typename: 'BoolMetadataEntry', boolValue: boolean | null, label: string, description: string | null } | { __typename: 'FloatMetadataEntry', floatValue: number | null, label: string, description: string | null } | { __typename: 'IntMetadataEntry', intValue: number | null, intRepr: string, label: string, description: string | null } | { __typename: 'JsonMetadataEntry', jsonString: string, label: string, description: string | null } | { __typename: 'MarkdownMetadataEntry', mdStr: string, label: string, description: string | null } | { __typename: 'NotebookMetadataEntry', path: string, label: string, description: string | null } | { __typename: 'NullMetadataEntry', label: string, description: string | null } | { __typename: 'PathMetadataEntry', path: string, label: string, description: string | null } | { __typename: 'PipelineRunMetadataEntry', runId: string, label: string, description: string | null } | { __typename: 'PythonArtifactMetadataEntry', module: string, name: string, label: string, description: string | null } | { __typename: 'TableMetadataEntry', label: string, description: string | null, table: { __typename: 'Table', records: Array<string>, schema: { __typename: 'TableSchema', columns: Array<{ __typename: 'TableColumn', name: string, description: string | null, type: string, constraints: { __typename: 'TableColumnConstraints', nullable: boolean, unique: boolean, other: Array<string> } }>, constraints: { __typename: 'TableConstraints', other: Array<string> } | null } } } | { __typename: 'TableSchemaMetadataEntry', label: string, description: string | null, schema: { __typename: 'TableSchema', columns: Array<{ __typename: 'TableColumn', name: string, description: string | null, type: string, constraints: { __typename: 'TableColumnConstraints', nullable: boolean, unique: boolean, other: Array<string> } }>, constraints: { __typename: 'TableConstraints', other: Array<string> } | null } } | { __typename: 'TextMetadataEntry', text: string, label: string, description: string | null } | { __typename: 'UrlMetadataEntry', url: string, label: string, description: string | null }>, partitionDefinition: { __typename: 'PartitionDefinition', description: string } | null, assetKey: { __typename: 'AssetKey', path: Array<string> }, op: { __typename: 'SolidDefinition', name: string, description: string | null, metadata: Array<{ __typename: 'MetadataItemDefinition', key: string, value: string }> } | null, repository: { __typename: 'Repository', id: string, name: string, location: { __typename: 'RepositoryLocation', id: string, name: string } }, configField: { __typename: 'ConfigTypeField', name: string, isRequired: boolean, configType: { __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } } | null, type: { __typename: 'ListDagsterType', key: string, name: string | null, displayName: string, description: string | null, isNullable: boolean, isList: boolean, isBuiltin: boolean, isNothing: boolean, innerTypes: Array<{ __typename: 'ListDagsterType', key: string, name: string | null, displayName: string, description: string | null, isNullable: boolean, isList: boolean, isBuiltin: boolean, isNothing: boolean, metadataEntries: Array<{ __typename: 'AssetMetadataEntry', label: string, description: string | null, assetKey: { __typename: 'AssetKey', path: Array<string> } } | { __typename: 'BoolMetadataEntry', boolValue: boolean | null, label: string, description: string | null } | { __typename: 'FloatMetadataEntry', floatValue: number | null, label: string, description: string | null } | { __typename: 'IntMetadataEntry', intValue: number | null, intRepr: string, label: string, description: string | null } | { __typename: 'JsonMetadataEntry', jsonString: string, label: string, description: string | null } | { __typename: 'MarkdownMetadataEntry', mdStr: string, label: string, description: string | null } | { __typename: 'NotebookMetadataEntry', path: string, label: string, description: string | null } | { __typename: 'NullMetadataEntry', label: string, description: string | null } | { __typename: 'PathMetadataEntry', path: string, label: string, description: string | null } | { __typename: 'PipelineRunMetadataEntry', runId: string, label: string, description: string | null } | { __typename: 'PythonArtifactMetadataEntry', module: string, name: string, label: string, description: string | null } | { __typename: 'TableMetadataEntry', label: string, description: string | null, table: { __typename: 'Table', records: Array<string>, schema: { __typename: 'TableSchema', columns: Array<{ __typename: 'TableColumn', name: string, description: string | null, type: string, constraints: { __typename: 'TableColumnConstraints', nullable: boolean, unique: boolean, other: Array<string> } }>, constraints: { __typename: 'TableConstraints', other: Array<string> } | null } } } | { __typename: 'TableSchemaMetadataEntry', label: string, description: string | null, schema: { __typename: 'TableSchema', columns: Array<{ __typename: 'TableColumn', name: string, description: string | null, type: string, constraints: { __typename: 'TableColumnConstraints', nullable: boolean, unique: boolean, other: Array<string> } }>, constraints: { __typename: 'TableConstraints', other: Array<string> } | null } } | { __typename: 'TextMetadataEntry', text: string, label: string, description: string | null } | { __typename: 'UrlMetadataEntry', url: string, label: string, description: string | null }>, inputSchemaType: { __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | null, outputSchemaType: { __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | null } | { __typename: 'NullableDagsterType', key: string, name: string | null, displayName: string, description: string | null, isNullable: boolean, isList: boolean, isBuiltin: boolean, isNothing: boolean, metadataEntries: Array<{ __typename: 'AssetMetadataEntry', label: string, description: string | null, assetKey: { __typename: 'AssetKey', path: Array<string> } } | { __typename: 'BoolMetadataEntry', boolValue: boolean | null, label: string, description: string | null } | { __typename: 'FloatMetadataEntry', floatValue: number | null, label: string, description: string | null } | { __typename: 'IntMetadataEntry', intValue: number | null, intRepr: string, label: string, description: string | null } | { __typename: 'JsonMetadataEntry', jsonString: string, label: string, description: string | null } | { __typename: 'MarkdownMetadataEntry', mdStr: string, label: string, description: string | null } | { __typename: 'NotebookMetadataEntry', path: string, label: string, description: string | null } | { __typename: 'NullMetadataEntry', label: string, description: string | null } | { __typename: 'PathMetadataEntry', path: string, label: string, description: string | null } | { __typename: 'PipelineRunMetadataEntry', runId: string, label: string, description: string | null } | { __typename: 'PythonArtifactMetadataEntry', module: string, name: string, label: string, description: string | null } | { __typename: 'TableMetadataEntry', label: string, description: string | null, table: { __typename: 'Table', records: Array<string>, schema: { __typename: 'TableSchema', columns: Array<{ __typename: 'TableColumn', name: string, description: string | null, type: string, constraints: { __typename: 'TableColumnConstraints', nullable: boolean, unique: boolean, other: Array<string> } }>, constraints: { __typename: 'TableConstraints', other: Array<string> } | null } } } | { __typename: 'TableSchemaMetadataEntry', label: string, description: string | null, schema: { __typename: 'TableSchema', columns: Array<{ __typename: 'TableColumn', name: string, description: string | null, type: string, constraints: { __typename: 'TableColumnConstraints', nullable: boolean, unique: boolean, other: Array<string> } }>, constraints: { __typename: 'TableConstraints', other: Array<string> } | null } } | { __typename: 'TextMetadataEntry', text: string, label: string, description: string | null } | { __typename: 'UrlMetadataEntry', url: string, label: string, description: string | null }>, inputSchemaType: { __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | null, outputSchemaType: { __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | null } | { __typename: 'RegularDagsterType', key: string, name: string | null, displayName: string, description: string | null, isNullable: boolean, isList: boolean, isBuiltin: boolean, isNothing: boolean, metadataEntries: Array<{ __typename: 'AssetMetadataEntry', label: string, description: string | null, assetKey: { __typename: 'AssetKey', path: Array<string> } } | { __typename: 'BoolMetadataEntry', boolValue: boolean | null, label: string, description: string | null } | { __typename: 'FloatMetadataEntry', floatValue: number | null, label: string, description: string | null } | { __typename: 'IntMetadataEntry', intValue: number | null, intRepr: string, label: string, description: string | null } | { __typename: 'JsonMetadataEntry', jsonString: string, label: string, description: string | null } | { __typename: 'MarkdownMetadataEntry', mdStr: string, label: string, description: string | null } | { __typename: 'NotebookMetadataEntry', path: string, label: string, description: string | null } | { __typename: 'NullMetadataEntry', label: string, description: string | null } | { __typename: 'PathMetadataEntry', path: string, label: string, description: string | null } | { __typename: 'PipelineRunMetadataEntry', runId: string, label: string, description: string | null } | { __typename: 'PythonArtifactMetadataEntry', module: string, name: string, label: string, description: string | null } | { __typename: 'TableMetadataEntry', label: string, description: string | null, table: { __typename: 'Table', records: Array<string>, schema: { __typename: 'TableSchema', columns: Array<{ __typename: 'TableColumn', name: string, description: string | null, type: string, constraints: { __typename: 'TableColumnConstraints', nullable: boolean, unique: boolean, other: Array<string> } }>, constraints: { __typename: 'TableConstraints', other: Array<string> } | null } } } | { __typename: 'TableSchemaMetadataEntry', label: string, description: string | null, schema: { __typename: 'TableSchema', columns: Array<{ __typename: 'TableColumn', name: string, description: string | null, type: string, constraints: { __typename: 'TableColumnConstraints', nullable: boolean, unique: boolean, other: Array<string> } }>, constraints: { __typename: 'TableConstraints', other: Array<string> } | null } } | { __typename: 'TextMetadataEntry', text: string, label: string, description: string | null } | { __typename: 'UrlMetadataEntry', url: string, label: string, description: string | null }>, inputSchemaType: { __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | null, outputSchemaType: { __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | null }>, metadataEntries: Array<{ __typename: 'AssetMetadataEntry', label: string, description: string | null, assetKey: { __typename: 'AssetKey', path: Array<string> } } | { __typename: 'BoolMetadataEntry', boolValue: boolean | null, label: string, description: string | null } | { __typename: 'FloatMetadataEntry', floatValue: number | null, label: string, description: string | null } | { __typename: 'IntMetadataEntry', intValue: number | null, intRepr: string, label: string, description: string | null } | { __typename: 'JsonMetadataEntry', jsonString: string, label: string, description: string | null } | { __typename: 'MarkdownMetadataEntry', mdStr: string, label: string, description: string | null } | { __typename: 'NotebookMetadataEntry', path: string, label: string, description: string | null } | { __typename: 'NullMetadataEntry', label: string, description: string | null } | { __typename: 'PathMetadataEntry', path: string, label: string, description: string | null } | { __typename: 'PipelineRunMetadataEntry', runId: string, label: string, description: string | null } | { __typename: 'PythonArtifactMetadataEntry', module: string, name: string, label: string, description: string | null } | { __typename: 'TableMetadataEntry', label: string, description: string | null, table: { __typename: 'Table', records: Array<string>, schema: { __typename: 'TableSchema', columns: Array<{ __typename: 'TableColumn', name: string, description: string | null, type: string, constraints: { __typename: 'TableColumnConstraints', nullable: boolean, unique: boolean, other: Array<string> } }>, constraints: { __typename: 'TableConstraints', other: Array<string> } | null } } } | { __typename: 'TableSchemaMetadataEntry', label: string, description: string | null, schema: { __typename: 'TableSchema', columns: Array<{ __typename: 'TableColumn', name: string, description: string | null, type: string, constraints: { __typename: 'TableColumnConstraints', nullable: boolean, unique: boolean, other: Array<string> } }>, constraints: { __typename: 'TableConstraints', other: Array<string> } | null } } | { __typename: 'TextMetadataEntry', text: string, label: string, description: string | null } | { __typename: 'UrlMetadataEntry', url: string, label: string, description: string | null }>, inputSchemaType: { __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | null, outputSchemaType: { __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | null } | { __typename: 'NullableDagsterType', key: string, name: string | null, displayName: string, description: string | null, isNullable: boolean, isList: boolean, isBuiltin: boolean, isNothing: boolean, innerTypes: Array<{ __typename: 'ListDagsterType', key: string, name: string | null, displayName: string, description: string | null, isNullable: boolean, isList: boolean, isBuiltin: boolean, isNothing: boolean, metadataEntries: Array<{ __typename: 'AssetMetadataEntry', label: string, description: string | null, assetKey: { __typename: 'AssetKey', path: Array<string> } } | { __typename: 'BoolMetadataEntry', boolValue: boolean | null, label: string, description: string | null } | { __typename: 'FloatMetadataEntry', floatValue: number | null, label: string, description: string | null } | { __typename: 'IntMetadataEntry', intValue: number | null, intRepr: string, label: string, description: string | null } | { __typename: 'JsonMetadataEntry', jsonString: string, label: string, description: string | null } | { __typename: 'MarkdownMetadataEntry', mdStr: string, label: string, description: string | null } | { __typename: 'NotebookMetadataEntry', path: string, label: string, description: string | null } | { __typename: 'NullMetadataEntry', label: string, description: string | null } | { __typename: 'PathMetadataEntry', path: string, label: string, description: string | null } | { __typename: 'PipelineRunMetadataEntry', runId: string, label: string, description: string | null } | { __typename: 'PythonArtifactMetadataEntry', module: string, name: string, label: string, description: string | null } | { __typename: 'TableMetadataEntry', label: string, description: string | null, table: { __typename: 'Table', records: Array<string>, schema: { __typename: 'TableSchema', columns: Array<{ __typename: 'TableColumn', name: string, description: string | null, type: string, constraints: { __typename: 'TableColumnConstraints', nullable: boolean, unique: boolean, other: Array<string> } }>, constraints: { __typename: 'TableConstraints', other: Array<string> } | null } } } | { __typename: 'TableSchemaMetadataEntry', label: string, description: string | null, schema: { __typename: 'TableSchema', columns: Array<{ __typename: 'TableColumn', name: string, description: string | null, type: string, constraints: { __typename: 'TableColumnConstraints', nullable: boolean, unique: boolean, other: Array<string> } }>, constraints: { __typename: 'TableConstraints', other: Array<string> } | null } } | { __typename: 'TextMetadataEntry', text: string, label: string, description: string | null } | { __typename: 'UrlMetadataEntry', url: string, label: string, description: string | null }>, inputSchemaType: { __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | null, outputSchemaType: { __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | null } | { __typename: 'NullableDagsterType', key: string, name: string | null, displayName: string, description: string | null, isNullable: boolean, isList: boolean, isBuiltin: boolean, isNothing: boolean, metadataEntries: Array<{ __typename: 'AssetMetadataEntry', label: string, description: string | null, assetKey: { __typename: 'AssetKey', path: Array<string> } } | { __typename: 'BoolMetadataEntry', boolValue: boolean | null, label: string, description: string | null } | { __typename: 'FloatMetadataEntry', floatValue: number | null, label: string, description: string | null } | { __typename: 'IntMetadataEntry', intValue: number | null, intRepr: string, label: string, description: string | null } | { __typename: 'JsonMetadataEntry', jsonString: string, label: string, description: string | null } | { __typename: 'MarkdownMetadataEntry', mdStr: string, label: string, description: string | null } | { __typename: 'NotebookMetadataEntry', path: string, label: string, description: string | null } | { __typename: 'NullMetadataEntry', label: string, description: string | null } | { __typename: 'PathMetadataEntry', path: string, label: string, description: string | null } | { __typename: 'PipelineRunMetadataEntry', runId: string, label: string, description: string | null } | { __typename: 'PythonArtifactMetadataEntry', module: string, name: string, label: string, description: string | null } | { __typename: 'TableMetadataEntry', label: string, description: string | null, table: { __typename: 'Table', records: Array<string>, schema: { __typename: 'TableSchema', columns: Array<{ __typename: 'TableColumn', name: string, description: string | null, type: string, constraints: { __typename: 'TableColumnConstraints', nullable: boolean, unique: boolean, other: Array<string> } }>, constraints: { __typename: 'TableConstraints', other: Array<string> } | null } } } | { __typename: 'TableSchemaMetadataEntry', label: string, description: string | null, schema: { __typename: 'TableSchema', columns: Array<{ __typename: 'TableColumn', name: string, description: string | null, type: string, constraints: { __typename: 'TableColumnConstraints', nullable: boolean, unique: boolean, other: Array<string> } }>, constraints: { __typename: 'TableConstraints', other: Array<string> } | null } } | { __typename: 'TextMetadataEntry', text: string, label: string, description: string | null } | { __typename: 'UrlMetadataEntry', url: string, label: string, description: string | null }>, inputSchemaType: { __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | null, outputSchemaType: { __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | null } | { __typename: 'RegularDagsterType', key: string, name: string | null, displayName: string, description: string | null, isNullable: boolean, isList: boolean, isBuiltin: boolean, isNothing: boolean, metadataEntries: Array<{ __typename: 'AssetMetadataEntry', label: string, description: string | null, assetKey: { __typename: 'AssetKey', path: Array<string> } } | { __typename: 'BoolMetadataEntry', boolValue: boolean | null, label: string, description: string | null } | { __typename: 'FloatMetadataEntry', floatValue: number | null, label: string, description: string | null } | { __typename: 'IntMetadataEntry', intValue: number | null, intRepr: string, label: string, description: string | null } | { __typename: 'JsonMetadataEntry', jsonString: string, label: string, description: string | null } | { __typename: 'MarkdownMetadataEntry', mdStr: string, label: string, description: string | null } | { __typename: 'NotebookMetadataEntry', path: string, label: string, description: string | null } | { __typename: 'NullMetadataEntry', label: string, description: string | null } | { __typename: 'PathMetadataEntry', path: string, label: string, description: string | null } | { __typename: 'PipelineRunMetadataEntry', runId: string, label: string, description: string | null } | { __typename: 'PythonArtifactMetadataEntry', module: string, name: string, label: string, description: string | null } | { __typename: 'TableMetadataEntry', label: string, description: string | null, table: { __typename: 'Table', records: Array<string>, schema: { __typename: 'TableSchema', columns: Array<{ __typename: 'TableColumn', name: string, description: string | null, type: string, constraints: { __typename: 'TableColumnConstraints', nullable: boolean, unique: boolean, other: Array<string> } }>, constraints: { __typename: 'TableConstraints', other: Array<string> } | null } } } | { __typename: 'TableSchemaMetadataEntry', label: string, description: string | null, schema: { __typename: 'TableSchema', columns: Array<{ __typename: 'TableColumn', name: string, description: string | null, type: string, constraints: { __typename: 'TableColumnConstraints', nullable: boolean, unique: boolean, other: Array<string> } }>, constraints: { __typename: 'TableConstraints', other: Array<string> } | null } } | { __typename: 'TextMetadataEntry', text: string, label: string, description: string | null } | { __typename: 'UrlMetadataEntry', url: string, label: string, description: string | null }>, inputSchemaType: { __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | null, outputSchemaType: { __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | null }>, metadataEntries: Array<{ __typename: 'AssetMetadataEntry', label: string, description: string | null, assetKey: { __typename: 'AssetKey', path: Array<string> } } | { __typename: 'BoolMetadataEntry', boolValue: boolean | null, label: string, description: string | null } | { __typename: 'FloatMetadataEntry', floatValue: number | null, label: string, description: string | null } | { __typename: 'IntMetadataEntry', intValue: number | null, intRepr: string, label: string, description: string | null } | { __typename: 'JsonMetadataEntry', jsonString: string, label: string, description: string | null } | { __typename: 'MarkdownMetadataEntry', mdStr: string, label: string, description: string | null } | { __typename: 'NotebookMetadataEntry', path: string, label: string, description: string | null } | { __typename: 'NullMetadataEntry', label: string, description: string | null } | { __typename: 'PathMetadataEntry', path: string, label: string, description: string | null } | { __typename: 'PipelineRunMetadataEntry', runId: string, label: string, description: string | null } | { __typename: 'PythonArtifactMetadataEntry', module: string, name: string, label: string, description: string | null } | { __typename: 'TableMetadataEntry', label: string, description: string | null, table: { __typename: 'Table', records: Array<string>, schema: { __typename: 'TableSchema', columns: Array<{ __typename: 'TableColumn', name: string, description: string | null, type: string, constraints: { __typename: 'TableColumnConstraints', nullable: boolean, unique: boolean, other: Array<string> } }>, constraints: { __typename: 'TableConstraints', other: Array<string> } | null } } } | { __typename: 'TableSchemaMetadataEntry', label: string, description: string | null, schema: { __typename: 'TableSchema', columns: Array<{ __typename: 'TableColumn', name: string, description: string | null, type: string, constraints: { __typename: 'TableColumnConstraints', nullable: boolean, unique: boolean, other: Array<string> } }>, constraints: { __typename: 'TableConstraints', other: Array<string> } | null } } | { __typename: 'TextMetadataEntry', text: string, label: string, description: string | null } | { __typename: 'UrlMetadataEntry', url: string, label: string, description: string | null }>, inputSchemaType: { __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | null, outputSchemaType: { __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | null } | { __typename: 'RegularDagsterType', key: string, name: string | null, displayName: string, description: string | null, isNullable: boolean, isList: boolean, isBuiltin: boolean, isNothing: boolean, innerTypes: Array<{ __typename: 'ListDagsterType', key: string, name: string | null, displayName: string, description: string | null, isNullable: boolean, isList: boolean, isBuiltin: boolean, isNothing: boolean, metadataEntries: Array<{ __typename: 'AssetMetadataEntry', label: string, description: string | null, assetKey: { __typename: 'AssetKey', path: Array<string> } } | { __typename: 'BoolMetadataEntry', boolValue: boolean | null, label: string, description: string | null } | { __typename: 'FloatMetadataEntry', floatValue: number | null, label: string, description: string | null } | { __typename: 'IntMetadataEntry', intValue: number | null, intRepr: string, label: string, description: string | null } | { __typename: 'JsonMetadataEntry', jsonString: string, label: string, description: string | null } | { __typename: 'MarkdownMetadataEntry', mdStr: string, label: string, description: string | null } | { __typename: 'NotebookMetadataEntry', path: string, label: string, description: string | null } | { __typename: 'NullMetadataEntry', label: string, description: string | null } | { __typename: 'PathMetadataEntry', path: string, label: string, description: string | null } | { __typename: 'PipelineRunMetadataEntry', runId: string, label: string, description: string | null } | { __typename: 'PythonArtifactMetadataEntry', module: string, name: string, label: string, description: string | null } | { __typename: 'TableMetadataEntry', label: string, description: string | null, table: { __typename: 'Table', records: Array<string>, schema: { __typename: 'TableSchema', columns: Array<{ __typename: 'TableColumn', name: string, description: string | null, type: string, constraints: { __typename: 'TableColumnConstraints', nullable: boolean, unique: boolean, other: Array<string> } }>, constraints: { __typename: 'TableConstraints', other: Array<string> } | null } } } | { __typename: 'TableSchemaMetadataEntry', label: string, description: string | null, schema: { __typename: 'TableSchema', columns: Array<{ __typename: 'TableColumn', name: string, description: string | null, type: string, constraints: { __typename: 'TableColumnConstraints', nullable: boolean, unique: boolean, other: Array<string> } }>, constraints: { __typename: 'TableConstraints', other: Array<string> } | null } } | { __typename: 'TextMetadataEntry', text: string, label: string, description: string | null } | { __typename: 'UrlMetadataEntry', url: string, label: string, description: string | null }>, inputSchemaType: { __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | null, outputSchemaType: { __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | null } | { __typename: 'NullableDagsterType', key: string, name: string | null, displayName: string, description: string | null, isNullable: boolean, isList: boolean, isBuiltin: boolean, isNothing: boolean, metadataEntries: Array<{ __typename: 'AssetMetadataEntry', label: string, description: string | null, assetKey: { __typename: 'AssetKey', path: Array<string> } } | { __typename: 'BoolMetadataEntry', boolValue: boolean | null, label: string, description: string | null } | { __typename: 'FloatMetadataEntry', floatValue: number | null, label: string, description: string | null } | { __typename: 'IntMetadataEntry', intValue: number | null, intRepr: string, label: string, description: string | null } | { __typename: 'JsonMetadataEntry', jsonString: string, label: string, description: string | null } | { __typename: 'MarkdownMetadataEntry', mdStr: string, label: string, description: string | null } | { __typename: 'NotebookMetadataEntry', path: string, label: string, description: string | null } | { __typename: 'NullMetadataEntry', label: string, description: string | null } | { __typename: 'PathMetadataEntry', path: string, label: string, description: string | null } | { __typename: 'PipelineRunMetadataEntry', runId: string, label: string, description: string | null } | { __typename: 'PythonArtifactMetadataEntry', module: string, name: string, label: string, description: string | null } | { __typename: 'TableMetadataEntry', label: string, description: string | null, table: { __typename: 'Table', records: Array<string>, schema: { __typename: 'TableSchema', columns: Array<{ __typename: 'TableColumn', name: string, description: string | null, type: string, constraints: { __typename: 'TableColumnConstraints', nullable: boolean, unique: boolean, other: Array<string> } }>, constraints: { __typename: 'TableConstraints', other: Array<string> } | null } } } | { __typename: 'TableSchemaMetadataEntry', label: string, description: string | null, schema: { __typename: 'TableSchema', columns: Array<{ __typename: 'TableColumn', name: string, description: string | null, type: string, constraints: { __typename: 'TableColumnConstraints', nullable: boolean, unique: boolean, other: Array<string> } }>, constraints: { __typename: 'TableConstraints', other: Array<string> } | null } } | { __typename: 'TextMetadataEntry', text: string, label: string, description: string | null } | { __typename: 'UrlMetadataEntry', url: string, label: string, description: string | null }>, inputSchemaType: { __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | null, outputSchemaType: { __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | null } | { __typename: 'RegularDagsterType', key: string, name: string | null, displayName: string, description: string | null, isNullable: boolean, isList: boolean, isBuiltin: boolean, isNothing: boolean, metadataEntries: Array<{ __typename: 'AssetMetadataEntry', label: string, description: string | null, assetKey: { __typename: 'AssetKey', path: Array<string> } } | { __typename: 'BoolMetadataEntry', boolValue: boolean | null, label: string, description: string | null } | { __typename: 'FloatMetadataEntry', floatValue: number | null, label: string, description: string | null } | { __typename: 'IntMetadataEntry', intValue: number | null, intRepr: string, label: string, description: string | null } | { __typename: 'JsonMetadataEntry', jsonString: string, label: string, description: string | null } | { __typename: 'MarkdownMetadataEntry', mdStr: string, label: string, description: string | null } | { __typename: 'NotebookMetadataEntry', path: string, label: string, description: string | null } | { __typename: 'NullMetadataEntry', label: string, description: string | null } | { __typename: 'PathMetadataEntry', path: string, label: string, description: string | null } | { __typename: 'PipelineRunMetadataEntry', runId: string, label: string, description: string | null } | { __typename: 'PythonArtifactMetadataEntry', module: string, name: string, label: string, description: string | null } | { __typename: 'TableMetadataEntry', label: string, description: string | null, table: { __typename: 'Table', records: Array<string>, schema: { __typename: 'TableSchema', columns: Array<{ __typename: 'TableColumn', name: string, description: string | null, type: string, constraints: { __typename: 'TableColumnConstraints', nullable: boolean, unique: boolean, other: Array<string> } }>, constraints: { __typename: 'TableConstraints', other: Array<string> } | null } } } | { __typename: 'TableSchemaMetadataEntry', label: string, description: string | null, schema: { __typename: 'TableSchema', columns: Array<{ __typename: 'TableColumn', name: string, description: string | null, type: string, constraints: { __typename: 'TableColumnConstraints', nullable: boolean, unique: boolean, other: Array<string> } }>, constraints: { __typename: 'TableConstraints', other: Array<string> } | null } } | { __typename: 'TextMetadataEntry', text: string, label: string, description: string | null } | { __typename: 'UrlMetadataEntry', url: string, label: string, description: string | null }>, inputSchemaType: { __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | null, outputSchemaType: { __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | null }>, metadataEntries: Array<{ __typename: 'AssetMetadataEntry', label: string, description: string | null, assetKey: { __typename: 'AssetKey', path: Array<string> } } | { __typename: 'BoolMetadataEntry', boolValue: boolean | null, label: string, description: string | null } | { __typename: 'FloatMetadataEntry', floatValue: number | null, label: string, description: string | null } | { __typename: 'IntMetadataEntry', intValue: number | null, intRepr: string, label: string, description: string | null } | { __typename: 'JsonMetadataEntry', jsonString: string, label: string, description: string | null } | { __typename: 'MarkdownMetadataEntry', mdStr: string, label: string, description: string | null } | { __typename: 'NotebookMetadataEntry', path: string, label: string, description: string | null } | { __typename: 'NullMetadataEntry', label: string, description: string | null } | { __typename: 'PathMetadataEntry', path: string, label: string, description: string | null } | { __typename: 'PipelineRunMetadataEntry', runId: string, label: string, description: string | null } | { __typename: 'PythonArtifactMetadataEntry', module: string, name: string, label: string, description: string | null } | { __typename: 'TableMetadataEntry', label: string, description: string | null, table: { __typename: 'Table', records: Array<string>, schema: { __typename: 'TableSchema', columns: Array<{ __typename: 'TableColumn', name: string, description: string | null, type: string, constraints: { __typename: 'TableColumnConstraints', nullable: boolean, unique: boolean, other: Array<string> } }>, constraints: { __typename: 'TableConstraints', other: Array<string> } | null } } } | { __typename: 'TableSchemaMetadataEntry', label: string, description: string | null, schema: { __typename: 'TableSchema', columns: Array<{ __typename: 'TableColumn', name: string, description: string | null, type: string, constraints: { __typename: 'TableColumnConstraints', nullable: boolean, unique: boolean, other: Array<string> } }>, constraints: { __typename: 'TableConstraints', other: Array<string> } | null } } | { __typename: 'TextMetadataEntry', text: string, label: string, description: string | null } | { __typename: 'UrlMetadataEntry', url: string, label: string, description: string | null }>, inputSchemaType: { __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | null, outputSchemaType: { __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | null } | null } | { __typename: 'AssetNotFoundError' } };

export type AssetGraphQueryQueryVariables = Exact<{
  pipelineSelector?: InputMaybe<PipelineSelector>;
  groupSelector?: InputMaybe<AssetGroupSelector>;
}>;


export type AssetGraphQueryQuery = { __typename: 'DagitQuery', assetNodes: Array<{ __typename: 'AssetNode', id: string, groupName: string | null, graphName: string | null, jobNames: Array<string>, opNames: Array<string>, opVersion: string | null, description: string | null, computeKind: string | null, isPartitioned: boolean, isObservable: boolean, isSource: boolean, repository: { __typename: 'Repository', id: string, name: string, location: { __typename: 'RepositoryLocation', id: string, name: string } }, dependencyKeys: Array<{ __typename: 'AssetKey', path: Array<string> }>, dependedByKeys: Array<{ __typename: 'AssetKey', path: Array<string> }>, assetKey: { __typename: 'AssetKey', path: Array<string> } }> };

export type AssetNodeForGraphQueryFragment = { __typename: 'AssetNode', id: string, groupName: string | null, graphName: string | null, jobNames: Array<string>, opNames: Array<string>, opVersion: string | null, description: string | null, computeKind: string | null, isPartitioned: boolean, isObservable: boolean, isSource: boolean, repository: { __typename: 'Repository', id: string, name: string, location: { __typename: 'RepositoryLocation', id: string, name: string } }, dependencyKeys: Array<{ __typename: 'AssetKey', path: Array<string> }>, dependedByKeys: Array<{ __typename: 'AssetKey', path: Array<string> }>, assetKey: { __typename: 'AssetKey', path: Array<string> } };

export type AssetForNavigationQueryQueryVariables = Exact<{
  key: AssetKeyInput;
}>;


export type AssetForNavigationQueryQuery = { __typename: 'DagitQuery', assetOrError: { __typename: 'Asset', id: string, definition: { __typename: 'AssetNode', id: string, opNames: Array<string>, jobNames: Array<string>, groupName: string | null, repository: { __typename: 'Repository', id: string, name: string, location: { __typename: 'RepositoryLocation', id: string, name: string } } } | null } | { __typename: 'AssetNotFoundError' } };

export type AssetLatestInfoFragmentFragment = { __typename: 'AssetLatestInfo', unstartedRunIds: Array<string>, inProgressRunIds: Array<string>, assetKey: { __typename: 'AssetKey', path: Array<string> }, latestRun: { __typename: 'Run', id: string, status: RunStatus, endTime: number | null } | null };

export type AssetLatestInfoRunFragment = { __typename: 'Run', status: RunStatus, endTime: number | null, id: string };

export type AssetGraphLiveQueryQueryVariables = Exact<{
  assetKeys: Array<AssetKeyInput> | AssetKeyInput;
}>;


export type AssetGraphLiveQueryQuery = { __typename: 'DagitQuery', assetNodes: Array<{ __typename: 'AssetNode', id: string, opNames: Array<string>, currentLogicalVersion: string | null, projectedLogicalVersion: string | null, repository: { __typename: 'Repository', id: string }, assetKey: { __typename: 'AssetKey', path: Array<string> }, assetMaterializations: Array<{ __typename: 'MaterializationEvent', timestamp: string, runId: string }>, freshnessPolicy: { __typename: 'FreshnessPolicy', maximumLagMinutes: number, cronSchedule: string | null } | null, freshnessInfo: { __typename: 'AssetFreshnessInfo', currentMinutesLate: number | null } | null, assetObservations: Array<{ __typename: 'ObservationEvent', timestamp: string, runId: string }> }>, assetsLatestInfo: Array<{ __typename: 'AssetLatestInfo', unstartedRunIds: Array<string>, inProgressRunIds: Array<string>, assetKey: { __typename: 'AssetKey', path: Array<string> }, latestRun: { __typename: 'Run', id: string, status: RunStatus, endTime: number | null } | null }> };

export type AssetLiveRunLogsSubscriptionSubscriptionVariables = Exact<{
  runId: Scalars['ID'];
}>;


export type AssetLiveRunLogsSubscriptionSubscription = { __typename: 'DagitSubscription', pipelineRunLogs: { __typename: 'PipelineRunLogsSubscriptionFailure' } | { __typename: 'PipelineRunLogsSubscriptionSuccess', messages: Array<{ __typename: 'AlertFailureEvent' } | { __typename: 'AlertStartEvent' } | { __typename: 'AlertSuccessEvent' } | { __typename: 'AssetMaterializationPlannedEvent', assetKey: { __typename: 'AssetKey', path: Array<string> } | null } | { __typename: 'EngineEvent' } | { __typename: 'ExecutionStepFailureEvent', stepKey: string | null } | { __typename: 'ExecutionStepInputEvent' } | { __typename: 'ExecutionStepOutputEvent' } | { __typename: 'ExecutionStepRestartEvent' } | { __typename: 'ExecutionStepSkippedEvent' } | { __typename: 'ExecutionStepStartEvent', stepKey: string | null } | { __typename: 'ExecutionStepSuccessEvent' } | { __typename: 'ExecutionStepUpForRetryEvent' } | { __typename: 'HandledOutputEvent' } | { __typename: 'HookCompletedEvent' } | { __typename: 'HookErroredEvent' } | { __typename: 'HookSkippedEvent' } | { __typename: 'LoadedInputEvent' } | { __typename: 'LogMessageEvent' } | { __typename: 'LogsCapturedEvent' } | { __typename: 'MaterializationEvent', assetKey: { __typename: 'AssetKey', path: Array<string> } | null } | { __typename: 'ObjectStoreOperationEvent' } | { __typename: 'ObservationEvent', assetKey: { __typename: 'AssetKey', path: Array<string> } | null } | { __typename: 'ResourceInitFailureEvent' } | { __typename: 'ResourceInitStartedEvent' } | { __typename: 'ResourceInitSuccessEvent' } | { __typename: 'RunCanceledEvent' } | { __typename: 'RunCancelingEvent' } | { __typename: 'RunDequeuedEvent' } | { __typename: 'RunEnqueuedEvent' } | { __typename: 'RunFailureEvent' } | { __typename: 'RunStartEvent' } | { __typename: 'RunStartingEvent' } | { __typename: 'RunSuccessEvent' } | { __typename: 'StepExpectationResultEvent' } | { __typename: 'StepWorkerStartedEvent' } | { __typename: 'StepWorkerStartingEvent' }> } };

export type AssetNodeConfigFragmentFragment = { __typename: 'AssetNode', id: string, configField: { __typename: 'ConfigTypeField', name: string, isRequired: boolean, configType: { __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } } | null };

export type AssetDefinitionCollisionQueryQueryVariables = Exact<{
  assetKeys: Array<AssetKeyInput> | AssetKeyInput;
}>;


export type AssetDefinitionCollisionQueryQuery = { __typename: 'DagitQuery', assetNodeDefinitionCollisions: Array<{ __typename: 'AssetNodeDefinitionCollision', assetKey: { __typename: 'AssetKey', path: Array<string> }, repositories: Array<{ __typename: 'Repository', id: string, name: string, location: { __typename: 'RepositoryLocation', id: string, name: string } }> }> };

export type AssetLineageFragmentFragment = { __typename: 'AssetLineageInfo', partitions: Array<string>, assetKey: { __typename: 'AssetKey', path: Array<string> } };

export type AssetNodeOpMetadataFragmentFragment = { __typename: 'AssetNode', id: string, metadataEntries: Array<{ __typename: 'AssetMetadataEntry', label: string, description: string | null, assetKey: { __typename: 'AssetKey', path: Array<string> } } | { __typename: 'BoolMetadataEntry', boolValue: boolean | null, label: string, description: string | null } | { __typename: 'FloatMetadataEntry', floatValue: number | null, label: string, description: string | null } | { __typename: 'IntMetadataEntry', intValue: number | null, intRepr: string, label: string, description: string | null } | { __typename: 'JsonMetadataEntry', jsonString: string, label: string, description: string | null } | { __typename: 'MarkdownMetadataEntry', mdStr: string, label: string, description: string | null } | { __typename: 'NotebookMetadataEntry', path: string, label: string, description: string | null } | { __typename: 'NullMetadataEntry', label: string, description: string | null } | { __typename: 'PathMetadataEntry', path: string, label: string, description: string | null } | { __typename: 'PipelineRunMetadataEntry', runId: string, label: string, description: string | null } | { __typename: 'PythonArtifactMetadataEntry', module: string, name: string, label: string, description: string | null } | { __typename: 'TableMetadataEntry', label: string, description: string | null, table: { __typename: 'Table', records: Array<string>, schema: { __typename: 'TableSchema', columns: Array<{ __typename: 'TableColumn', name: string, description: string | null, type: string, constraints: { __typename: 'TableColumnConstraints', nullable: boolean, unique: boolean, other: Array<string> } }>, constraints: { __typename: 'TableConstraints', other: Array<string> } | null } } } | { __typename: 'TableSchemaMetadataEntry', label: string, description: string | null, schema: { __typename: 'TableSchema', columns: Array<{ __typename: 'TableColumn', name: string, description: string | null, type: string, constraints: { __typename: 'TableColumnConstraints', nullable: boolean, unique: boolean, other: Array<string> } }>, constraints: { __typename: 'TableConstraints', other: Array<string> } | null } } | { __typename: 'TextMetadataEntry', text: string, label: string, description: string | null } | { __typename: 'UrlMetadataEntry', url: string, label: string, description: string | null }>, type: { __typename: 'ListDagsterType', key: string, name: string | null, displayName: string, description: string | null, isNullable: boolean, isList: boolean, isBuiltin: boolean, isNothing: boolean, innerTypes: Array<{ __typename: 'ListDagsterType', key: string, name: string | null, displayName: string, description: string | null, isNullable: boolean, isList: boolean, isBuiltin: boolean, isNothing: boolean, metadataEntries: Array<{ __typename: 'AssetMetadataEntry', label: string, description: string | null, assetKey: { __typename: 'AssetKey', path: Array<string> } } | { __typename: 'BoolMetadataEntry', boolValue: boolean | null, label: string, description: string | null } | { __typename: 'FloatMetadataEntry', floatValue: number | null, label: string, description: string | null } | { __typename: 'IntMetadataEntry', intValue: number | null, intRepr: string, label: string, description: string | null } | { __typename: 'JsonMetadataEntry', jsonString: string, label: string, description: string | null } | { __typename: 'MarkdownMetadataEntry', mdStr: string, label: string, description: string | null } | { __typename: 'NotebookMetadataEntry', path: string, label: string, description: string | null } | { __typename: 'NullMetadataEntry', label: string, description: string | null } | { __typename: 'PathMetadataEntry', path: string, label: string, description: string | null } | { __typename: 'PipelineRunMetadataEntry', runId: string, label: string, description: string | null } | { __typename: 'PythonArtifactMetadataEntry', module: string, name: string, label: string, description: string | null } | { __typename: 'TableMetadataEntry', label: string, description: string | null, table: { __typename: 'Table', records: Array<string>, schema: { __typename: 'TableSchema', columns: Array<{ __typename: 'TableColumn', name: string, description: string | null, type: string, constraints: { __typename: 'TableColumnConstraints', nullable: boolean, unique: boolean, other: Array<string> } }>, constraints: { __typename: 'TableConstraints', other: Array<string> } | null } } } | { __typename: 'TableSchemaMetadataEntry', label: string, description: string | null, schema: { __typename: 'TableSchema', columns: Array<{ __typename: 'TableColumn', name: string, description: string | null, type: string, constraints: { __typename: 'TableColumnConstraints', nullable: boolean, unique: boolean, other: Array<string> } }>, constraints: { __typename: 'TableConstraints', other: Array<string> } | null } } | { __typename: 'TextMetadataEntry', text: string, label: string, description: string | null } | { __typename: 'UrlMetadataEntry', url: string, label: string, description: string | null }>, inputSchemaType: { __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | null, outputSchemaType: { __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | null } | { __typename: 'NullableDagsterType', key: string, name: string | null, displayName: string, description: string | null, isNullable: boolean, isList: boolean, isBuiltin: boolean, isNothing: boolean, metadataEntries: Array<{ __typename: 'AssetMetadataEntry', label: string, description: string | null, assetKey: { __typename: 'AssetKey', path: Array<string> } } | { __typename: 'BoolMetadataEntry', boolValue: boolean | null, label: string, description: string | null } | { __typename: 'FloatMetadataEntry', floatValue: number | null, label: string, description: string | null } | { __typename: 'IntMetadataEntry', intValue: number | null, intRepr: string, label: string, description: string | null } | { __typename: 'JsonMetadataEntry', jsonString: string, label: string, description: string | null } | { __typename: 'MarkdownMetadataEntry', mdStr: string, label: string, description: string | null } | { __typename: 'NotebookMetadataEntry', path: string, label: string, description: string | null } | { __typename: 'NullMetadataEntry', label: string, description: string | null } | { __typename: 'PathMetadataEntry', path: string, label: string, description: string | null } | { __typename: 'PipelineRunMetadataEntry', runId: string, label: string, description: string | null } | { __typename: 'PythonArtifactMetadataEntry', module: string, name: string, label: string, description: string | null } | { __typename: 'TableMetadataEntry', label: string, description: string | null, table: { __typename: 'Table', records: Array<string>, schema: { __typename: 'TableSchema', columns: Array<{ __typename: 'TableColumn', name: string, description: string | null, type: string, constraints: { __typename: 'TableColumnConstraints', nullable: boolean, unique: boolean, other: Array<string> } }>, constraints: { __typename: 'TableConstraints', other: Array<string> } | null } } } | { __typename: 'TableSchemaMetadataEntry', label: string, description: string | null, schema: { __typename: 'TableSchema', columns: Array<{ __typename: 'TableColumn', name: string, description: string | null, type: string, constraints: { __typename: 'TableColumnConstraints', nullable: boolean, unique: boolean, other: Array<string> } }>, constraints: { __typename: 'TableConstraints', other: Array<string> } | null } } | { __typename: 'TextMetadataEntry', text: string, label: string, description: string | null } | { __typename: 'UrlMetadataEntry', url: string, label: string, description: string | null }>, inputSchemaType: { __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | null, outputSchemaType: { __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | null } | { __typename: 'RegularDagsterType', key: string, name: string | null, displayName: string, description: string | null, isNullable: boolean, isList: boolean, isBuiltin: boolean, isNothing: boolean, metadataEntries: Array<{ __typename: 'AssetMetadataEntry', label: string, description: string | null, assetKey: { __typename: 'AssetKey', path: Array<string> } } | { __typename: 'BoolMetadataEntry', boolValue: boolean | null, label: string, description: string | null } | { __typename: 'FloatMetadataEntry', floatValue: number | null, label: string, description: string | null } | { __typename: 'IntMetadataEntry', intValue: number | null, intRepr: string, label: string, description: string | null } | { __typename: 'JsonMetadataEntry', jsonString: string, label: string, description: string | null } | { __typename: 'MarkdownMetadataEntry', mdStr: string, label: string, description: string | null } | { __typename: 'NotebookMetadataEntry', path: string, label: string, description: string | null } | { __typename: 'NullMetadataEntry', label: string, description: string | null } | { __typename: 'PathMetadataEntry', path: string, label: string, description: string | null } | { __typename: 'PipelineRunMetadataEntry', runId: string, label: string, description: string | null } | { __typename: 'PythonArtifactMetadataEntry', module: string, name: string, label: string, description: string | null } | { __typename: 'TableMetadataEntry', label: string, description: string | null, table: { __typename: 'Table', records: Array<string>, schema: { __typename: 'TableSchema', columns: Array<{ __typename: 'TableColumn', name: string, description: string | null, type: string, constraints: { __typename: 'TableColumnConstraints', nullable: boolean, unique: boolean, other: Array<string> } }>, constraints: { __typename: 'TableConstraints', other: Array<string> } | null } } } | { __typename: 'TableSchemaMetadataEntry', label: string, description: string | null, schema: { __typename: 'TableSchema', columns: Array<{ __typename: 'TableColumn', name: string, description: string | null, type: string, constraints: { __typename: 'TableColumnConstraints', nullable: boolean, unique: boolean, other: Array<string> } }>, constraints: { __typename: 'TableConstraints', other: Array<string> } | null } } | { __typename: 'TextMetadataEntry', text: string, label: string, description: string | null } | { __typename: 'UrlMetadataEntry', url: string, label: string, description: string | null }>, inputSchemaType: { __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | null, outputSchemaType: { __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | null }>, metadataEntries: Array<{ __typename: 'AssetMetadataEntry', label: string, description: string | null, assetKey: { __typename: 'AssetKey', path: Array<string> } } | { __typename: 'BoolMetadataEntry', boolValue: boolean | null, label: string, description: string | null } | { __typename: 'FloatMetadataEntry', floatValue: number | null, label: string, description: string | null } | { __typename: 'IntMetadataEntry', intValue: number | null, intRepr: string, label: string, description: string | null } | { __typename: 'JsonMetadataEntry', jsonString: string, label: string, description: string | null } | { __typename: 'MarkdownMetadataEntry', mdStr: string, label: string, description: string | null } | { __typename: 'NotebookMetadataEntry', path: string, label: string, description: string | null } | { __typename: 'NullMetadataEntry', label: string, description: string | null } | { __typename: 'PathMetadataEntry', path: string, label: string, description: string | null } | { __typename: 'PipelineRunMetadataEntry', runId: string, label: string, description: string | null } | { __typename: 'PythonArtifactMetadataEntry', module: string, name: string, label: string, description: string | null } | { __typename: 'TableMetadataEntry', label: string, description: string | null, table: { __typename: 'Table', records: Array<string>, schema: { __typename: 'TableSchema', columns: Array<{ __typename: 'TableColumn', name: string, description: string | null, type: string, constraints: { __typename: 'TableColumnConstraints', nullable: boolean, unique: boolean, other: Array<string> } }>, constraints: { __typename: 'TableConstraints', other: Array<string> } | null } } } | { __typename: 'TableSchemaMetadataEntry', label: string, description: string | null, schema: { __typename: 'TableSchema', columns: Array<{ __typename: 'TableColumn', name: string, description: string | null, type: string, constraints: { __typename: 'TableColumnConstraints', nullable: boolean, unique: boolean, other: Array<string> } }>, constraints: { __typename: 'TableConstraints', other: Array<string> } | null } } | { __typename: 'TextMetadataEntry', text: string, label: string, description: string | null } | { __typename: 'UrlMetadataEntry', url: string, label: string, description: string | null }>, inputSchemaType: { __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | null, outputSchemaType: { __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | null } | { __typename: 'NullableDagsterType', key: string, name: string | null, displayName: string, description: string | null, isNullable: boolean, isList: boolean, isBuiltin: boolean, isNothing: boolean, innerTypes: Array<{ __typename: 'ListDagsterType', key: string, name: string | null, displayName: string, description: string | null, isNullable: boolean, isList: boolean, isBuiltin: boolean, isNothing: boolean, metadataEntries: Array<{ __typename: 'AssetMetadataEntry', label: string, description: string | null, assetKey: { __typename: 'AssetKey', path: Array<string> } } | { __typename: 'BoolMetadataEntry', boolValue: boolean | null, label: string, description: string | null } | { __typename: 'FloatMetadataEntry', floatValue: number | null, label: string, description: string | null } | { __typename: 'IntMetadataEntry', intValue: number | null, intRepr: string, label: string, description: string | null } | { __typename: 'JsonMetadataEntry', jsonString: string, label: string, description: string | null } | { __typename: 'MarkdownMetadataEntry', mdStr: string, label: string, description: string | null } | { __typename: 'NotebookMetadataEntry', path: string, label: string, description: string | null } | { __typename: 'NullMetadataEntry', label: string, description: string | null } | { __typename: 'PathMetadataEntry', path: string, label: string, description: string | null } | { __typename: 'PipelineRunMetadataEntry', runId: string, label: string, description: string | null } | { __typename: 'PythonArtifactMetadataEntry', module: string, name: string, label: string, description: string | null } | { __typename: 'TableMetadataEntry', label: string, description: string | null, table: { __typename: 'Table', records: Array<string>, schema: { __typename: 'TableSchema', columns: Array<{ __typename: 'TableColumn', name: string, description: string | null, type: string, constraints: { __typename: 'TableColumnConstraints', nullable: boolean, unique: boolean, other: Array<string> } }>, constraints: { __typename: 'TableConstraints', other: Array<string> } | null } } } | { __typename: 'TableSchemaMetadataEntry', label: string, description: string | null, schema: { __typename: 'TableSchema', columns: Array<{ __typename: 'TableColumn', name: string, description: string | null, type: string, constraints: { __typename: 'TableColumnConstraints', nullable: boolean, unique: boolean, other: Array<string> } }>, constraints: { __typename: 'TableConstraints', other: Array<string> } | null } } | { __typename: 'TextMetadataEntry', text: string, label: string, description: string | null } | { __typename: 'UrlMetadataEntry', url: string, label: string, description: string | null }>, inputSchemaType: { __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | null, outputSchemaType: { __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | null } | { __typename: 'NullableDagsterType', key: string, name: string | null, displayName: string, description: string | null, isNullable: boolean, isList: boolean, isBuiltin: boolean, isNothing: boolean, metadataEntries: Array<{ __typename: 'AssetMetadataEntry', label: string, description: string | null, assetKey: { __typename: 'AssetKey', path: Array<string> } } | { __typename: 'BoolMetadataEntry', boolValue: boolean | null, label: string, description: string | null } | { __typename: 'FloatMetadataEntry', floatValue: number | null, label: string, description: string | null } | { __typename: 'IntMetadataEntry', intValue: number | null, intRepr: string, label: string, description: string | null } | { __typename: 'JsonMetadataEntry', jsonString: string, label: string, description: string | null } | { __typename: 'MarkdownMetadataEntry', mdStr: string, label: string, description: string | null } | { __typename: 'NotebookMetadataEntry', path: string, label: string, description: string | null } | { __typename: 'NullMetadataEntry', label: string, description: string | null } | { __typename: 'PathMetadataEntry', path: string, label: string, description: string | null } | { __typename: 'PipelineRunMetadataEntry', runId: string, label: string, description: string | null } | { __typename: 'PythonArtifactMetadataEntry', module: string, name: string, label: string, description: string | null } | { __typename: 'TableMetadataEntry', label: string, description: string | null, table: { __typename: 'Table', records: Array<string>, schema: { __typename: 'TableSchema', columns: Array<{ __typename: 'TableColumn', name: string, description: string | null, type: string, constraints: { __typename: 'TableColumnConstraints', nullable: boolean, unique: boolean, other: Array<string> } }>, constraints: { __typename: 'TableConstraints', other: Array<string> } | null } } } | { __typename: 'TableSchemaMetadataEntry', label: string, description: string | null, schema: { __typename: 'TableSchema', columns: Array<{ __typename: 'TableColumn', name: string, description: string | null, type: string, constraints: { __typename: 'TableColumnConstraints', nullable: boolean, unique: boolean, other: Array<string> } }>, constraints: { __typename: 'TableConstraints', other: Array<string> } | null } } | { __typename: 'TextMetadataEntry', text: string, label: string, description: string | null } | { __typename: 'UrlMetadataEntry', url: string, label: string, description: string | null }>, inputSchemaType: { __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | null, outputSchemaType: { __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | null } | { __typename: 'RegularDagsterType', key: string, name: string | null, displayName: string, description: string | null, isNullable: boolean, isList: boolean, isBuiltin: boolean, isNothing: boolean, metadataEntries: Array<{ __typename: 'AssetMetadataEntry', label: string, description: string | null, assetKey: { __typename: 'AssetKey', path: Array<string> } } | { __typename: 'BoolMetadataEntry', boolValue: boolean | null, label: string, description: string | null } | { __typename: 'FloatMetadataEntry', floatValue: number | null, label: string, description: string | null } | { __typename: 'IntMetadataEntry', intValue: number | null, intRepr: string, label: string, description: string | null } | { __typename: 'JsonMetadataEntry', jsonString: string, label: string, description: string | null } | { __typename: 'MarkdownMetadataEntry', mdStr: string, label: string, description: string | null } | { __typename: 'NotebookMetadataEntry', path: string, label: string, description: string | null } | { __typename: 'NullMetadataEntry', label: string, description: string | null } | { __typename: 'PathMetadataEntry', path: string, label: string, description: string | null } | { __typename: 'PipelineRunMetadataEntry', runId: string, label: string, description: string | null } | { __typename: 'PythonArtifactMetadataEntry', module: string, name: string, label: string, description: string | null } | { __typename: 'TableMetadataEntry', label: string, description: string | null, table: { __typename: 'Table', records: Array<string>, schema: { __typename: 'TableSchema', columns: Array<{ __typename: 'TableColumn', name: string, description: string | null, type: string, constraints: { __typename: 'TableColumnConstraints', nullable: boolean, unique: boolean, other: Array<string> } }>, constraints: { __typename: 'TableConstraints', other: Array<string> } | null } } } | { __typename: 'TableSchemaMetadataEntry', label: string, description: string | null, schema: { __typename: 'TableSchema', columns: Array<{ __typename: 'TableColumn', name: string, description: string | null, type: string, constraints: { __typename: 'TableColumnConstraints', nullable: boolean, unique: boolean, other: Array<string> } }>, constraints: { __typename: 'TableConstraints', other: Array<string> } | null } } | { __typename: 'TextMetadataEntry', text: string, label: string, description: string | null } | { __typename: 'UrlMetadataEntry', url: string, label: string, description: string | null }>, inputSchemaType: { __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | null, outputSchemaType: { __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | null }>, metadataEntries: Array<{ __typename: 'AssetMetadataEntry', label: string, description: string | null, assetKey: { __typename: 'AssetKey', path: Array<string> } } | { __typename: 'BoolMetadataEntry', boolValue: boolean | null, label: string, description: string | null } | { __typename: 'FloatMetadataEntry', floatValue: number | null, label: string, description: string | null } | { __typename: 'IntMetadataEntry', intValue: number | null, intRepr: string, label: string, description: string | null } | { __typename: 'JsonMetadataEntry', jsonString: string, label: string, description: string | null } | { __typename: 'MarkdownMetadataEntry', mdStr: string, label: string, description: string | null } | { __typename: 'NotebookMetadataEntry', path: string, label: string, description: string | null } | { __typename: 'NullMetadataEntry', label: string, description: string | null } | { __typename: 'PathMetadataEntry', path: string, label: string, description: string | null } | { __typename: 'PipelineRunMetadataEntry', runId: string, label: string, description: string | null } | { __typename: 'PythonArtifactMetadataEntry', module: string, name: string, label: string, description: string | null } | { __typename: 'TableMetadataEntry', label: string, description: string | null, table: { __typename: 'Table', records: Array<string>, schema: { __typename: 'TableSchema', columns: Array<{ __typename: 'TableColumn', name: string, description: string | null, type: string, constraints: { __typename: 'TableColumnConstraints', nullable: boolean, unique: boolean, other: Array<string> } }>, constraints: { __typename: 'TableConstraints', other: Array<string> } | null } } } | { __typename: 'TableSchemaMetadataEntry', label: string, description: string | null, schema: { __typename: 'TableSchema', columns: Array<{ __typename: 'TableColumn', name: string, description: string | null, type: string, constraints: { __typename: 'TableColumnConstraints', nullable: boolean, unique: boolean, other: Array<string> } }>, constraints: { __typename: 'TableConstraints', other: Array<string> } | null } } | { __typename: 'TextMetadataEntry', text: string, label: string, description: string | null } | { __typename: 'UrlMetadataEntry', url: string, label: string, description: string | null }>, inputSchemaType: { __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | null, outputSchemaType: { __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | null } | { __typename: 'RegularDagsterType', key: string, name: string | null, displayName: string, description: string | null, isNullable: boolean, isList: boolean, isBuiltin: boolean, isNothing: boolean, innerTypes: Array<{ __typename: 'ListDagsterType', key: string, name: string | null, displayName: string, description: string | null, isNullable: boolean, isList: boolean, isBuiltin: boolean, isNothing: boolean, metadataEntries: Array<{ __typename: 'AssetMetadataEntry', label: string, description: string | null, assetKey: { __typename: 'AssetKey', path: Array<string> } } | { __typename: 'BoolMetadataEntry', boolValue: boolean | null, label: string, description: string | null } | { __typename: 'FloatMetadataEntry', floatValue: number | null, label: string, description: string | null } | { __typename: 'IntMetadataEntry', intValue: number | null, intRepr: string, label: string, description: string | null } | { __typename: 'JsonMetadataEntry', jsonString: string, label: string, description: string | null } | { __typename: 'MarkdownMetadataEntry', mdStr: string, label: string, description: string | null } | { __typename: 'NotebookMetadataEntry', path: string, label: string, description: string | null } | { __typename: 'NullMetadataEntry', label: string, description: string | null } | { __typename: 'PathMetadataEntry', path: string, label: string, description: string | null } | { __typename: 'PipelineRunMetadataEntry', runId: string, label: string, description: string | null } | { __typename: 'PythonArtifactMetadataEntry', module: string, name: string, label: string, description: string | null } | { __typename: 'TableMetadataEntry', label: string, description: string | null, table: { __typename: 'Table', records: Array<string>, schema: { __typename: 'TableSchema', columns: Array<{ __typename: 'TableColumn', name: string, description: string | null, type: string, constraints: { __typename: 'TableColumnConstraints', nullable: boolean, unique: boolean, other: Array<string> } }>, constraints: { __typename: 'TableConstraints', other: Array<string> } | null } } } | { __typename: 'TableSchemaMetadataEntry', label: string, description: string | null, schema: { __typename: 'TableSchema', columns: Array<{ __typename: 'TableColumn', name: string, description: string | null, type: string, constraints: { __typename: 'TableColumnConstraints', nullable: boolean, unique: boolean, other: Array<string> } }>, constraints: { __typename: 'TableConstraints', other: Array<string> } | null } } | { __typename: 'TextMetadataEntry', text: string, label: string, description: string | null } | { __typename: 'UrlMetadataEntry', url: string, label: string, description: string | null }>, inputSchemaType: { __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | null, outputSchemaType: { __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | null } | { __typename: 'NullableDagsterType', key: string, name: string | null, displayName: string, description: string | null, isNullable: boolean, isList: boolean, isBuiltin: boolean, isNothing: boolean, metadataEntries: Array<{ __typename: 'AssetMetadataEntry', label: string, description: string | null, assetKey: { __typename: 'AssetKey', path: Array<string> } } | { __typename: 'BoolMetadataEntry', boolValue: boolean | null, label: string, description: string | null } | { __typename: 'FloatMetadataEntry', floatValue: number | null, label: string, description: string | null } | { __typename: 'IntMetadataEntry', intValue: number | null, intRepr: string, label: string, description: string | null } | { __typename: 'JsonMetadataEntry', jsonString: string, label: string, description: string | null } | { __typename: 'MarkdownMetadataEntry', mdStr: string, label: string, description: string | null } | { __typename: 'NotebookMetadataEntry', path: string, label: string, description: string | null } | { __typename: 'NullMetadataEntry', label: string, description: string | null } | { __typename: 'PathMetadataEntry', path: string, label: string, description: string | null } | { __typename: 'PipelineRunMetadataEntry', runId: string, label: string, description: string | null } | { __typename: 'PythonArtifactMetadataEntry', module: string, name: string, label: string, description: string | null } | { __typename: 'TableMetadataEntry', label: string, description: string | null, table: { __typename: 'Table', records: Array<string>, schema: { __typename: 'TableSchema', columns: Array<{ __typename: 'TableColumn', name: string, description: string | null, type: string, constraints: { __typename: 'TableColumnConstraints', nullable: boolean, unique: boolean, other: Array<string> } }>, constraints: { __typename: 'TableConstraints', other: Array<string> } | null } } } | { __typename: 'TableSchemaMetadataEntry', label: string, description: string | null, schema: { __typename: 'TableSchema', columns: Array<{ __typename: 'TableColumn', name: string, description: string | null, type: string, constraints: { __typename: 'TableColumnConstraints', nullable: boolean, unique: boolean, other: Array<string> } }>, constraints: { __typename: 'TableConstraints', other: Array<string> } | null } } | { __typename: 'TextMetadataEntry', text: string, label: string, description: string | null } | { __typename: 'UrlMetadataEntry', url: string, label: string, description: string | null }>, inputSchemaType: { __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | null, outputSchemaType: { __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | null } | { __typename: 'RegularDagsterType', key: string, name: string | null, displayName: string, description: string | null, isNullable: boolean, isList: boolean, isBuiltin: boolean, isNothing: boolean, metadataEntries: Array<{ __typename: 'AssetMetadataEntry', label: string, description: string | null, assetKey: { __typename: 'AssetKey', path: Array<string> } } | { __typename: 'BoolMetadataEntry', boolValue: boolean | null, label: string, description: string | null } | { __typename: 'FloatMetadataEntry', floatValue: number | null, label: string, description: string | null } | { __typename: 'IntMetadataEntry', intValue: number | null, intRepr: string, label: string, description: string | null } | { __typename: 'JsonMetadataEntry', jsonString: string, label: string, description: string | null } | { __typename: 'MarkdownMetadataEntry', mdStr: string, label: string, description: string | null } | { __typename: 'NotebookMetadataEntry', path: string, label: string, description: string | null } | { __typename: 'NullMetadataEntry', label: string, description: string | null } | { __typename: 'PathMetadataEntry', path: string, label: string, description: string | null } | { __typename: 'PipelineRunMetadataEntry', runId: string, label: string, description: string | null } | { __typename: 'PythonArtifactMetadataEntry', module: string, name: string, label: string, description: string | null } | { __typename: 'TableMetadataEntry', label: string, description: string | null, table: { __typename: 'Table', records: Array<string>, schema: { __typename: 'TableSchema', columns: Array<{ __typename: 'TableColumn', name: string, description: string | null, type: string, constraints: { __typename: 'TableColumnConstraints', nullable: boolean, unique: boolean, other: Array<string> } }>, constraints: { __typename: 'TableConstraints', other: Array<string> } | null } } } | { __typename: 'TableSchemaMetadataEntry', label: string, description: string | null, schema: { __typename: 'TableSchema', columns: Array<{ __typename: 'TableColumn', name: string, description: string | null, type: string, constraints: { __typename: 'TableColumnConstraints', nullable: boolean, unique: boolean, other: Array<string> } }>, constraints: { __typename: 'TableConstraints', other: Array<string> } | null } } | { __typename: 'TextMetadataEntry', text: string, label: string, description: string | null } | { __typename: 'UrlMetadataEntry', url: string, label: string, description: string | null }>, inputSchemaType: { __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | null, outputSchemaType: { __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | null }>, metadataEntries: Array<{ __typename: 'AssetMetadataEntry', label: string, description: string | null, assetKey: { __typename: 'AssetKey', path: Array<string> } } | { __typename: 'BoolMetadataEntry', boolValue: boolean | null, label: string, description: string | null } | { __typename: 'FloatMetadataEntry', floatValue: number | null, label: string, description: string | null } | { __typename: 'IntMetadataEntry', intValue: number | null, intRepr: string, label: string, description: string | null } | { __typename: 'JsonMetadataEntry', jsonString: string, label: string, description: string | null } | { __typename: 'MarkdownMetadataEntry', mdStr: string, label: string, description: string | null } | { __typename: 'NotebookMetadataEntry', path: string, label: string, description: string | null } | { __typename: 'NullMetadataEntry', label: string, description: string | null } | { __typename: 'PathMetadataEntry', path: string, label: string, description: string | null } | { __typename: 'PipelineRunMetadataEntry', runId: string, label: string, description: string | null } | { __typename: 'PythonArtifactMetadataEntry', module: string, name: string, label: string, description: string | null } | { __typename: 'TableMetadataEntry', label: string, description: string | null, table: { __typename: 'Table', records: Array<string>, schema: { __typename: 'TableSchema', columns: Array<{ __typename: 'TableColumn', name: string, description: string | null, type: string, constraints: { __typename: 'TableColumnConstraints', nullable: boolean, unique: boolean, other: Array<string> } }>, constraints: { __typename: 'TableConstraints', other: Array<string> } | null } } } | { __typename: 'TableSchemaMetadataEntry', label: string, description: string | null, schema: { __typename: 'TableSchema', columns: Array<{ __typename: 'TableColumn', name: string, description: string | null, type: string, constraints: { __typename: 'TableColumnConstraints', nullable: boolean, unique: boolean, other: Array<string> } }>, constraints: { __typename: 'TableConstraints', other: Array<string> } | null } } | { __typename: 'TextMetadataEntry', text: string, label: string, description: string | null } | { __typename: 'UrlMetadataEntry', url: string, label: string, description: string | null }>, inputSchemaType: { __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | null, outputSchemaType: { __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | null } | null };

export type AssetNodeDefinitionFragmentFragment = { __typename: 'AssetNode', id: string, description: string | null, graphName: string | null, opNames: Array<string>, opVersion: string | null, jobNames: Array<string>, computeKind: string | null, isPartitioned: boolean, isObservable: boolean, isSource: boolean, partitionDefinition: { __typename: 'PartitionDefinition', description: string } | null, repository: { __typename: 'Repository', id: string, name: string, location: { __typename: 'RepositoryLocation', id: string, name: string } }, configField: { __typename: 'ConfigTypeField', name: string, isRequired: boolean, configType: { __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } } | null, assetKey: { __typename: 'AssetKey', path: Array<string> }, metadataEntries: Array<{ __typename: 'AssetMetadataEntry', label: string, description: string | null, assetKey: { __typename: 'AssetKey', path: Array<string> } } | { __typename: 'BoolMetadataEntry', boolValue: boolean | null, label: string, description: string | null } | { __typename: 'FloatMetadataEntry', floatValue: number | null, label: string, description: string | null } | { __typename: 'IntMetadataEntry', intValue: number | null, intRepr: string, label: string, description: string | null } | { __typename: 'JsonMetadataEntry', jsonString: string, label: string, description: string | null } | { __typename: 'MarkdownMetadataEntry', mdStr: string, label: string, description: string | null } | { __typename: 'NotebookMetadataEntry', path: string, label: string, description: string | null } | { __typename: 'NullMetadataEntry', label: string, description: string | null } | { __typename: 'PathMetadataEntry', path: string, label: string, description: string | null } | { __typename: 'PipelineRunMetadataEntry', runId: string, label: string, description: string | null } | { __typename: 'PythonArtifactMetadataEntry', module: string, name: string, label: string, description: string | null } | { __typename: 'TableMetadataEntry', label: string, description: string | null, table: { __typename: 'Table', records: Array<string>, schema: { __typename: 'TableSchema', columns: Array<{ __typename: 'TableColumn', name: string, description: string | null, type: string, constraints: { __typename: 'TableColumnConstraints', nullable: boolean, unique: boolean, other: Array<string> } }>, constraints: { __typename: 'TableConstraints', other: Array<string> } | null } } } | { __typename: 'TableSchemaMetadataEntry', label: string, description: string | null, schema: { __typename: 'TableSchema', columns: Array<{ __typename: 'TableColumn', name: string, description: string | null, type: string, constraints: { __typename: 'TableColumnConstraints', nullable: boolean, unique: boolean, other: Array<string> } }>, constraints: { __typename: 'TableConstraints', other: Array<string> } | null } } | { __typename: 'TextMetadataEntry', text: string, label: string, description: string | null } | { __typename: 'UrlMetadataEntry', url: string, label: string, description: string | null }>, type: { __typename: 'ListDagsterType', key: string, name: string | null, displayName: string, description: string | null, isNullable: boolean, isList: boolean, isBuiltin: boolean, isNothing: boolean, innerTypes: Array<{ __typename: 'ListDagsterType', key: string, name: string | null, displayName: string, description: string | null, isNullable: boolean, isList: boolean, isBuiltin: boolean, isNothing: boolean, metadataEntries: Array<{ __typename: 'AssetMetadataEntry', label: string, description: string | null, assetKey: { __typename: 'AssetKey', path: Array<string> } } | { __typename: 'BoolMetadataEntry', boolValue: boolean | null, label: string, description: string | null } | { __typename: 'FloatMetadataEntry', floatValue: number | null, label: string, description: string | null } | { __typename: 'IntMetadataEntry', intValue: number | null, intRepr: string, label: string, description: string | null } | { __typename: 'JsonMetadataEntry', jsonString: string, label: string, description: string | null } | { __typename: 'MarkdownMetadataEntry', mdStr: string, label: string, description: string | null } | { __typename: 'NotebookMetadataEntry', path: string, label: string, description: string | null } | { __typename: 'NullMetadataEntry', label: string, description: string | null } | { __typename: 'PathMetadataEntry', path: string, label: string, description: string | null } | { __typename: 'PipelineRunMetadataEntry', runId: string, label: string, description: string | null } | { __typename: 'PythonArtifactMetadataEntry', module: string, name: string, label: string, description: string | null } | { __typename: 'TableMetadataEntry', label: string, description: string | null, table: { __typename: 'Table', records: Array<string>, schema: { __typename: 'TableSchema', columns: Array<{ __typename: 'TableColumn', name: string, description: string | null, type: string, constraints: { __typename: 'TableColumnConstraints', nullable: boolean, unique: boolean, other: Array<string> } }>, constraints: { __typename: 'TableConstraints', other: Array<string> } | null } } } | { __typename: 'TableSchemaMetadataEntry', label: string, description: string | null, schema: { __typename: 'TableSchema', columns: Array<{ __typename: 'TableColumn', name: string, description: string | null, type: string, constraints: { __typename: 'TableColumnConstraints', nullable: boolean, unique: boolean, other: Array<string> } }>, constraints: { __typename: 'TableConstraints', other: Array<string> } | null } } | { __typename: 'TextMetadataEntry', text: string, label: string, description: string | null } | { __typename: 'UrlMetadataEntry', url: string, label: string, description: string | null }>, inputSchemaType: { __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | null, outputSchemaType: { __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | null } | { __typename: 'NullableDagsterType', key: string, name: string | null, displayName: string, description: string | null, isNullable: boolean, isList: boolean, isBuiltin: boolean, isNothing: boolean, metadataEntries: Array<{ __typename: 'AssetMetadataEntry', label: string, description: string | null, assetKey: { __typename: 'AssetKey', path: Array<string> } } | { __typename: 'BoolMetadataEntry', boolValue: boolean | null, label: string, description: string | null } | { __typename: 'FloatMetadataEntry', floatValue: number | null, label: string, description: string | null } | { __typename: 'IntMetadataEntry', intValue: number | null, intRepr: string, label: string, description: string | null } | { __typename: 'JsonMetadataEntry', jsonString: string, label: string, description: string | null } | { __typename: 'MarkdownMetadataEntry', mdStr: string, label: string, description: string | null } | { __typename: 'NotebookMetadataEntry', path: string, label: string, description: string | null } | { __typename: 'NullMetadataEntry', label: string, description: string | null } | { __typename: 'PathMetadataEntry', path: string, label: string, description: string | null } | { __typename: 'PipelineRunMetadataEntry', runId: string, label: string, description: string | null } | { __typename: 'PythonArtifactMetadataEntry', module: string, name: string, label: string, description: string | null } | { __typename: 'TableMetadataEntry', label: string, description: string | null, table: { __typename: 'Table', records: Array<string>, schema: { __typename: 'TableSchema', columns: Array<{ __typename: 'TableColumn', name: string, description: string | null, type: string, constraints: { __typename: 'TableColumnConstraints', nullable: boolean, unique: boolean, other: Array<string> } }>, constraints: { __typename: 'TableConstraints', other: Array<string> } | null } } } | { __typename: 'TableSchemaMetadataEntry', label: string, description: string | null, schema: { __typename: 'TableSchema', columns: Array<{ __typename: 'TableColumn', name: string, description: string | null, type: string, constraints: { __typename: 'TableColumnConstraints', nullable: boolean, unique: boolean, other: Array<string> } }>, constraints: { __typename: 'TableConstraints', other: Array<string> } | null } } | { __typename: 'TextMetadataEntry', text: string, label: string, description: string | null } | { __typename: 'UrlMetadataEntry', url: string, label: string, description: string | null }>, inputSchemaType: { __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | null, outputSchemaType: { __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | null } | { __typename: 'RegularDagsterType', key: string, name: string | null, displayName: string, description: string | null, isNullable: boolean, isList: boolean, isBuiltin: boolean, isNothing: boolean, metadataEntries: Array<{ __typename: 'AssetMetadataEntry', label: string, description: string | null, assetKey: { __typename: 'AssetKey', path: Array<string> } } | { __typename: 'BoolMetadataEntry', boolValue: boolean | null, label: string, description: string | null } | { __typename: 'FloatMetadataEntry', floatValue: number | null, label: string, description: string | null } | { __typename: 'IntMetadataEntry', intValue: number | null, intRepr: string, label: string, description: string | null } | { __typename: 'JsonMetadataEntry', jsonString: string, label: string, description: string | null } | { __typename: 'MarkdownMetadataEntry', mdStr: string, label: string, description: string | null } | { __typename: 'NotebookMetadataEntry', path: string, label: string, description: string | null } | { __typename: 'NullMetadataEntry', label: string, description: string | null } | { __typename: 'PathMetadataEntry', path: string, label: string, description: string | null } | { __typename: 'PipelineRunMetadataEntry', runId: string, label: string, description: string | null } | { __typename: 'PythonArtifactMetadataEntry', module: string, name: string, label: string, description: string | null } | { __typename: 'TableMetadataEntry', label: string, description: string | null, table: { __typename: 'Table', records: Array<string>, schema: { __typename: 'TableSchema', columns: Array<{ __typename: 'TableColumn', name: string, description: string | null, type: string, constraints: { __typename: 'TableColumnConstraints', nullable: boolean, unique: boolean, other: Array<string> } }>, constraints: { __typename: 'TableConstraints', other: Array<string> } | null } } } | { __typename: 'TableSchemaMetadataEntry', label: string, description: string | null, schema: { __typename: 'TableSchema', columns: Array<{ __typename: 'TableColumn', name: string, description: string | null, type: string, constraints: { __typename: 'TableColumnConstraints', nullable: boolean, unique: boolean, other: Array<string> } }>, constraints: { __typename: 'TableConstraints', other: Array<string> } | null } } | { __typename: 'TextMetadataEntry', text: string, label: string, description: string | null } | { __typename: 'UrlMetadataEntry', url: string, label: string, description: string | null }>, inputSchemaType: { __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | null, outputSchemaType: { __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | null }>, metadataEntries: Array<{ __typename: 'AssetMetadataEntry', label: string, description: string | null, assetKey: { __typename: 'AssetKey', path: Array<string> } } | { __typename: 'BoolMetadataEntry', boolValue: boolean | null, label: string, description: string | null } | { __typename: 'FloatMetadataEntry', floatValue: number | null, label: string, description: string | null } | { __typename: 'IntMetadataEntry', intValue: number | null, intRepr: string, label: string, description: string | null } | { __typename: 'JsonMetadataEntry', jsonString: string, label: string, description: string | null } | { __typename: 'MarkdownMetadataEntry', mdStr: string, label: string, description: string | null } | { __typename: 'NotebookMetadataEntry', path: string, label: string, description: string | null } | { __typename: 'NullMetadataEntry', label: string, description: string | null } | { __typename: 'PathMetadataEntry', path: string, label: string, description: string | null } | { __typename: 'PipelineRunMetadataEntry', runId: string, label: string, description: string | null } | { __typename: 'PythonArtifactMetadataEntry', module: string, name: string, label: string, description: string | null } | { __typename: 'TableMetadataEntry', label: string, description: string | null, table: { __typename: 'Table', records: Array<string>, schema: { __typename: 'TableSchema', columns: Array<{ __typename: 'TableColumn', name: string, description: string | null, type: string, constraints: { __typename: 'TableColumnConstraints', nullable: boolean, unique: boolean, other: Array<string> } }>, constraints: { __typename: 'TableConstraints', other: Array<string> } | null } } } | { __typename: 'TableSchemaMetadataEntry', label: string, description: string | null, schema: { __typename: 'TableSchema', columns: Array<{ __typename: 'TableColumn', name: string, description: string | null, type: string, constraints: { __typename: 'TableColumnConstraints', nullable: boolean, unique: boolean, other: Array<string> } }>, constraints: { __typename: 'TableConstraints', other: Array<string> } | null } } | { __typename: 'TextMetadataEntry', text: string, label: string, description: string | null } | { __typename: 'UrlMetadataEntry', url: string, label: string, description: string | null }>, inputSchemaType: { __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | null, outputSchemaType: { __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | null } | { __typename: 'NullableDagsterType', key: string, name: string | null, displayName: string, description: string | null, isNullable: boolean, isList: boolean, isBuiltin: boolean, isNothing: boolean, innerTypes: Array<{ __typename: 'ListDagsterType', key: string, name: string | null, displayName: string, description: string | null, isNullable: boolean, isList: boolean, isBuiltin: boolean, isNothing: boolean, metadataEntries: Array<{ __typename: 'AssetMetadataEntry', label: string, description: string | null, assetKey: { __typename: 'AssetKey', path: Array<string> } } | { __typename: 'BoolMetadataEntry', boolValue: boolean | null, label: string, description: string | null } | { __typename: 'FloatMetadataEntry', floatValue: number | null, label: string, description: string | null } | { __typename: 'IntMetadataEntry', intValue: number | null, intRepr: string, label: string, description: string | null } | { __typename: 'JsonMetadataEntry', jsonString: string, label: string, description: string | null } | { __typename: 'MarkdownMetadataEntry', mdStr: string, label: string, description: string | null } | { __typename: 'NotebookMetadataEntry', path: string, label: string, description: string | null } | { __typename: 'NullMetadataEntry', label: string, description: string | null } | { __typename: 'PathMetadataEntry', path: string, label: string, description: string | null } | { __typename: 'PipelineRunMetadataEntry', runId: string, label: string, description: string | null } | { __typename: 'PythonArtifactMetadataEntry', module: string, name: string, label: string, description: string | null } | { __typename: 'TableMetadataEntry', label: string, description: string | null, table: { __typename: 'Table', records: Array<string>, schema: { __typename: 'TableSchema', columns: Array<{ __typename: 'TableColumn', name: string, description: string | null, type: string, constraints: { __typename: 'TableColumnConstraints', nullable: boolean, unique: boolean, other: Array<string> } }>, constraints: { __typename: 'TableConstraints', other: Array<string> } | null } } } | { __typename: 'TableSchemaMetadataEntry', label: string, description: string | null, schema: { __typename: 'TableSchema', columns: Array<{ __typename: 'TableColumn', name: string, description: string | null, type: string, constraints: { __typename: 'TableColumnConstraints', nullable: boolean, unique: boolean, other: Array<string> } }>, constraints: { __typename: 'TableConstraints', other: Array<string> } | null } } | { __typename: 'TextMetadataEntry', text: string, label: string, description: string | null } | { __typename: 'UrlMetadataEntry', url: string, label: string, description: string | null }>, inputSchemaType: { __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | null, outputSchemaType: { __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | null } | { __typename: 'NullableDagsterType', key: string, name: string | null, displayName: string, description: string | null, isNullable: boolean, isList: boolean, isBuiltin: boolean, isNothing: boolean, metadataEntries: Array<{ __typename: 'AssetMetadataEntry', label: string, description: string | null, assetKey: { __typename: 'AssetKey', path: Array<string> } } | { __typename: 'BoolMetadataEntry', boolValue: boolean | null, label: string, description: string | null } | { __typename: 'FloatMetadataEntry', floatValue: number | null, label: string, description: string | null } | { __typename: 'IntMetadataEntry', intValue: number | null, intRepr: string, label: string, description: string | null } | { __typename: 'JsonMetadataEntry', jsonString: string, label: string, description: string | null } | { __typename: 'MarkdownMetadataEntry', mdStr: string, label: string, description: string | null } | { __typename: 'NotebookMetadataEntry', path: string, label: string, description: string | null } | { __typename: 'NullMetadataEntry', label: string, description: string | null } | { __typename: 'PathMetadataEntry', path: string, label: string, description: string | null } | { __typename: 'PipelineRunMetadataEntry', runId: string, label: string, description: string | null } | { __typename: 'PythonArtifactMetadataEntry', module: string, name: string, label: string, description: string | null } | { __typename: 'TableMetadataEntry', label: string, description: string | null, table: { __typename: 'Table', records: Array<string>, schema: { __typename: 'TableSchema', columns: Array<{ __typename: 'TableColumn', name: string, description: string | null, type: string, constraints: { __typename: 'TableColumnConstraints', nullable: boolean, unique: boolean, other: Array<string> } }>, constraints: { __typename: 'TableConstraints', other: Array<string> } | null } } } | { __typename: 'TableSchemaMetadataEntry', label: string, description: string | null, schema: { __typename: 'TableSchema', columns: Array<{ __typename: 'TableColumn', name: string, description: string | null, type: string, constraints: { __typename: 'TableColumnConstraints', nullable: boolean, unique: boolean, other: Array<string> } }>, constraints: { __typename: 'TableConstraints', other: Array<string> } | null } } | { __typename: 'TextMetadataEntry', text: string, label: string, description: string | null } | { __typename: 'UrlMetadataEntry', url: string, label: string, description: string | null }>, inputSchemaType: { __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | null, outputSchemaType: { __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | null } | { __typename: 'RegularDagsterType', key: string, name: string | null, displayName: string, description: string | null, isNullable: boolean, isList: boolean, isBuiltin: boolean, isNothing: boolean, metadataEntries: Array<{ __typename: 'AssetMetadataEntry', label: string, description: string | null, assetKey: { __typename: 'AssetKey', path: Array<string> } } | { __typename: 'BoolMetadataEntry', boolValue: boolean | null, label: string, description: string | null } | { __typename: 'FloatMetadataEntry', floatValue: number | null, label: string, description: string | null } | { __typename: 'IntMetadataEntry', intValue: number | null, intRepr: string, label: string, description: string | null } | { __typename: 'JsonMetadataEntry', jsonString: string, label: string, description: string | null } | { __typename: 'MarkdownMetadataEntry', mdStr: string, label: string, description: string | null } | { __typename: 'NotebookMetadataEntry', path: string, label: string, description: string | null } | { __typename: 'NullMetadataEntry', label: string, description: string | null } | { __typename: 'PathMetadataEntry', path: string, label: string, description: string | null } | { __typename: 'PipelineRunMetadataEntry', runId: string, label: string, description: string | null } | { __typename: 'PythonArtifactMetadataEntry', module: string, name: string, label: string, description: string | null } | { __typename: 'TableMetadataEntry', label: string, description: string | null, table: { __typename: 'Table', records: Array<string>, schema: { __typename: 'TableSchema', columns: Array<{ __typename: 'TableColumn', name: string, description: string | null, type: string, constraints: { __typename: 'TableColumnConstraints', nullable: boolean, unique: boolean, other: Array<string> } }>, constraints: { __typename: 'TableConstraints', other: Array<string> } | null } } } | { __typename: 'TableSchemaMetadataEntry', label: string, description: string | null, schema: { __typename: 'TableSchema', columns: Array<{ __typename: 'TableColumn', name: string, description: string | null, type: string, constraints: { __typename: 'TableColumnConstraints', nullable: boolean, unique: boolean, other: Array<string> } }>, constraints: { __typename: 'TableConstraints', other: Array<string> } | null } } | { __typename: 'TextMetadataEntry', text: string, label: string, description: string | null } | { __typename: 'UrlMetadataEntry', url: string, label: string, description: string | null }>, inputSchemaType: { __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | null, outputSchemaType: { __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | null }>, metadataEntries: Array<{ __typename: 'AssetMetadataEntry', label: string, description: string | null, assetKey: { __typename: 'AssetKey', path: Array<string> } } | { __typename: 'BoolMetadataEntry', boolValue: boolean | null, label: string, description: string | null } | { __typename: 'FloatMetadataEntry', floatValue: number | null, label: string, description: string | null } | { __typename: 'IntMetadataEntry', intValue: number | null, intRepr: string, label: string, description: string | null } | { __typename: 'JsonMetadataEntry', jsonString: string, label: string, description: string | null } | { __typename: 'MarkdownMetadataEntry', mdStr: string, label: string, description: string | null } | { __typename: 'NotebookMetadataEntry', path: string, label: string, description: string | null } | { __typename: 'NullMetadataEntry', label: string, description: string | null } | { __typename: 'PathMetadataEntry', path: string, label: string, description: string | null } | { __typename: 'PipelineRunMetadataEntry', runId: string, label: string, description: string | null } | { __typename: 'PythonArtifactMetadataEntry', module: string, name: string, label: string, description: string | null } | { __typename: 'TableMetadataEntry', label: string, description: string | null, table: { __typename: 'Table', records: Array<string>, schema: { __typename: 'TableSchema', columns: Array<{ __typename: 'TableColumn', name: string, description: string | null, type: string, constraints: { __typename: 'TableColumnConstraints', nullable: boolean, unique: boolean, other: Array<string> } }>, constraints: { __typename: 'TableConstraints', other: Array<string> } | null } } } | { __typename: 'TableSchemaMetadataEntry', label: string, description: string | null, schema: { __typename: 'TableSchema', columns: Array<{ __typename: 'TableColumn', name: string, description: string | null, type: string, constraints: { __typename: 'TableColumnConstraints', nullable: boolean, unique: boolean, other: Array<string> } }>, constraints: { __typename: 'TableConstraints', other: Array<string> } | null } } | { __typename: 'TextMetadataEntry', text: string, label: string, description: string | null } | { __typename: 'UrlMetadataEntry', url: string, label: string, description: string | null }>, inputSchemaType: { __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | null, outputSchemaType: { __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | null } | { __typename: 'RegularDagsterType', key: string, name: string | null, displayName: string, description: string | null, isNullable: boolean, isList: boolean, isBuiltin: boolean, isNothing: boolean, innerTypes: Array<{ __typename: 'ListDagsterType', key: string, name: string | null, displayName: string, description: string | null, isNullable: boolean, isList: boolean, isBuiltin: boolean, isNothing: boolean, metadataEntries: Array<{ __typename: 'AssetMetadataEntry', label: string, description: string | null, assetKey: { __typename: 'AssetKey', path: Array<string> } } | { __typename: 'BoolMetadataEntry', boolValue: boolean | null, label: string, description: string | null } | { __typename: 'FloatMetadataEntry', floatValue: number | null, label: string, description: string | null } | { __typename: 'IntMetadataEntry', intValue: number | null, intRepr: string, label: string, description: string | null } | { __typename: 'JsonMetadataEntry', jsonString: string, label: string, description: string | null } | { __typename: 'MarkdownMetadataEntry', mdStr: string, label: string, description: string | null } | { __typename: 'NotebookMetadataEntry', path: string, label: string, description: string | null } | { __typename: 'NullMetadataEntry', label: string, description: string | null } | { __typename: 'PathMetadataEntry', path: string, label: string, description: string | null } | { __typename: 'PipelineRunMetadataEntry', runId: string, label: string, description: string | null } | { __typename: 'PythonArtifactMetadataEntry', module: string, name: string, label: string, description: string | null } | { __typename: 'TableMetadataEntry', label: string, description: string | null, table: { __typename: 'Table', records: Array<string>, schema: { __typename: 'TableSchema', columns: Array<{ __typename: 'TableColumn', name: string, description: string | null, type: string, constraints: { __typename: 'TableColumnConstraints', nullable: boolean, unique: boolean, other: Array<string> } }>, constraints: { __typename: 'TableConstraints', other: Array<string> } | null } } } | { __typename: 'TableSchemaMetadataEntry', label: string, description: string | null, schema: { __typename: 'TableSchema', columns: Array<{ __typename: 'TableColumn', name: string, description: string | null, type: string, constraints: { __typename: 'TableColumnConstraints', nullable: boolean, unique: boolean, other: Array<string> } }>, constraints: { __typename: 'TableConstraints', other: Array<string> } | null } } | { __typename: 'TextMetadataEntry', text: string, label: string, description: string | null } | { __typename: 'UrlMetadataEntry', url: string, label: string, description: string | null }>, inputSchemaType: { __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | null, outputSchemaType: { __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | null } | { __typename: 'NullableDagsterType', key: string, name: string | null, displayName: string, description: string | null, isNullable: boolean, isList: boolean, isBuiltin: boolean, isNothing: boolean, metadataEntries: Array<{ __typename: 'AssetMetadataEntry', label: string, description: string | null, assetKey: { __typename: 'AssetKey', path: Array<string> } } | { __typename: 'BoolMetadataEntry', boolValue: boolean | null, label: string, description: string | null } | { __typename: 'FloatMetadataEntry', floatValue: number | null, label: string, description: string | null } | { __typename: 'IntMetadataEntry', intValue: number | null, intRepr: string, label: string, description: string | null } | { __typename: 'JsonMetadataEntry', jsonString: string, label: string, description: string | null } | { __typename: 'MarkdownMetadataEntry', mdStr: string, label: string, description: string | null } | { __typename: 'NotebookMetadataEntry', path: string, label: string, description: string | null } | { __typename: 'NullMetadataEntry', label: string, description: string | null } | { __typename: 'PathMetadataEntry', path: string, label: string, description: string | null } | { __typename: 'PipelineRunMetadataEntry', runId: string, label: string, description: string | null } | { __typename: 'PythonArtifactMetadataEntry', module: string, name: string, label: string, description: string | null } | { __typename: 'TableMetadataEntry', label: string, description: string | null, table: { __typename: 'Table', records: Array<string>, schema: { __typename: 'TableSchema', columns: Array<{ __typename: 'TableColumn', name: string, description: string | null, type: string, constraints: { __typename: 'TableColumnConstraints', nullable: boolean, unique: boolean, other: Array<string> } }>, constraints: { __typename: 'TableConstraints', other: Array<string> } | null } } } | { __typename: 'TableSchemaMetadataEntry', label: string, description: string | null, schema: { __typename: 'TableSchema', columns: Array<{ __typename: 'TableColumn', name: string, description: string | null, type: string, constraints: { __typename: 'TableColumnConstraints', nullable: boolean, unique: boolean, other: Array<string> } }>, constraints: { __typename: 'TableConstraints', other: Array<string> } | null } } | { __typename: 'TextMetadataEntry', text: string, label: string, description: string | null } | { __typename: 'UrlMetadataEntry', url: string, label: string, description: string | null }>, inputSchemaType: { __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | null, outputSchemaType: { __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | null } | { __typename: 'RegularDagsterType', key: string, name: string | null, displayName: string, description: string | null, isNullable: boolean, isList: boolean, isBuiltin: boolean, isNothing: boolean, metadataEntries: Array<{ __typename: 'AssetMetadataEntry', label: string, description: string | null, assetKey: { __typename: 'AssetKey', path: Array<string> } } | { __typename: 'BoolMetadataEntry', boolValue: boolean | null, label: string, description: string | null } | { __typename: 'FloatMetadataEntry', floatValue: number | null, label: string, description: string | null } | { __typename: 'IntMetadataEntry', intValue: number | null, intRepr: string, label: string, description: string | null } | { __typename: 'JsonMetadataEntry', jsonString: string, label: string, description: string | null } | { __typename: 'MarkdownMetadataEntry', mdStr: string, label: string, description: string | null } | { __typename: 'NotebookMetadataEntry', path: string, label: string, description: string | null } | { __typename: 'NullMetadataEntry', label: string, description: string | null } | { __typename: 'PathMetadataEntry', path: string, label: string, description: string | null } | { __typename: 'PipelineRunMetadataEntry', runId: string, label: string, description: string | null } | { __typename: 'PythonArtifactMetadataEntry', module: string, name: string, label: string, description: string | null } | { __typename: 'TableMetadataEntry', label: string, description: string | null, table: { __typename: 'Table', records: Array<string>, schema: { __typename: 'TableSchema', columns: Array<{ __typename: 'TableColumn', name: string, description: string | null, type: string, constraints: { __typename: 'TableColumnConstraints', nullable: boolean, unique: boolean, other: Array<string> } }>, constraints: { __typename: 'TableConstraints', other: Array<string> } | null } } } | { __typename: 'TableSchemaMetadataEntry', label: string, description: string | null, schema: { __typename: 'TableSchema', columns: Array<{ __typename: 'TableColumn', name: string, description: string | null, type: string, constraints: { __typename: 'TableColumnConstraints', nullable: boolean, unique: boolean, other: Array<string> } }>, constraints: { __typename: 'TableConstraints', other: Array<string> } | null } } | { __typename: 'TextMetadataEntry', text: string, label: string, description: string | null } | { __typename: 'UrlMetadataEntry', url: string, label: string, description: string | null }>, inputSchemaType: { __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | null, outputSchemaType: { __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | null }>, metadataEntries: Array<{ __typename: 'AssetMetadataEntry', label: string, description: string | null, assetKey: { __typename: 'AssetKey', path: Array<string> } } | { __typename: 'BoolMetadataEntry', boolValue: boolean | null, label: string, description: string | null } | { __typename: 'FloatMetadataEntry', floatValue: number | null, label: string, description: string | null } | { __typename: 'IntMetadataEntry', intValue: number | null, intRepr: string, label: string, description: string | null } | { __typename: 'JsonMetadataEntry', jsonString: string, label: string, description: string | null } | { __typename: 'MarkdownMetadataEntry', mdStr: string, label: string, description: string | null } | { __typename: 'NotebookMetadataEntry', path: string, label: string, description: string | null } | { __typename: 'NullMetadataEntry', label: string, description: string | null } | { __typename: 'PathMetadataEntry', path: string, label: string, description: string | null } | { __typename: 'PipelineRunMetadataEntry', runId: string, label: string, description: string | null } | { __typename: 'PythonArtifactMetadataEntry', module: string, name: string, label: string, description: string | null } | { __typename: 'TableMetadataEntry', label: string, description: string | null, table: { __typename: 'Table', records: Array<string>, schema: { __typename: 'TableSchema', columns: Array<{ __typename: 'TableColumn', name: string, description: string | null, type: string, constraints: { __typename: 'TableColumnConstraints', nullable: boolean, unique: boolean, other: Array<string> } }>, constraints: { __typename: 'TableConstraints', other: Array<string> } | null } } } | { __typename: 'TableSchemaMetadataEntry', label: string, description: string | null, schema: { __typename: 'TableSchema', columns: Array<{ __typename: 'TableColumn', name: string, description: string | null, type: string, constraints: { __typename: 'TableColumnConstraints', nullable: boolean, unique: boolean, other: Array<string> } }>, constraints: { __typename: 'TableConstraints', other: Array<string> } | null } } | { __typename: 'TextMetadataEntry', text: string, label: string, description: string | null } | { __typename: 'UrlMetadataEntry', url: string, label: string, description: string | null }>, inputSchemaType: { __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | null, outputSchemaType: { __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | null } | null };

export type AssetNodeInstigatorsFragmentFragment = { __typename: 'AssetNode', id: string, jobs: Array<{ __typename: 'Pipeline', id: string, name: string, schedules: Array<{ __typename: 'Schedule', id: string, name: string, cronSchedule: string, executionTimezone: string | null, scheduleState: { __typename: 'InstigationState', id: string, selectorId: string, status: InstigationStatus } }>, sensors: Array<{ __typename: 'Sensor', id: string, jobOriginId: string, name: string, sensorState: { __typename: 'InstigationState', id: string, selectorId: string, status: InstigationStatus } }> }> };

export type AssetPartitionDetailQueryQueryVariables = Exact<{
  assetKey: AssetKeyInput;
  partitionKey: Scalars['String'];
}>;


export type AssetPartitionDetailQueryQuery = { __typename: 'DagitQuery', assetNodeOrError: { __typename: 'AssetNode', id: string, assetMaterializations: Array<{ __typename: 'MaterializationEvent', runId: string, partition: string | null, timestamp: string, stepKey: string | null, label: string | null, description: string | null, runOrError: { __typename: 'PythonError' } | { __typename: 'Run', id: string, runId: string, mode: string, status: RunStatus, pipelineName: string, pipelineSnapshotId: string | null, repositoryOrigin: { __typename: 'RepositoryOrigin', id: string, repositoryName: string, repositoryLocationName: string } | null } | { __typename: 'RunNotFoundError' }, metadataEntries: Array<{ __typename: 'AssetMetadataEntry', label: string, description: string | null, assetKey: { __typename: 'AssetKey', path: Array<string> } } | { __typename: 'BoolMetadataEntry', boolValue: boolean | null, label: string, description: string | null } | { __typename: 'FloatMetadataEntry', floatValue: number | null, label: string, description: string | null } | { __typename: 'IntMetadataEntry', intValue: number | null, intRepr: string, label: string, description: string | null } | { __typename: 'JsonMetadataEntry', jsonString: string, label: string, description: string | null } | { __typename: 'MarkdownMetadataEntry', mdStr: string, label: string, description: string | null } | { __typename: 'NotebookMetadataEntry', path: string, label: string, description: string | null } | { __typename: 'NullMetadataEntry', label: string, description: string | null } | { __typename: 'PathMetadataEntry', path: string, label: string, description: string | null } | { __typename: 'PipelineRunMetadataEntry', runId: string, label: string, description: string | null } | { __typename: 'PythonArtifactMetadataEntry', module: string, name: string, label: string, description: string | null } | { __typename: 'TableMetadataEntry', label: string, description: string | null, table: { __typename: 'Table', records: Array<string>, schema: { __typename: 'TableSchema', columns: Array<{ __typename: 'TableColumn', name: string, description: string | null, type: string, constraints: { __typename: 'TableColumnConstraints', nullable: boolean, unique: boolean, other: Array<string> } }>, constraints: { __typename: 'TableConstraints', other: Array<string> } | null } } } | { __typename: 'TableSchemaMetadataEntry', label: string, description: string | null, schema: { __typename: 'TableSchema', columns: Array<{ __typename: 'TableColumn', name: string, description: string | null, type: string, constraints: { __typename: 'TableColumnConstraints', nullable: boolean, unique: boolean, other: Array<string> } }>, constraints: { __typename: 'TableConstraints', other: Array<string> } | null } } | { __typename: 'TextMetadataEntry', text: string, label: string, description: string | null } | { __typename: 'UrlMetadataEntry', url: string, label: string, description: string | null }>, assetLineage: Array<{ __typename: 'AssetLineageInfo', partitions: Array<string>, assetKey: { __typename: 'AssetKey', path: Array<string> } }> }>, assetObservations: Array<{ __typename: 'ObservationEvent', runId: string, partition: string | null, timestamp: string, stepKey: string | null, label: string | null, description: string | null, runOrError: { __typename: 'PythonError' } | { __typename: 'Run', id: string, runId: string, mode: string, status: RunStatus, pipelineName: string, pipelineSnapshotId: string | null, repositoryOrigin: { __typename: 'RepositoryOrigin', id: string, repositoryName: string, repositoryLocationName: string } | null } | { __typename: 'RunNotFoundError' }, metadataEntries: Array<{ __typename: 'AssetMetadataEntry', label: string, description: string | null, assetKey: { __typename: 'AssetKey', path: Array<string> } } | { __typename: 'BoolMetadataEntry', boolValue: boolean | null, label: string, description: string | null } | { __typename: 'FloatMetadataEntry', floatValue: number | null, label: string, description: string | null } | { __typename: 'IntMetadataEntry', intValue: number | null, intRepr: string, label: string, description: string | null } | { __typename: 'JsonMetadataEntry', jsonString: string, label: string, description: string | null } | { __typename: 'MarkdownMetadataEntry', mdStr: string, label: string, description: string | null } | { __typename: 'NotebookMetadataEntry', path: string, label: string, description: string | null } | { __typename: 'NullMetadataEntry', label: string, description: string | null } | { __typename: 'PathMetadataEntry', path: string, label: string, description: string | null } | { __typename: 'PipelineRunMetadataEntry', runId: string, label: string, description: string | null } | { __typename: 'PythonArtifactMetadataEntry', module: string, name: string, label: string, description: string | null } | { __typename: 'TableMetadataEntry', label: string, description: string | null, table: { __typename: 'Table', records: Array<string>, schema: { __typename: 'TableSchema', columns: Array<{ __typename: 'TableColumn', name: string, description: string | null, type: string, constraints: { __typename: 'TableColumnConstraints', nullable: boolean, unique: boolean, other: Array<string> } }>, constraints: { __typename: 'TableConstraints', other: Array<string> } | null } } } | { __typename: 'TableSchemaMetadataEntry', label: string, description: string | null, schema: { __typename: 'TableSchema', columns: Array<{ __typename: 'TableColumn', name: string, description: string | null, type: string, constraints: { __typename: 'TableColumnConstraints', nullable: boolean, unique: boolean, other: Array<string> } }>, constraints: { __typename: 'TableConstraints', other: Array<string> } | null } } | { __typename: 'TextMetadataEntry', text: string, label: string, description: string | null } | { __typename: 'UrlMetadataEntry', url: string, label: string, description: string | null }> }> } | { __typename: 'AssetNotFoundError' } };

export type AssetTableDefinitionFragmentFragment = { __typename: 'AssetNode', id: string, groupName: string | null, isSource: boolean, description: string | null, partitionDefinition: { __typename: 'PartitionDefinition', description: string } | null, repository: { __typename: 'Repository', id: string, name: string, location: { __typename: 'RepositoryLocation', id: string, name: string } } };

export type AssetTableFragmentFragment = { __typename: 'Asset', id: string, key: { __typename: 'AssetKey', path: Array<string> }, definition: { __typename: 'AssetNode', id: string, groupName: string | null, isSource: boolean, description: string | null, partitionDefinition: { __typename: 'PartitionDefinition', description: string } | null, repository: { __typename: 'Repository', id: string, name: string, location: { __typename: 'RepositoryLocation', id: string, name: string } } } | null };

export type AssetViewDefinitionQueryQueryVariables = Exact<{
  assetKey: AssetKeyInput;
}>;


export type AssetViewDefinitionQueryQuery = { __typename: 'DagitQuery', assetOrError: { __typename: 'Asset', id: string, key: { __typename: 'AssetKey', path: Array<string> }, assetMaterializations: Array<{ __typename: 'MaterializationEvent', timestamp: string }>, definition: { __typename: 'AssetNode', id: string, groupName: string | null, description: string | null, graphName: string | null, opNames: Array<string>, opVersion: string | null, jobNames: Array<string>, computeKind: string | null, isPartitioned: boolean, isObservable: boolean, isSource: boolean, partitionDefinition: { __typename: 'PartitionDefinition', description: string } | null, partitionKeysByDimension: Array<{ __typename: 'DimensionPartitionKeys', name: string }>, repository: { __typename: 'Repository', id: string, name: string, location: { __typename: 'RepositoryLocation', id: string, name: string } }, jobs: Array<{ __typename: 'Pipeline', id: string, name: string, schedules: Array<{ __typename: 'Schedule', id: string, name: string, cronSchedule: string, executionTimezone: string | null, scheduleState: { __typename: 'InstigationState', id: string, selectorId: string, status: InstigationStatus } }>, sensors: Array<{ __typename: 'Sensor', id: string, jobOriginId: string, name: string, sensorState: { __typename: 'InstigationState', id: string, selectorId: string, status: InstigationStatus } }> }>, configField: { __typename: 'ConfigTypeField', name: string, isRequired: boolean, configType: { __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } } | null, assetKey: { __typename: 'AssetKey', path: Array<string> }, metadataEntries: Array<{ __typename: 'AssetMetadataEntry', label: string, description: string | null, assetKey: { __typename: 'AssetKey', path: Array<string> } } | { __typename: 'BoolMetadataEntry', boolValue: boolean | null, label: string, description: string | null } | { __typename: 'FloatMetadataEntry', floatValue: number | null, label: string, description: string | null } | { __typename: 'IntMetadataEntry', intValue: number | null, intRepr: string, label: string, description: string | null } | { __typename: 'JsonMetadataEntry', jsonString: string, label: string, description: string | null } | { __typename: 'MarkdownMetadataEntry', mdStr: string, label: string, description: string | null } | { __typename: 'NotebookMetadataEntry', path: string, label: string, description: string | null } | { __typename: 'NullMetadataEntry', label: string, description: string | null } | { __typename: 'PathMetadataEntry', path: string, label: string, description: string | null } | { __typename: 'PipelineRunMetadataEntry', runId: string, label: string, description: string | null } | { __typename: 'PythonArtifactMetadataEntry', module: string, name: string, label: string, description: string | null } | { __typename: 'TableMetadataEntry', label: string, description: string | null, table: { __typename: 'Table', records: Array<string>, schema: { __typename: 'TableSchema', columns: Array<{ __typename: 'TableColumn', name: string, description: string | null, type: string, constraints: { __typename: 'TableColumnConstraints', nullable: boolean, unique: boolean, other: Array<string> } }>, constraints: { __typename: 'TableConstraints', other: Array<string> } | null } } } | { __typename: 'TableSchemaMetadataEntry', label: string, description: string | null, schema: { __typename: 'TableSchema', columns: Array<{ __typename: 'TableColumn', name: string, description: string | null, type: string, constraints: { __typename: 'TableColumnConstraints', nullable: boolean, unique: boolean, other: Array<string> } }>, constraints: { __typename: 'TableConstraints', other: Array<string> } | null } } | { __typename: 'TextMetadataEntry', text: string, label: string, description: string | null } | { __typename: 'UrlMetadataEntry', url: string, label: string, description: string | null }>, type: { __typename: 'ListDagsterType', key: string, name: string | null, displayName: string, description: string | null, isNullable: boolean, isList: boolean, isBuiltin: boolean, isNothing: boolean, innerTypes: Array<{ __typename: 'ListDagsterType', key: string, name: string | null, displayName: string, description: string | null, isNullable: boolean, isList: boolean, isBuiltin: boolean, isNothing: boolean, metadataEntries: Array<{ __typename: 'AssetMetadataEntry', label: string, description: string | null, assetKey: { __typename: 'AssetKey', path: Array<string> } } | { __typename: 'BoolMetadataEntry', boolValue: boolean | null, label: string, description: string | null } | { __typename: 'FloatMetadataEntry', floatValue: number | null, label: string, description: string | null } | { __typename: 'IntMetadataEntry', intValue: number | null, intRepr: string, label: string, description: string | null } | { __typename: 'JsonMetadataEntry', jsonString: string, label: string, description: string | null } | { __typename: 'MarkdownMetadataEntry', mdStr: string, label: string, description: string | null } | { __typename: 'NotebookMetadataEntry', path: string, label: string, description: string | null } | { __typename: 'NullMetadataEntry', label: string, description: string | null } | { __typename: 'PathMetadataEntry', path: string, label: string, description: string | null } | { __typename: 'PipelineRunMetadataEntry', runId: string, label: string, description: string | null } | { __typename: 'PythonArtifactMetadataEntry', module: string, name: string, label: string, description: string | null } | { __typename: 'TableMetadataEntry', label: string, description: string | null, table: { __typename: 'Table', records: Array<string>, schema: { __typename: 'TableSchema', columns: Array<{ __typename: 'TableColumn', name: string, description: string | null, type: string, constraints: { __typename: 'TableColumnConstraints', nullable: boolean, unique: boolean, other: Array<string> } }>, constraints: { __typename: 'TableConstraints', other: Array<string> } | null } } } | { __typename: 'TableSchemaMetadataEntry', label: string, description: string | null, schema: { __typename: 'TableSchema', columns: Array<{ __typename: 'TableColumn', name: string, description: string | null, type: string, constraints: { __typename: 'TableColumnConstraints', nullable: boolean, unique: boolean, other: Array<string> } }>, constraints: { __typename: 'TableConstraints', other: Array<string> } | null } } | { __typename: 'TextMetadataEntry', text: string, label: string, description: string | null } | { __typename: 'UrlMetadataEntry', url: string, label: string, description: string | null }>, inputSchemaType: { __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | null, outputSchemaType: { __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | null } | { __typename: 'NullableDagsterType', key: string, name: string | null, displayName: string, description: string | null, isNullable: boolean, isList: boolean, isBuiltin: boolean, isNothing: boolean, metadataEntries: Array<{ __typename: 'AssetMetadataEntry', label: string, description: string | null, assetKey: { __typename: 'AssetKey', path: Array<string> } } | { __typename: 'BoolMetadataEntry', boolValue: boolean | null, label: string, description: string | null } | { __typename: 'FloatMetadataEntry', floatValue: number | null, label: string, description: string | null } | { __typename: 'IntMetadataEntry', intValue: number | null, intRepr: string, label: string, description: string | null } | { __typename: 'JsonMetadataEntry', jsonString: string, label: string, description: string | null } | { __typename: 'MarkdownMetadataEntry', mdStr: string, label: string, description: string | null } | { __typename: 'NotebookMetadataEntry', path: string, label: string, description: string | null } | { __typename: 'NullMetadataEntry', label: string, description: string | null } | { __typename: 'PathMetadataEntry', path: string, label: string, description: string | null } | { __typename: 'PipelineRunMetadataEntry', runId: string, label: string, description: string | null } | { __typename: 'PythonArtifactMetadataEntry', module: string, name: string, label: string, description: string | null } | { __typename: 'TableMetadataEntry', label: string, description: string | null, table: { __typename: 'Table', records: Array<string>, schema: { __typename: 'TableSchema', columns: Array<{ __typename: 'TableColumn', name: string, description: string | null, type: string, constraints: { __typename: 'TableColumnConstraints', nullable: boolean, unique: boolean, other: Array<string> } }>, constraints: { __typename: 'TableConstraints', other: Array<string> } | null } } } | { __typename: 'TableSchemaMetadataEntry', label: string, description: string | null, schema: { __typename: 'TableSchema', columns: Array<{ __typename: 'TableColumn', name: string, description: string | null, type: string, constraints: { __typename: 'TableColumnConstraints', nullable: boolean, unique: boolean, other: Array<string> } }>, constraints: { __typename: 'TableConstraints', other: Array<string> } | null } } | { __typename: 'TextMetadataEntry', text: string, label: string, description: string | null } | { __typename: 'UrlMetadataEntry', url: string, label: string, description: string | null }>, inputSchemaType: { __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | null, outputSchemaType: { __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | null } | { __typename: 'RegularDagsterType', key: string, name: string | null, displayName: string, description: string | null, isNullable: boolean, isList: boolean, isBuiltin: boolean, isNothing: boolean, metadataEntries: Array<{ __typename: 'AssetMetadataEntry', label: string, description: string | null, assetKey: { __typename: 'AssetKey', path: Array<string> } } | { __typename: 'BoolMetadataEntry', boolValue: boolean | null, label: string, description: string | null } | { __typename: 'FloatMetadataEntry', floatValue: number | null, label: string, description: string | null } | { __typename: 'IntMetadataEntry', intValue: number | null, intRepr: string, label: string, description: string | null } | { __typename: 'JsonMetadataEntry', jsonString: string, label: string, description: string | null } | { __typename: 'MarkdownMetadataEntry', mdStr: string, label: string, description: string | null } | { __typename: 'NotebookMetadataEntry', path: string, label: string, description: string | null } | { __typename: 'NullMetadataEntry', label: string, description: string | null } | { __typename: 'PathMetadataEntry', path: string, label: string, description: string | null } | { __typename: 'PipelineRunMetadataEntry', runId: string, label: string, description: string | null } | { __typename: 'PythonArtifactMetadataEntry', module: string, name: string, label: string, description: string | null } | { __typename: 'TableMetadataEntry', label: string, description: string | null, table: { __typename: 'Table', records: Array<string>, schema: { __typename: 'TableSchema', columns: Array<{ __typename: 'TableColumn', name: string, description: string | null, type: string, constraints: { __typename: 'TableColumnConstraints', nullable: boolean, unique: boolean, other: Array<string> } }>, constraints: { __typename: 'TableConstraints', other: Array<string> } | null } } } | { __typename: 'TableSchemaMetadataEntry', label: string, description: string | null, schema: { __typename: 'TableSchema', columns: Array<{ __typename: 'TableColumn', name: string, description: string | null, type: string, constraints: { __typename: 'TableColumnConstraints', nullable: boolean, unique: boolean, other: Array<string> } }>, constraints: { __typename: 'TableConstraints', other: Array<string> } | null } } | { __typename: 'TextMetadataEntry', text: string, label: string, description: string | null } | { __typename: 'UrlMetadataEntry', url: string, label: string, description: string | null }>, inputSchemaType: { __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | null, outputSchemaType: { __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | null }>, metadataEntries: Array<{ __typename: 'AssetMetadataEntry', label: string, description: string | null, assetKey: { __typename: 'AssetKey', path: Array<string> } } | { __typename: 'BoolMetadataEntry', boolValue: boolean | null, label: string, description: string | null } | { __typename: 'FloatMetadataEntry', floatValue: number | null, label: string, description: string | null } | { __typename: 'IntMetadataEntry', intValue: number | null, intRepr: string, label: string, description: string | null } | { __typename: 'JsonMetadataEntry', jsonString: string, label: string, description: string | null } | { __typename: 'MarkdownMetadataEntry', mdStr: string, label: string, description: string | null } | { __typename: 'NotebookMetadataEntry', path: string, label: string, description: string | null } | { __typename: 'NullMetadataEntry', label: string, description: string | null } | { __typename: 'PathMetadataEntry', path: string, label: string, description: string | null } | { __typename: 'PipelineRunMetadataEntry', runId: string, label: string, description: string | null } | { __typename: 'PythonArtifactMetadataEntry', module: string, name: string, label: string, description: string | null } | { __typename: 'TableMetadataEntry', label: string, description: string | null, table: { __typename: 'Table', records: Array<string>, schema: { __typename: 'TableSchema', columns: Array<{ __typename: 'TableColumn', name: string, description: string | null, type: string, constraints: { __typename: 'TableColumnConstraints', nullable: boolean, unique: boolean, other: Array<string> } }>, constraints: { __typename: 'TableConstraints', other: Array<string> } | null } } } | { __typename: 'TableSchemaMetadataEntry', label: string, description: string | null, schema: { __typename: 'TableSchema', columns: Array<{ __typename: 'TableColumn', name: string, description: string | null, type: string, constraints: { __typename: 'TableColumnConstraints', nullable: boolean, unique: boolean, other: Array<string> } }>, constraints: { __typename: 'TableConstraints', other: Array<string> } | null } } | { __typename: 'TextMetadataEntry', text: string, label: string, description: string | null } | { __typename: 'UrlMetadataEntry', url: string, label: string, description: string | null }>, inputSchemaType: { __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | null, outputSchemaType: { __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | null } | { __typename: 'NullableDagsterType', key: string, name: string | null, displayName: string, description: string | null, isNullable: boolean, isList: boolean, isBuiltin: boolean, isNothing: boolean, innerTypes: Array<{ __typename: 'ListDagsterType', key: string, name: string | null, displayName: string, description: string | null, isNullable: boolean, isList: boolean, isBuiltin: boolean, isNothing: boolean, metadataEntries: Array<{ __typename: 'AssetMetadataEntry', label: string, description: string | null, assetKey: { __typename: 'AssetKey', path: Array<string> } } | { __typename: 'BoolMetadataEntry', boolValue: boolean | null, label: string, description: string | null } | { __typename: 'FloatMetadataEntry', floatValue: number | null, label: string, description: string | null } | { __typename: 'IntMetadataEntry', intValue: number | null, intRepr: string, label: string, description: string | null } | { __typename: 'JsonMetadataEntry', jsonString: string, label: string, description: string | null } | { __typename: 'MarkdownMetadataEntry', mdStr: string, label: string, description: string | null } | { __typename: 'NotebookMetadataEntry', path: string, label: string, description: string | null } | { __typename: 'NullMetadataEntry', label: string, description: string | null } | { __typename: 'PathMetadataEntry', path: string, label: string, description: string | null } | { __typename: 'PipelineRunMetadataEntry', runId: string, label: string, description: string | null } | { __typename: 'PythonArtifactMetadataEntry', module: string, name: string, label: string, description: string | null } | { __typename: 'TableMetadataEntry', label: string, description: string | null, table: { __typename: 'Table', records: Array<string>, schema: { __typename: 'TableSchema', columns: Array<{ __typename: 'TableColumn', name: string, description: string | null, type: string, constraints: { __typename: 'TableColumnConstraints', nullable: boolean, unique: boolean, other: Array<string> } }>, constraints: { __typename: 'TableConstraints', other: Array<string> } | null } } } | { __typename: 'TableSchemaMetadataEntry', label: string, description: string | null, schema: { __typename: 'TableSchema', columns: Array<{ __typename: 'TableColumn', name: string, description: string | null, type: string, constraints: { __typename: 'TableColumnConstraints', nullable: boolean, unique: boolean, other: Array<string> } }>, constraints: { __typename: 'TableConstraints', other: Array<string> } | null } } | { __typename: 'TextMetadataEntry', text: string, label: string, description: string | null } | { __typename: 'UrlMetadataEntry', url: string, label: string, description: string | null }>, inputSchemaType: { __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | null, outputSchemaType: { __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | null } | { __typename: 'NullableDagsterType', key: string, name: string | null, displayName: string, description: string | null, isNullable: boolean, isList: boolean, isBuiltin: boolean, isNothing: boolean, metadataEntries: Array<{ __typename: 'AssetMetadataEntry', label: string, description: string | null, assetKey: { __typename: 'AssetKey', path: Array<string> } } | { __typename: 'BoolMetadataEntry', boolValue: boolean | null, label: string, description: string | null } | { __typename: 'FloatMetadataEntry', floatValue: number | null, label: string, description: string | null } | { __typename: 'IntMetadataEntry', intValue: number | null, intRepr: string, label: string, description: string | null } | { __typename: 'JsonMetadataEntry', jsonString: string, label: string, description: string | null } | { __typename: 'MarkdownMetadataEntry', mdStr: string, label: string, description: string | null } | { __typename: 'NotebookMetadataEntry', path: string, label: string, description: string | null } | { __typename: 'NullMetadataEntry', label: string, description: string | null } | { __typename: 'PathMetadataEntry', path: string, label: string, description: string | null } | { __typename: 'PipelineRunMetadataEntry', runId: string, label: string, description: string | null } | { __typename: 'PythonArtifactMetadataEntry', module: string, name: string, label: string, description: string | null } | { __typename: 'TableMetadataEntry', label: string, description: string | null, table: { __typename: 'Table', records: Array<string>, schema: { __typename: 'TableSchema', columns: Array<{ __typename: 'TableColumn', name: string, description: string | null, type: string, constraints: { __typename: 'TableColumnConstraints', nullable: boolean, unique: boolean, other: Array<string> } }>, constraints: { __typename: 'TableConstraints', other: Array<string> } | null } } } | { __typename: 'TableSchemaMetadataEntry', label: string, description: string | null, schema: { __typename: 'TableSchema', columns: Array<{ __typename: 'TableColumn', name: string, description: string | null, type: string, constraints: { __typename: 'TableColumnConstraints', nullable: boolean, unique: boolean, other: Array<string> } }>, constraints: { __typename: 'TableConstraints', other: Array<string> } | null } } | { __typename: 'TextMetadataEntry', text: string, label: string, description: string | null } | { __typename: 'UrlMetadataEntry', url: string, label: string, description: string | null }>, inputSchemaType: { __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | null, outputSchemaType: { __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | null } | { __typename: 'RegularDagsterType', key: string, name: string | null, displayName: string, description: string | null, isNullable: boolean, isList: boolean, isBuiltin: boolean, isNothing: boolean, metadataEntries: Array<{ __typename: 'AssetMetadataEntry', label: string, description: string | null, assetKey: { __typename: 'AssetKey', path: Array<string> } } | { __typename: 'BoolMetadataEntry', boolValue: boolean | null, label: string, description: string | null } | { __typename: 'FloatMetadataEntry', floatValue: number | null, label: string, description: string | null } | { __typename: 'IntMetadataEntry', intValue: number | null, intRepr: string, label: string, description: string | null } | { __typename: 'JsonMetadataEntry', jsonString: string, label: string, description: string | null } | { __typename: 'MarkdownMetadataEntry', mdStr: string, label: string, description: string | null } | { __typename: 'NotebookMetadataEntry', path: string, label: string, description: string | null } | { __typename: 'NullMetadataEntry', label: string, description: string | null } | { __typename: 'PathMetadataEntry', path: string, label: string, description: string | null } | { __typename: 'PipelineRunMetadataEntry', runId: string, label: string, description: string | null } | { __typename: 'PythonArtifactMetadataEntry', module: string, name: string, label: string, description: string | null } | { __typename: 'TableMetadataEntry', label: string, description: string | null, table: { __typename: 'Table', records: Array<string>, schema: { __typename: 'TableSchema', columns: Array<{ __typename: 'TableColumn', name: string, description: string | null, type: string, constraints: { __typename: 'TableColumnConstraints', nullable: boolean, unique: boolean, other: Array<string> } }>, constraints: { __typename: 'TableConstraints', other: Array<string> } | null } } } | { __typename: 'TableSchemaMetadataEntry', label: string, description: string | null, schema: { __typename: 'TableSchema', columns: Array<{ __typename: 'TableColumn', name: string, description: string | null, type: string, constraints: { __typename: 'TableColumnConstraints', nullable: boolean, unique: boolean, other: Array<string> } }>, constraints: { __typename: 'TableConstraints', other: Array<string> } | null } } | { __typename: 'TextMetadataEntry', text: string, label: string, description: string | null } | { __typename: 'UrlMetadataEntry', url: string, label: string, description: string | null }>, inputSchemaType: { __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | null, outputSchemaType: { __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | null }>, metadataEntries: Array<{ __typename: 'AssetMetadataEntry', label: string, description: string | null, assetKey: { __typename: 'AssetKey', path: Array<string> } } | { __typename: 'BoolMetadataEntry', boolValue: boolean | null, label: string, description: string | null } | { __typename: 'FloatMetadataEntry', floatValue: number | null, label: string, description: string | null } | { __typename: 'IntMetadataEntry', intValue: number | null, intRepr: string, label: string, description: string | null } | { __typename: 'JsonMetadataEntry', jsonString: string, label: string, description: string | null } | { __typename: 'MarkdownMetadataEntry', mdStr: string, label: string, description: string | null } | { __typename: 'NotebookMetadataEntry', path: string, label: string, description: string | null } | { __typename: 'NullMetadataEntry', label: string, description: string | null } | { __typename: 'PathMetadataEntry', path: string, label: string, description: string | null } | { __typename: 'PipelineRunMetadataEntry', runId: string, label: string, description: string | null } | { __typename: 'PythonArtifactMetadataEntry', module: string, name: string, label: string, description: string | null } | { __typename: 'TableMetadataEntry', label: string, description: string | null, table: { __typename: 'Table', records: Array<string>, schema: { __typename: 'TableSchema', columns: Array<{ __typename: 'TableColumn', name: string, description: string | null, type: string, constraints: { __typename: 'TableColumnConstraints', nullable: boolean, unique: boolean, other: Array<string> } }>, constraints: { __typename: 'TableConstraints', other: Array<string> } | null } } } | { __typename: 'TableSchemaMetadataEntry', label: string, description: string | null, schema: { __typename: 'TableSchema', columns: Array<{ __typename: 'TableColumn', name: string, description: string | null, type: string, constraints: { __typename: 'TableColumnConstraints', nullable: boolean, unique: boolean, other: Array<string> } }>, constraints: { __typename: 'TableConstraints', other: Array<string> } | null } } | { __typename: 'TextMetadataEntry', text: string, label: string, description: string | null } | { __typename: 'UrlMetadataEntry', url: string, label: string, description: string | null }>, inputSchemaType: { __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | null, outputSchemaType: { __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | null } | { __typename: 'RegularDagsterType', key: string, name: string | null, displayName: string, description: string | null, isNullable: boolean, isList: boolean, isBuiltin: boolean, isNothing: boolean, innerTypes: Array<{ __typename: 'ListDagsterType', key: string, name: string | null, displayName: string, description: string | null, isNullable: boolean, isList: boolean, isBuiltin: boolean, isNothing: boolean, metadataEntries: Array<{ __typename: 'AssetMetadataEntry', label: string, description: string | null, assetKey: { __typename: 'AssetKey', path: Array<string> } } | { __typename: 'BoolMetadataEntry', boolValue: boolean | null, label: string, description: string | null } | { __typename: 'FloatMetadataEntry', floatValue: number | null, label: string, description: string | null } | { __typename: 'IntMetadataEntry', intValue: number | null, intRepr: string, label: string, description: string | null } | { __typename: 'JsonMetadataEntry', jsonString: string, label: string, description: string | null } | { __typename: 'MarkdownMetadataEntry', mdStr: string, label: string, description: string | null } | { __typename: 'NotebookMetadataEntry', path: string, label: string, description: string | null } | { __typename: 'NullMetadataEntry', label: string, description: string | null } | { __typename: 'PathMetadataEntry', path: string, label: string, description: string | null } | { __typename: 'PipelineRunMetadataEntry', runId: string, label: string, description: string | null } | { __typename: 'PythonArtifactMetadataEntry', module: string, name: string, label: string, description: string | null } | { __typename: 'TableMetadataEntry', label: string, description: string | null, table: { __typename: 'Table', records: Array<string>, schema: { __typename: 'TableSchema', columns: Array<{ __typename: 'TableColumn', name: string, description: string | null, type: string, constraints: { __typename: 'TableColumnConstraints', nullable: boolean, unique: boolean, other: Array<string> } }>, constraints: { __typename: 'TableConstraints', other: Array<string> } | null } } } | { __typename: 'TableSchemaMetadataEntry', label: string, description: string | null, schema: { __typename: 'TableSchema', columns: Array<{ __typename: 'TableColumn', name: string, description: string | null, type: string, constraints: { __typename: 'TableColumnConstraints', nullable: boolean, unique: boolean, other: Array<string> } }>, constraints: { __typename: 'TableConstraints', other: Array<string> } | null } } | { __typename: 'TextMetadataEntry', text: string, label: string, description: string | null } | { __typename: 'UrlMetadataEntry', url: string, label: string, description: string | null }>, inputSchemaType: { __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | null, outputSchemaType: { __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | null } | { __typename: 'NullableDagsterType', key: string, name: string | null, displayName: string, description: string | null, isNullable: boolean, isList: boolean, isBuiltin: boolean, isNothing: boolean, metadataEntries: Array<{ __typename: 'AssetMetadataEntry', label: string, description: string | null, assetKey: { __typename: 'AssetKey', path: Array<string> } } | { __typename: 'BoolMetadataEntry', boolValue: boolean | null, label: string, description: string | null } | { __typename: 'FloatMetadataEntry', floatValue: number | null, label: string, description: string | null } | { __typename: 'IntMetadataEntry', intValue: number | null, intRepr: string, label: string, description: string | null } | { __typename: 'JsonMetadataEntry', jsonString: string, label: string, description: string | null } | { __typename: 'MarkdownMetadataEntry', mdStr: string, label: string, description: string | null } | { __typename: 'NotebookMetadataEntry', path: string, label: string, description: string | null } | { __typename: 'NullMetadataEntry', label: string, description: string | null } | { __typename: 'PathMetadataEntry', path: string, label: string, description: string | null } | { __typename: 'PipelineRunMetadataEntry', runId: string, label: string, description: string | null } | { __typename: 'PythonArtifactMetadataEntry', module: string, name: string, label: string, description: string | null } | { __typename: 'TableMetadataEntry', label: string, description: string | null, table: { __typename: 'Table', records: Array<string>, schema: { __typename: 'TableSchema', columns: Array<{ __typename: 'TableColumn', name: string, description: string | null, type: string, constraints: { __typename: 'TableColumnConstraints', nullable: boolean, unique: boolean, other: Array<string> } }>, constraints: { __typename: 'TableConstraints', other: Array<string> } | null } } } | { __typename: 'TableSchemaMetadataEntry', label: string, description: string | null, schema: { __typename: 'TableSchema', columns: Array<{ __typename: 'TableColumn', name: string, description: string | null, type: string, constraints: { __typename: 'TableColumnConstraints', nullable: boolean, unique: boolean, other: Array<string> } }>, constraints: { __typename: 'TableConstraints', other: Array<string> } | null } } | { __typename: 'TextMetadataEntry', text: string, label: string, description: string | null } | { __typename: 'UrlMetadataEntry', url: string, label: string, description: string | null }>, inputSchemaType: { __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | null, outputSchemaType: { __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | null } | { __typename: 'RegularDagsterType', key: string, name: string | null, displayName: string, description: string | null, isNullable: boolean, isList: boolean, isBuiltin: boolean, isNothing: boolean, metadataEntries: Array<{ __typename: 'AssetMetadataEntry', label: string, description: string | null, assetKey: { __typename: 'AssetKey', path: Array<string> } } | { __typename: 'BoolMetadataEntry', boolValue: boolean | null, label: string, description: string | null } | { __typename: 'FloatMetadataEntry', floatValue: number | null, label: string, description: string | null } | { __typename: 'IntMetadataEntry', intValue: number | null, intRepr: string, label: string, description: string | null } | { __typename: 'JsonMetadataEntry', jsonString: string, label: string, description: string | null } | { __typename: 'MarkdownMetadataEntry', mdStr: string, label: string, description: string | null } | { __typename: 'NotebookMetadataEntry', path: string, label: string, description: string | null } | { __typename: 'NullMetadataEntry', label: string, description: string | null } | { __typename: 'PathMetadataEntry', path: string, label: string, description: string | null } | { __typename: 'PipelineRunMetadataEntry', runId: string, label: string, description: string | null } | { __typename: 'PythonArtifactMetadataEntry', module: string, name: string, label: string, description: string | null } | { __typename: 'TableMetadataEntry', label: string, description: string | null, table: { __typename: 'Table', records: Array<string>, schema: { __typename: 'TableSchema', columns: Array<{ __typename: 'TableColumn', name: string, description: string | null, type: string, constraints: { __typename: 'TableColumnConstraints', nullable: boolean, unique: boolean, other: Array<string> } }>, constraints: { __typename: 'TableConstraints', other: Array<string> } | null } } } | { __typename: 'TableSchemaMetadataEntry', label: string, description: string | null, schema: { __typename: 'TableSchema', columns: Array<{ __typename: 'TableColumn', name: string, description: string | null, type: string, constraints: { __typename: 'TableColumnConstraints', nullable: boolean, unique: boolean, other: Array<string> } }>, constraints: { __typename: 'TableConstraints', other: Array<string> } | null } } | { __typename: 'TextMetadataEntry', text: string, label: string, description: string | null } | { __typename: 'UrlMetadataEntry', url: string, label: string, description: string | null }>, inputSchemaType: { __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | null, outputSchemaType: { __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | null }>, metadataEntries: Array<{ __typename: 'AssetMetadataEntry', label: string, description: string | null, assetKey: { __typename: 'AssetKey', path: Array<string> } } | { __typename: 'BoolMetadataEntry', boolValue: boolean | null, label: string, description: string | null } | { __typename: 'FloatMetadataEntry', floatValue: number | null, label: string, description: string | null } | { __typename: 'IntMetadataEntry', intValue: number | null, intRepr: string, label: string, description: string | null } | { __typename: 'JsonMetadataEntry', jsonString: string, label: string, description: string | null } | { __typename: 'MarkdownMetadataEntry', mdStr: string, label: string, description: string | null } | { __typename: 'NotebookMetadataEntry', path: string, label: string, description: string | null } | { __typename: 'NullMetadataEntry', label: string, description: string | null } | { __typename: 'PathMetadataEntry', path: string, label: string, description: string | null } | { __typename: 'PipelineRunMetadataEntry', runId: string, label: string, description: string | null } | { __typename: 'PythonArtifactMetadataEntry', module: string, name: string, label: string, description: string | null } | { __typename: 'TableMetadataEntry', label: string, description: string | null, table: { __typename: 'Table', records: Array<string>, schema: { __typename: 'TableSchema', columns: Array<{ __typename: 'TableColumn', name: string, description: string | null, type: string, constraints: { __typename: 'TableColumnConstraints', nullable: boolean, unique: boolean, other: Array<string> } }>, constraints: { __typename: 'TableConstraints', other: Array<string> } | null } } } | { __typename: 'TableSchemaMetadataEntry', label: string, description: string | null, schema: { __typename: 'TableSchema', columns: Array<{ __typename: 'TableColumn', name: string, description: string | null, type: string, constraints: { __typename: 'TableColumnConstraints', nullable: boolean, unique: boolean, other: Array<string> } }>, constraints: { __typename: 'TableConstraints', other: Array<string> } | null } } | { __typename: 'TextMetadataEntry', text: string, label: string, description: string | null } | { __typename: 'UrlMetadataEntry', url: string, label: string, description: string | null }>, inputSchemaType: { __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | null, outputSchemaType: { __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | null } | null } | null } | { __typename: 'AssetNotFoundError' } };

export type AssetViewDefinitionNodeFragment = { __typename: 'AssetNode', id: string, groupName: string | null, description: string | null, graphName: string | null, opNames: Array<string>, opVersion: string | null, jobNames: Array<string>, computeKind: string | null, isPartitioned: boolean, isObservable: boolean, isSource: boolean, partitionDefinition: { __typename: 'PartitionDefinition', description: string } | null, partitionKeysByDimension: Array<{ __typename: 'DimensionPartitionKeys', name: string }>, repository: { __typename: 'Repository', id: string, name: string, location: { __typename: 'RepositoryLocation', id: string, name: string } }, jobs: Array<{ __typename: 'Pipeline', id: string, name: string, schedules: Array<{ __typename: 'Schedule', id: string, name: string, cronSchedule: string, executionTimezone: string | null, scheduleState: { __typename: 'InstigationState', id: string, selectorId: string, status: InstigationStatus } }>, sensors: Array<{ __typename: 'Sensor', id: string, jobOriginId: string, name: string, sensorState: { __typename: 'InstigationState', id: string, selectorId: string, status: InstigationStatus } }> }>, configField: { __typename: 'ConfigTypeField', name: string, isRequired: boolean, configType: { __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } } | null, assetKey: { __typename: 'AssetKey', path: Array<string> }, metadataEntries: Array<{ __typename: 'AssetMetadataEntry', label: string, description: string | null, assetKey: { __typename: 'AssetKey', path: Array<string> } } | { __typename: 'BoolMetadataEntry', boolValue: boolean | null, label: string, description: string | null } | { __typename: 'FloatMetadataEntry', floatValue: number | null, label: string, description: string | null } | { __typename: 'IntMetadataEntry', intValue: number | null, intRepr: string, label: string, description: string | null } | { __typename: 'JsonMetadataEntry', jsonString: string, label: string, description: string | null } | { __typename: 'MarkdownMetadataEntry', mdStr: string, label: string, description: string | null } | { __typename: 'NotebookMetadataEntry', path: string, label: string, description: string | null } | { __typename: 'NullMetadataEntry', label: string, description: string | null } | { __typename: 'PathMetadataEntry', path: string, label: string, description: string | null } | { __typename: 'PipelineRunMetadataEntry', runId: string, label: string, description: string | null } | { __typename: 'PythonArtifactMetadataEntry', module: string, name: string, label: string, description: string | null } | { __typename: 'TableMetadataEntry', label: string, description: string | null, table: { __typename: 'Table', records: Array<string>, schema: { __typename: 'TableSchema', columns: Array<{ __typename: 'TableColumn', name: string, description: string | null, type: string, constraints: { __typename: 'TableColumnConstraints', nullable: boolean, unique: boolean, other: Array<string> } }>, constraints: { __typename: 'TableConstraints', other: Array<string> } | null } } } | { __typename: 'TableSchemaMetadataEntry', label: string, description: string | null, schema: { __typename: 'TableSchema', columns: Array<{ __typename: 'TableColumn', name: string, description: string | null, type: string, constraints: { __typename: 'TableColumnConstraints', nullable: boolean, unique: boolean, other: Array<string> } }>, constraints: { __typename: 'TableConstraints', other: Array<string> } | null } } | { __typename: 'TextMetadataEntry', text: string, label: string, description: string | null } | { __typename: 'UrlMetadataEntry', url: string, label: string, description: string | null }>, type: { __typename: 'ListDagsterType', key: string, name: string | null, displayName: string, description: string | null, isNullable: boolean, isList: boolean, isBuiltin: boolean, isNothing: boolean, innerTypes: Array<{ __typename: 'ListDagsterType', key: string, name: string | null, displayName: string, description: string | null, isNullable: boolean, isList: boolean, isBuiltin: boolean, isNothing: boolean, metadataEntries: Array<{ __typename: 'AssetMetadataEntry', label: string, description: string | null, assetKey: { __typename: 'AssetKey', path: Array<string> } } | { __typename: 'BoolMetadataEntry', boolValue: boolean | null, label: string, description: string | null } | { __typename: 'FloatMetadataEntry', floatValue: number | null, label: string, description: string | null } | { __typename: 'IntMetadataEntry', intValue: number | null, intRepr: string, label: string, description: string | null } | { __typename: 'JsonMetadataEntry', jsonString: string, label: string, description: string | null } | { __typename: 'MarkdownMetadataEntry', mdStr: string, label: string, description: string | null } | { __typename: 'NotebookMetadataEntry', path: string, label: string, description: string | null } | { __typename: 'NullMetadataEntry', label: string, description: string | null } | { __typename: 'PathMetadataEntry', path: string, label: string, description: string | null } | { __typename: 'PipelineRunMetadataEntry', runId: string, label: string, description: string | null } | { __typename: 'PythonArtifactMetadataEntry', module: string, name: string, label: string, description: string | null } | { __typename: 'TableMetadataEntry', label: string, description: string | null, table: { __typename: 'Table', records: Array<string>, schema: { __typename: 'TableSchema', columns: Array<{ __typename: 'TableColumn', name: string, description: string | null, type: string, constraints: { __typename: 'TableColumnConstraints', nullable: boolean, unique: boolean, other: Array<string> } }>, constraints: { __typename: 'TableConstraints', other: Array<string> } | null } } } | { __typename: 'TableSchemaMetadataEntry', label: string, description: string | null, schema: { __typename: 'TableSchema', columns: Array<{ __typename: 'TableColumn', name: string, description: string | null, type: string, constraints: { __typename: 'TableColumnConstraints', nullable: boolean, unique: boolean, other: Array<string> } }>, constraints: { __typename: 'TableConstraints', other: Array<string> } | null } } | { __typename: 'TextMetadataEntry', text: string, label: string, description: string | null } | { __typename: 'UrlMetadataEntry', url: string, label: string, description: string | null }>, inputSchemaType: { __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | null, outputSchemaType: { __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | null } | { __typename: 'NullableDagsterType', key: string, name: string | null, displayName: string, description: string | null, isNullable: boolean, isList: boolean, isBuiltin: boolean, isNothing: boolean, metadataEntries: Array<{ __typename: 'AssetMetadataEntry', label: string, description: string | null, assetKey: { __typename: 'AssetKey', path: Array<string> } } | { __typename: 'BoolMetadataEntry', boolValue: boolean | null, label: string, description: string | null } | { __typename: 'FloatMetadataEntry', floatValue: number | null, label: string, description: string | null } | { __typename: 'IntMetadataEntry', intValue: number | null, intRepr: string, label: string, description: string | null } | { __typename: 'JsonMetadataEntry', jsonString: string, label: string, description: string | null } | { __typename: 'MarkdownMetadataEntry', mdStr: string, label: string, description: string | null } | { __typename: 'NotebookMetadataEntry', path: string, label: string, description: string | null } | { __typename: 'NullMetadataEntry', label: string, description: string | null } | { __typename: 'PathMetadataEntry', path: string, label: string, description: string | null } | { __typename: 'PipelineRunMetadataEntry', runId: string, label: string, description: string | null } | { __typename: 'PythonArtifactMetadataEntry', module: string, name: string, label: string, description: string | null } | { __typename: 'TableMetadataEntry', label: string, description: string | null, table: { __typename: 'Table', records: Array<string>, schema: { __typename: 'TableSchema', columns: Array<{ __typename: 'TableColumn', name: string, description: string | null, type: string, constraints: { __typename: 'TableColumnConstraints', nullable: boolean, unique: boolean, other: Array<string> } }>, constraints: { __typename: 'TableConstraints', other: Array<string> } | null } } } | { __typename: 'TableSchemaMetadataEntry', label: string, description: string | null, schema: { __typename: 'TableSchema', columns: Array<{ __typename: 'TableColumn', name: string, description: string | null, type: string, constraints: { __typename: 'TableColumnConstraints', nullable: boolean, unique: boolean, other: Array<string> } }>, constraints: { __typename: 'TableConstraints', other: Array<string> } | null } } | { __typename: 'TextMetadataEntry', text: string, label: string, description: string | null } | { __typename: 'UrlMetadataEntry', url: string, label: string, description: string | null }>, inputSchemaType: { __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | null, outputSchemaType: { __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | null } | { __typename: 'RegularDagsterType', key: string, name: string | null, displayName: string, description: string | null, isNullable: boolean, isList: boolean, isBuiltin: boolean, isNothing: boolean, metadataEntries: Array<{ __typename: 'AssetMetadataEntry', label: string, description: string | null, assetKey: { __typename: 'AssetKey', path: Array<string> } } | { __typename: 'BoolMetadataEntry', boolValue: boolean | null, label: string, description: string | null } | { __typename: 'FloatMetadataEntry', floatValue: number | null, label: string, description: string | null } | { __typename: 'IntMetadataEntry', intValue: number | null, intRepr: string, label: string, description: string | null } | { __typename: 'JsonMetadataEntry', jsonString: string, label: string, description: string | null } | { __typename: 'MarkdownMetadataEntry', mdStr: string, label: string, description: string | null } | { __typename: 'NotebookMetadataEntry', path: string, label: string, description: string | null } | { __typename: 'NullMetadataEntry', label: string, description: string | null } | { __typename: 'PathMetadataEntry', path: string, label: string, description: string | null } | { __typename: 'PipelineRunMetadataEntry', runId: string, label: string, description: string | null } | { __typename: 'PythonArtifactMetadataEntry', module: string, name: string, label: string, description: string | null } | { __typename: 'TableMetadataEntry', label: string, description: string | null, table: { __typename: 'Table', records: Array<string>, schema: { __typename: 'TableSchema', columns: Array<{ __typename: 'TableColumn', name: string, description: string | null, type: string, constraints: { __typename: 'TableColumnConstraints', nullable: boolean, unique: boolean, other: Array<string> } }>, constraints: { __typename: 'TableConstraints', other: Array<string> } | null } } } | { __typename: 'TableSchemaMetadataEntry', label: string, description: string | null, schema: { __typename: 'TableSchema', columns: Array<{ __typename: 'TableColumn', name: string, description: string | null, type: string, constraints: { __typename: 'TableColumnConstraints', nullable: boolean, unique: boolean, other: Array<string> } }>, constraints: { __typename: 'TableConstraints', other: Array<string> } | null } } | { __typename: 'TextMetadataEntry', text: string, label: string, description: string | null } | { __typename: 'UrlMetadataEntry', url: string, label: string, description: string | null }>, inputSchemaType: { __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | null, outputSchemaType: { __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | null }>, metadataEntries: Array<{ __typename: 'AssetMetadataEntry', label: string, description: string | null, assetKey: { __typename: 'AssetKey', path: Array<string> } } | { __typename: 'BoolMetadataEntry', boolValue: boolean | null, label: string, description: string | null } | { __typename: 'FloatMetadataEntry', floatValue: number | null, label: string, description: string | null } | { __typename: 'IntMetadataEntry', intValue: number | null, intRepr: string, label: string, description: string | null } | { __typename: 'JsonMetadataEntry', jsonString: string, label: string, description: string | null } | { __typename: 'MarkdownMetadataEntry', mdStr: string, label: string, description: string | null } | { __typename: 'NotebookMetadataEntry', path: string, label: string, description: string | null } | { __typename: 'NullMetadataEntry', label: string, description: string | null } | { __typename: 'PathMetadataEntry', path: string, label: string, description: string | null } | { __typename: 'PipelineRunMetadataEntry', runId: string, label: string, description: string | null } | { __typename: 'PythonArtifactMetadataEntry', module: string, name: string, label: string, description: string | null } | { __typename: 'TableMetadataEntry', label: string, description: string | null, table: { __typename: 'Table', records: Array<string>, schema: { __typename: 'TableSchema', columns: Array<{ __typename: 'TableColumn', name: string, description: string | null, type: string, constraints: { __typename: 'TableColumnConstraints', nullable: boolean, unique: boolean, other: Array<string> } }>, constraints: { __typename: 'TableConstraints', other: Array<string> } | null } } } | { __typename: 'TableSchemaMetadataEntry', label: string, description: string | null, schema: { __typename: 'TableSchema', columns: Array<{ __typename: 'TableColumn', name: string, description: string | null, type: string, constraints: { __typename: 'TableColumnConstraints', nullable: boolean, unique: boolean, other: Array<string> } }>, constraints: { __typename: 'TableConstraints', other: Array<string> } | null } } | { __typename: 'TextMetadataEntry', text: string, label: string, description: string | null } | { __typename: 'UrlMetadataEntry', url: string, label: string, description: string | null }>, inputSchemaType: { __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | null, outputSchemaType: { __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | null } | { __typename: 'NullableDagsterType', key: string, name: string | null, displayName: string, description: string | null, isNullable: boolean, isList: boolean, isBuiltin: boolean, isNothing: boolean, innerTypes: Array<{ __typename: 'ListDagsterType', key: string, name: string | null, displayName: string, description: string | null, isNullable: boolean, isList: boolean, isBuiltin: boolean, isNothing: boolean, metadataEntries: Array<{ __typename: 'AssetMetadataEntry', label: string, description: string | null, assetKey: { __typename: 'AssetKey', path: Array<string> } } | { __typename: 'BoolMetadataEntry', boolValue: boolean | null, label: string, description: string | null } | { __typename: 'FloatMetadataEntry', floatValue: number | null, label: string, description: string | null } | { __typename: 'IntMetadataEntry', intValue: number | null, intRepr: string, label: string, description: string | null } | { __typename: 'JsonMetadataEntry', jsonString: string, label: string, description: string | null } | { __typename: 'MarkdownMetadataEntry', mdStr: string, label: string, description: string | null } | { __typename: 'NotebookMetadataEntry', path: string, label: string, description: string | null } | { __typename: 'NullMetadataEntry', label: string, description: string | null } | { __typename: 'PathMetadataEntry', path: string, label: string, description: string | null } | { __typename: 'PipelineRunMetadataEntry', runId: string, label: string, description: string | null } | { __typename: 'PythonArtifactMetadataEntry', module: string, name: string, label: string, description: string | null } | { __typename: 'TableMetadataEntry', label: string, description: string | null, table: { __typename: 'Table', records: Array<string>, schema: { __typename: 'TableSchema', columns: Array<{ __typename: 'TableColumn', name: string, description: string | null, type: string, constraints: { __typename: 'TableColumnConstraints', nullable: boolean, unique: boolean, other: Array<string> } }>, constraints: { __typename: 'TableConstraints', other: Array<string> } | null } } } | { __typename: 'TableSchemaMetadataEntry', label: string, description: string | null, schema: { __typename: 'TableSchema', columns: Array<{ __typename: 'TableColumn', name: string, description: string | null, type: string, constraints: { __typename: 'TableColumnConstraints', nullable: boolean, unique: boolean, other: Array<string> } }>, constraints: { __typename: 'TableConstraints', other: Array<string> } | null } } | { __typename: 'TextMetadataEntry', text: string, label: string, description: string | null } | { __typename: 'UrlMetadataEntry', url: string, label: string, description: string | null }>, inputSchemaType: { __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | null, outputSchemaType: { __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | null } | { __typename: 'NullableDagsterType', key: string, name: string | null, displayName: string, description: string | null, isNullable: boolean, isList: boolean, isBuiltin: boolean, isNothing: boolean, metadataEntries: Array<{ __typename: 'AssetMetadataEntry', label: string, description: string | null, assetKey: { __typename: 'AssetKey', path: Array<string> } } | { __typename: 'BoolMetadataEntry', boolValue: boolean | null, label: string, description: string | null } | { __typename: 'FloatMetadataEntry', floatValue: number | null, label: string, description: string | null } | { __typename: 'IntMetadataEntry', intValue: number | null, intRepr: string, label: string, description: string | null } | { __typename: 'JsonMetadataEntry', jsonString: string, label: string, description: string | null } | { __typename: 'MarkdownMetadataEntry', mdStr: string, label: string, description: string | null } | { __typename: 'NotebookMetadataEntry', path: string, label: string, description: string | null } | { __typename: 'NullMetadataEntry', label: string, description: string | null } | { __typename: 'PathMetadataEntry', path: string, label: string, description: string | null } | { __typename: 'PipelineRunMetadataEntry', runId: string, label: string, description: string | null } | { __typename: 'PythonArtifactMetadataEntry', module: string, name: string, label: string, description: string | null } | { __typename: 'TableMetadataEntry', label: string, description: string | null, table: { __typename: 'Table', records: Array<string>, schema: { __typename: 'TableSchema', columns: Array<{ __typename: 'TableColumn', name: string, description: string | null, type: string, constraints: { __typename: 'TableColumnConstraints', nullable: boolean, unique: boolean, other: Array<string> } }>, constraints: { __typename: 'TableConstraints', other: Array<string> } | null } } } | { __typename: 'TableSchemaMetadataEntry', label: string, description: string | null, schema: { __typename: 'TableSchema', columns: Array<{ __typename: 'TableColumn', name: string, description: string | null, type: string, constraints: { __typename: 'TableColumnConstraints', nullable: boolean, unique: boolean, other: Array<string> } }>, constraints: { __typename: 'TableConstraints', other: Array<string> } | null } } | { __typename: 'TextMetadataEntry', text: string, label: string, description: string | null } | { __typename: 'UrlMetadataEntry', url: string, label: string, description: string | null }>, inputSchemaType: { __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | null, outputSchemaType: { __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | null } | { __typename: 'RegularDagsterType', key: string, name: string | null, displayName: string, description: string | null, isNullable: boolean, isList: boolean, isBuiltin: boolean, isNothing: boolean, metadataEntries: Array<{ __typename: 'AssetMetadataEntry', label: string, description: string | null, assetKey: { __typename: 'AssetKey', path: Array<string> } } | { __typename: 'BoolMetadataEntry', boolValue: boolean | null, label: string, description: string | null } | { __typename: 'FloatMetadataEntry', floatValue: number | null, label: string, description: string | null } | { __typename: 'IntMetadataEntry', intValue: number | null, intRepr: string, label: string, description: string | null } | { __typename: 'JsonMetadataEntry', jsonString: string, label: string, description: string | null } | { __typename: 'MarkdownMetadataEntry', mdStr: string, label: string, description: string | null } | { __typename: 'NotebookMetadataEntry', path: string, label: string, description: string | null } | { __typename: 'NullMetadataEntry', label: string, description: string | null } | { __typename: 'PathMetadataEntry', path: string, label: string, description: string | null } | { __typename: 'PipelineRunMetadataEntry', runId: string, label: string, description: string | null } | { __typename: 'PythonArtifactMetadataEntry', module: string, name: string, label: string, description: string | null } | { __typename: 'TableMetadataEntry', label: string, description: string | null, table: { __typename: 'Table', records: Array<string>, schema: { __typename: 'TableSchema', columns: Array<{ __typename: 'TableColumn', name: string, description: string | null, type: string, constraints: { __typename: 'TableColumnConstraints', nullable: boolean, unique: boolean, other: Array<string> } }>, constraints: { __typename: 'TableConstraints', other: Array<string> } | null } } } | { __typename: 'TableSchemaMetadataEntry', label: string, description: string | null, schema: { __typename: 'TableSchema', columns: Array<{ __typename: 'TableColumn', name: string, description: string | null, type: string, constraints: { __typename: 'TableColumnConstraints', nullable: boolean, unique: boolean, other: Array<string> } }>, constraints: { __typename: 'TableConstraints', other: Array<string> } | null } } | { __typename: 'TextMetadataEntry', text: string, label: string, description: string | null } | { __typename: 'UrlMetadataEntry', url: string, label: string, description: string | null }>, inputSchemaType: { __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | null, outputSchemaType: { __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | null }>, metadataEntries: Array<{ __typename: 'AssetMetadataEntry', label: string, description: string | null, assetKey: { __typename: 'AssetKey', path: Array<string> } } | { __typename: 'BoolMetadataEntry', boolValue: boolean | null, label: string, description: string | null } | { __typename: 'FloatMetadataEntry', floatValue: number | null, label: string, description: string | null } | { __typename: 'IntMetadataEntry', intValue: number | null, intRepr: string, label: string, description: string | null } | { __typename: 'JsonMetadataEntry', jsonString: string, label: string, description: string | null } | { __typename: 'MarkdownMetadataEntry', mdStr: string, label: string, description: string | null } | { __typename: 'NotebookMetadataEntry', path: string, label: string, description: string | null } | { __typename: 'NullMetadataEntry', label: string, description: string | null } | { __typename: 'PathMetadataEntry', path: string, label: string, description: string | null } | { __typename: 'PipelineRunMetadataEntry', runId: string, label: string, description: string | null } | { __typename: 'PythonArtifactMetadataEntry', module: string, name: string, label: string, description: string | null } | { __typename: 'TableMetadataEntry', label: string, description: string | null, table: { __typename: 'Table', records: Array<string>, schema: { __typename: 'TableSchema', columns: Array<{ __typename: 'TableColumn', name: string, description: string | null, type: string, constraints: { __typename: 'TableColumnConstraints', nullable: boolean, unique: boolean, other: Array<string> } }>, constraints: { __typename: 'TableConstraints', other: Array<string> } | null } } } | { __typename: 'TableSchemaMetadataEntry', label: string, description: string | null, schema: { __typename: 'TableSchema', columns: Array<{ __typename: 'TableColumn', name: string, description: string | null, type: string, constraints: { __typename: 'TableColumnConstraints', nullable: boolean, unique: boolean, other: Array<string> } }>, constraints: { __typename: 'TableConstraints', other: Array<string> } | null } } | { __typename: 'TextMetadataEntry', text: string, label: string, description: string | null } | { __typename: 'UrlMetadataEntry', url: string, label: string, description: string | null }>, inputSchemaType: { __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | null, outputSchemaType: { __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | null } | { __typename: 'RegularDagsterType', key: string, name: string | null, displayName: string, description: string | null, isNullable: boolean, isList: boolean, isBuiltin: boolean, isNothing: boolean, innerTypes: Array<{ __typename: 'ListDagsterType', key: string, name: string | null, displayName: string, description: string | null, isNullable: boolean, isList: boolean, isBuiltin: boolean, isNothing: boolean, metadataEntries: Array<{ __typename: 'AssetMetadataEntry', label: string, description: string | null, assetKey: { __typename: 'AssetKey', path: Array<string> } } | { __typename: 'BoolMetadataEntry', boolValue: boolean | null, label: string, description: string | null } | { __typename: 'FloatMetadataEntry', floatValue: number | null, label: string, description: string | null } | { __typename: 'IntMetadataEntry', intValue: number | null, intRepr: string, label: string, description: string | null } | { __typename: 'JsonMetadataEntry', jsonString: string, label: string, description: string | null } | { __typename: 'MarkdownMetadataEntry', mdStr: string, label: string, description: string | null } | { __typename: 'NotebookMetadataEntry', path: string, label: string, description: string | null } | { __typename: 'NullMetadataEntry', label: string, description: string | null } | { __typename: 'PathMetadataEntry', path: string, label: string, description: string | null } | { __typename: 'PipelineRunMetadataEntry', runId: string, label: string, description: string | null } | { __typename: 'PythonArtifactMetadataEntry', module: string, name: string, label: string, description: string | null } | { __typename: 'TableMetadataEntry', label: string, description: string | null, table: { __typename: 'Table', records: Array<string>, schema: { __typename: 'TableSchema', columns: Array<{ __typename: 'TableColumn', name: string, description: string | null, type: string, constraints: { __typename: 'TableColumnConstraints', nullable: boolean, unique: boolean, other: Array<string> } }>, constraints: { __typename: 'TableConstraints', other: Array<string> } | null } } } | { __typename: 'TableSchemaMetadataEntry', label: string, description: string | null, schema: { __typename: 'TableSchema', columns: Array<{ __typename: 'TableColumn', name: string, description: string | null, type: string, constraints: { __typename: 'TableColumnConstraints', nullable: boolean, unique: boolean, other: Array<string> } }>, constraints: { __typename: 'TableConstraints', other: Array<string> } | null } } | { __typename: 'TextMetadataEntry', text: string, label: string, description: string | null } | { __typename: 'UrlMetadataEntry', url: string, label: string, description: string | null }>, inputSchemaType: { __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | null, outputSchemaType: { __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | null } | { __typename: 'NullableDagsterType', key: string, name: string | null, displayName: string, description: string | null, isNullable: boolean, isList: boolean, isBuiltin: boolean, isNothing: boolean, metadataEntries: Array<{ __typename: 'AssetMetadataEntry', label: string, description: string | null, assetKey: { __typename: 'AssetKey', path: Array<string> } } | { __typename: 'BoolMetadataEntry', boolValue: boolean | null, label: string, description: string | null } | { __typename: 'FloatMetadataEntry', floatValue: number | null, label: string, description: string | null } | { __typename: 'IntMetadataEntry', intValue: number | null, intRepr: string, label: string, description: string | null } | { __typename: 'JsonMetadataEntry', jsonString: string, label: string, description: string | null } | { __typename: 'MarkdownMetadataEntry', mdStr: string, label: string, description: string | null } | { __typename: 'NotebookMetadataEntry', path: string, label: string, description: string | null } | { __typename: 'NullMetadataEntry', label: string, description: string | null } | { __typename: 'PathMetadataEntry', path: string, label: string, description: string | null } | { __typename: 'PipelineRunMetadataEntry', runId: string, label: string, description: string | null } | { __typename: 'PythonArtifactMetadataEntry', module: string, name: string, label: string, description: string | null } | { __typename: 'TableMetadataEntry', label: string, description: string | null, table: { __typename: 'Table', records: Array<string>, schema: { __typename: 'TableSchema', columns: Array<{ __typename: 'TableColumn', name: string, description: string | null, type: string, constraints: { __typename: 'TableColumnConstraints', nullable: boolean, unique: boolean, other: Array<string> } }>, constraints: { __typename: 'TableConstraints', other: Array<string> } | null } } } | { __typename: 'TableSchemaMetadataEntry', label: string, description: string | null, schema: { __typename: 'TableSchema', columns: Array<{ __typename: 'TableColumn', name: string, description: string | null, type: string, constraints: { __typename: 'TableColumnConstraints', nullable: boolean, unique: boolean, other: Array<string> } }>, constraints: { __typename: 'TableConstraints', other: Array<string> } | null } } | { __typename: 'TextMetadataEntry', text: string, label: string, description: string | null } | { __typename: 'UrlMetadataEntry', url: string, label: string, description: string | null }>, inputSchemaType: { __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | null, outputSchemaType: { __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | null } | { __typename: 'RegularDagsterType', key: string, name: string | null, displayName: string, description: string | null, isNullable: boolean, isList: boolean, isBuiltin: boolean, isNothing: boolean, metadataEntries: Array<{ __typename: 'AssetMetadataEntry', label: string, description: string | null, assetKey: { __typename: 'AssetKey', path: Array<string> } } | { __typename: 'BoolMetadataEntry', boolValue: boolean | null, label: string, description: string | null } | { __typename: 'FloatMetadataEntry', floatValue: number | null, label: string, description: string | null } | { __typename: 'IntMetadataEntry', intValue: number | null, intRepr: string, label: string, description: string | null } | { __typename: 'JsonMetadataEntry', jsonString: string, label: string, description: string | null } | { __typename: 'MarkdownMetadataEntry', mdStr: string, label: string, description: string | null } | { __typename: 'NotebookMetadataEntry', path: string, label: string, description: string | null } | { __typename: 'NullMetadataEntry', label: string, description: string | null } | { __typename: 'PathMetadataEntry', path: string, label: string, description: string | null } | { __typename: 'PipelineRunMetadataEntry', runId: string, label: string, description: string | null } | { __typename: 'PythonArtifactMetadataEntry', module: string, name: string, label: string, description: string | null } | { __typename: 'TableMetadataEntry', label: string, description: string | null, table: { __typename: 'Table', records: Array<string>, schema: { __typename: 'TableSchema', columns: Array<{ __typename: 'TableColumn', name: string, description: string | null, type: string, constraints: { __typename: 'TableColumnConstraints', nullable: boolean, unique: boolean, other: Array<string> } }>, constraints: { __typename: 'TableConstraints', other: Array<string> } | null } } } | { __typename: 'TableSchemaMetadataEntry', label: string, description: string | null, schema: { __typename: 'TableSchema', columns: Array<{ __typename: 'TableColumn', name: string, description: string | null, type: string, constraints: { __typename: 'TableColumnConstraints', nullable: boolean, unique: boolean, other: Array<string> } }>, constraints: { __typename: 'TableConstraints', other: Array<string> } | null } } | { __typename: 'TextMetadataEntry', text: string, label: string, description: string | null } | { __typename: 'UrlMetadataEntry', url: string, label: string, description: string | null }>, inputSchemaType: { __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | null, outputSchemaType: { __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | null }>, metadataEntries: Array<{ __typename: 'AssetMetadataEntry', label: string, description: string | null, assetKey: { __typename: 'AssetKey', path: Array<string> } } | { __typename: 'BoolMetadataEntry', boolValue: boolean | null, label: string, description: string | null } | { __typename: 'FloatMetadataEntry', floatValue: number | null, label: string, description: string | null } | { __typename: 'IntMetadataEntry', intValue: number | null, intRepr: string, label: string, description: string | null } | { __typename: 'JsonMetadataEntry', jsonString: string, label: string, description: string | null } | { __typename: 'MarkdownMetadataEntry', mdStr: string, label: string, description: string | null } | { __typename: 'NotebookMetadataEntry', path: string, label: string, description: string | null } | { __typename: 'NullMetadataEntry', label: string, description: string | null } | { __typename: 'PathMetadataEntry', path: string, label: string, description: string | null } | { __typename: 'PipelineRunMetadataEntry', runId: string, label: string, description: string | null } | { __typename: 'PythonArtifactMetadataEntry', module: string, name: string, label: string, description: string | null } | { __typename: 'TableMetadataEntry', label: string, description: string | null, table: { __typename: 'Table', records: Array<string>, schema: { __typename: 'TableSchema', columns: Array<{ __typename: 'TableColumn', name: string, description: string | null, type: string, constraints: { __typename: 'TableColumnConstraints', nullable: boolean, unique: boolean, other: Array<string> } }>, constraints: { __typename: 'TableConstraints', other: Array<string> } | null } } } | { __typename: 'TableSchemaMetadataEntry', label: string, description: string | null, schema: { __typename: 'TableSchema', columns: Array<{ __typename: 'TableColumn', name: string, description: string | null, type: string, constraints: { __typename: 'TableColumnConstraints', nullable: boolean, unique: boolean, other: Array<string> } }>, constraints: { __typename: 'TableConstraints', other: Array<string> } | null } } | { __typename: 'TextMetadataEntry', text: string, label: string, description: string | null } | { __typename: 'UrlMetadataEntry', url: string, label: string, description: string | null }>, inputSchemaType: { __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | null, outputSchemaType: { __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | null } | null };

export type AssetWipeMutationMutationVariables = Exact<{
  assetKeys: Array<AssetKeyInput> | AssetKeyInput;
}>;


export type AssetWipeMutationMutation = { __typename: 'DagitMutation', wipeAssets: { __typename: 'AssetNotFoundError' } | { __typename: 'AssetWipeSuccess', assetKeys: Array<{ __typename: 'AssetKey', path: Array<string> }> } | { __typename: 'PythonError', message: string, stack: Array<string>, errorChain: Array<{ __typename: 'ErrorChainLink', isExplicitLink: boolean, error: { __typename: 'PythonError', message: string, stack: Array<string> } }> } | { __typename: 'UnauthorizedError' } };

export type AssetsCatalogRootQueryQueryVariables = Exact<{
  assetKey: AssetKeyInput;
}>;


export type AssetsCatalogRootQueryQuery = { __typename: 'DagitQuery', assetOrError: { __typename: 'Asset', id: string, key: { __typename: 'AssetKey', path: Array<string> } } | { __typename: 'AssetNotFoundError' } };

export type AssetCatalogTableQueryQueryVariables = Exact<{ [key: string]: never; }>;


export type AssetCatalogTableQueryQuery = { __typename: 'DagitQuery', assetsOrError: { __typename: 'AssetConnection', nodes: Array<{ __typename: 'Asset', id: string, key: { __typename: 'AssetKey', path: Array<string> }, definition: { __typename: 'AssetNode', id: string, groupName: string | null, isSource: boolean, description: string | null, partitionDefinition: { __typename: 'PartitionDefinition', description: string } | null, repository: { __typename: 'Repository', id: string, name: string, location: { __typename: 'RepositoryLocation', id: string, name: string } } } | null }> } | { __typename: 'PythonError', message: string, stack: Array<string>, errorChain: Array<{ __typename: 'ErrorChainLink', isExplicitLink: boolean, error: { __typename: 'PythonError', message: string, stack: Array<string> } }> } };

export type AssetCatalogGroupTableQueryQueryVariables = Exact<{
  group?: InputMaybe<AssetGroupSelector>;
}>;


export type AssetCatalogGroupTableQueryQuery = { __typename: 'DagitQuery', assetNodes: Array<{ __typename: 'AssetNode', id: string, groupName: string | null, isSource: boolean, description: string | null, assetKey: { __typename: 'AssetKey', path: Array<string> }, partitionDefinition: { __typename: 'PartitionDefinition', description: string } | null, repository: { __typename: 'Repository', id: string, name: string, location: { __typename: 'RepositoryLocation', id: string, name: string } } }> };

export type AssetCatalogGroupTableNodeFragment = { __typename: 'AssetNode', id: string, groupName: string | null, isSource: boolean, description: string | null, assetKey: { __typename: 'AssetKey', path: Array<string> }, partitionDefinition: { __typename: 'PartitionDefinition', description: string } | null, repository: { __typename: 'Repository', id: string, name: string, location: { __typename: 'RepositoryLocation', id: string, name: string } } };

export type LatestMaterializationMetadataFragmentFragment = { __typename: 'MaterializationEvent', partition: string | null, runId: string, timestamp: string, stepKey: string | null, runOrError: { __typename: 'PythonError' } | { __typename: 'Run', id: string, runId: string, mode: string, pipelineName: string, pipelineSnapshotId: string | null, repositoryOrigin: { __typename: 'RepositoryOrigin', id: string, repositoryName: string, repositoryLocationName: string } | null } | { __typename: 'RunNotFoundError' }, metadataEntries: Array<{ __typename: 'AssetMetadataEntry', label: string, description: string | null, assetKey: { __typename: 'AssetKey', path: Array<string> } } | { __typename: 'BoolMetadataEntry', boolValue: boolean | null, label: string, description: string | null } | { __typename: 'FloatMetadataEntry', floatValue: number | null, label: string, description: string | null } | { __typename: 'IntMetadataEntry', intValue: number | null, intRepr: string, label: string, description: string | null } | { __typename: 'JsonMetadataEntry', jsonString: string, label: string, description: string | null } | { __typename: 'MarkdownMetadataEntry', mdStr: string, label: string, description: string | null } | { __typename: 'NotebookMetadataEntry', path: string, label: string, description: string | null } | { __typename: 'NullMetadataEntry', label: string, description: string | null } | { __typename: 'PathMetadataEntry', path: string, label: string, description: string | null } | { __typename: 'PipelineRunMetadataEntry', runId: string, label: string, description: string | null } | { __typename: 'PythonArtifactMetadataEntry', module: string, name: string, label: string, description: string | null } | { __typename: 'TableMetadataEntry', label: string, description: string | null, table: { __typename: 'Table', records: Array<string>, schema: { __typename: 'TableSchema', columns: Array<{ __typename: 'TableColumn', name: string, description: string | null, type: string, constraints: { __typename: 'TableColumnConstraints', nullable: boolean, unique: boolean, other: Array<string> } }>, constraints: { __typename: 'TableConstraints', other: Array<string> } | null } } } | { __typename: 'TableSchemaMetadataEntry', label: string, description: string | null, schema: { __typename: 'TableSchema', columns: Array<{ __typename: 'TableColumn', name: string, description: string | null, type: string, constraints: { __typename: 'TableColumnConstraints', nullable: boolean, unique: boolean, other: Array<string> } }>, constraints: { __typename: 'TableConstraints', other: Array<string> } | null } } | { __typename: 'TextMetadataEntry', text: string, label: string, description: string | null } | { __typename: 'UrlMetadataEntry', url: string, label: string, description: string | null }>, assetLineage: Array<{ __typename: 'AssetLineageInfo', partitions: Array<string>, assetKey: { __typename: 'AssetKey', path: Array<string> } }> };

export type LaunchAssetExecutionAssetNodeFragmentFragment = { __typename: 'AssetNode', id: string, opNames: Array<string>, jobNames: Array<string>, graphName: string | null, isObservable: boolean, isSource: boolean, partitionDefinition: { __typename: 'PartitionDefinition', description: string, dimensionTypes: Array<{ __typename: 'DimensionDefinitionType', name: string }> } | null, assetKey: { __typename: 'AssetKey', path: Array<string> }, dependencyKeys: Array<{ __typename: 'AssetKey', path: Array<string> }>, repository: { __typename: 'Repository', id: string, name: string, location: { __typename: 'RepositoryLocation', id: string, name: string } }, requiredResources: Array<{ __typename: 'ResourceRequirement', resourceKey: string }>, configField: { __typename: 'ConfigTypeField', name: string, isRequired: boolean, configType: { __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } } | null };

export type PartitionDefinitionForLaunchAssetFragment = { __typename: 'PartitionDefinition', description: string, dimensionTypes: Array<{ __typename: 'DimensionDefinitionType', name: string }> };

export type LaunchAssetLoaderQueryQueryVariables = Exact<{
  assetKeys: Array<AssetKeyInput> | AssetKeyInput;
}>;


export type LaunchAssetLoaderQueryQuery = { __typename: 'DagitQuery', assetNodes: Array<{ __typename: 'AssetNode', id: string, opNames: Array<string>, jobNames: Array<string>, graphName: string | null, isObservable: boolean, isSource: boolean, partitionDefinition: { __typename: 'PartitionDefinition', description: string, dimensionTypes: Array<{ __typename: 'DimensionDefinitionType', name: string }> } | null, assetKey: { __typename: 'AssetKey', path: Array<string> }, dependencyKeys: Array<{ __typename: 'AssetKey', path: Array<string> }>, repository: { __typename: 'Repository', id: string, name: string, location: { __typename: 'RepositoryLocation', id: string, name: string } }, requiredResources: Array<{ __typename: 'ResourceRequirement', resourceKey: string }>, configField: { __typename: 'ConfigTypeField', name: string, isRequired: boolean, configType: { __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } } | null }>, assetNodeDefinitionCollisions: Array<{ __typename: 'AssetNodeDefinitionCollision', assetKey: { __typename: 'AssetKey', path: Array<string> }, repositories: Array<{ __typename: 'Repository', id: string, name: string, location: { __typename: 'RepositoryLocation', id: string, name: string } }> }> };

export type LaunchAssetLoaderResourceQueryQueryVariables = Exact<{
  pipelineName: Scalars['String'];
  repositoryLocationName: Scalars['String'];
  repositoryName: Scalars['String'];
}>;


export type LaunchAssetLoaderResourceQueryQuery = { __typename: 'DagitQuery', partitionSetsOrError: { __typename: 'PartitionSets', results: Array<{ __typename: 'PartitionSet', id: string, name: string }> } | { __typename: 'PipelineNotFoundError', message: string } | { __typename: 'PythonError', message: string }, pipelineOrError: { __typename: 'InvalidSubsetError', message: string } | { __typename: 'Pipeline', id: string, modes: Array<{ __typename: 'Mode', id: string, resources: Array<{ __typename: 'Resource', name: string, description: string | null, configField: { __typename: 'ConfigTypeField', name: string, isRequired: boolean, configType: { __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } } | null }> }> } | { __typename: 'PipelineNotFoundError', message: string } | { __typename: 'PythonError', message: string } };

export type LaunchAssetCheckUpstreamQueryQueryVariables = Exact<{
  assetKeys: Array<AssetKeyInput> | AssetKeyInput;
}>;


export type LaunchAssetCheckUpstreamQueryQuery = { __typename: 'DagitQuery', assetNodes: Array<{ __typename: 'AssetNode', id: string, isSource: boolean, opNames: Array<string>, graphName: string | null, assetKey: { __typename: 'AssetKey', path: Array<string> }, assetMaterializations: Array<{ __typename: 'MaterializationEvent', runId: string }> }> };

export type RunningBackfillsNoticeQueryQueryVariables = Exact<{ [key: string]: never; }>;


export type RunningBackfillsNoticeQueryQuery = { __typename: 'DagitQuery', partitionBackfillsOrError: { __typename: 'PartitionBackfills', results: Array<{ __typename: 'PartitionBackfill', partitionSetName: string | null, backfillId: string }> } | { __typename: 'PythonError' } };

export type PartitionHealthQueryQueryVariables = Exact<{
  assetKey: AssetKeyInput;
}>;


export type PartitionHealthQueryQuery = { __typename: 'DagitQuery', assetNodeOrError: { __typename: 'AssetNode', id: string, partitionKeysByDimension: Array<{ __typename: 'DimensionPartitionKeys', name: string, partitionKeys: Array<string> }>, partitionMaterializationCounts: { __typename: 'MaterializationCountGroupedByDimension', materializationCountsGrouped: Array<Array<number>> } | { __typename: 'MaterializationCountSingleDimension', materializationCounts: Array<number> } } | { __typename: 'AssetNotFoundError' } };

export type AssetJobPartitionSetsQueryQueryVariables = Exact<{
  pipelineName: Scalars['String'];
  repositoryName: Scalars['String'];
  repositoryLocationName: Scalars['String'];
}>;


export type AssetJobPartitionSetsQueryQuery = { __typename: 'DagitQuery', partitionSetsOrError: { __typename: 'PartitionSets', results: Array<{ __typename: 'PartitionSet', id: string, name: string, mode: string, solidSelection: Array<string> | null }> } | { __typename: 'PipelineNotFoundError', message: string } | { __typename: 'PythonError', message: string, stack: Array<string>, errorChain: Array<{ __typename: 'ErrorChainLink', isExplicitLink: boolean, error: { __typename: 'PythonError', message: string, stack: Array<string> } }> } };

export type AssetMaterializationFragmentFragment = { __typename: 'MaterializationEvent', partition: string | null, runId: string, timestamp: string, stepKey: string | null, label: string | null, description: string | null, runOrError: { __typename: 'PythonError' } | { __typename: 'Run', id: string, runId: string, mode: string, status: RunStatus, pipelineName: string, pipelineSnapshotId: string | null, repositoryOrigin: { __typename: 'RepositoryOrigin', id: string, repositoryName: string, repositoryLocationName: string } | null } | { __typename: 'RunNotFoundError' }, metadataEntries: Array<{ __typename: 'AssetMetadataEntry', label: string, description: string | null, assetKey: { __typename: 'AssetKey', path: Array<string> } } | { __typename: 'BoolMetadataEntry', boolValue: boolean | null, label: string, description: string | null } | { __typename: 'FloatMetadataEntry', floatValue: number | null, label: string, description: string | null } | { __typename: 'IntMetadataEntry', intValue: number | null, intRepr: string, label: string, description: string | null } | { __typename: 'JsonMetadataEntry', jsonString: string, label: string, description: string | null } | { __typename: 'MarkdownMetadataEntry', mdStr: string, label: string, description: string | null } | { __typename: 'NotebookMetadataEntry', path: string, label: string, description: string | null } | { __typename: 'NullMetadataEntry', label: string, description: string | null } | { __typename: 'PathMetadataEntry', path: string, label: string, description: string | null } | { __typename: 'PipelineRunMetadataEntry', runId: string, label: string, description: string | null } | { __typename: 'PythonArtifactMetadataEntry', module: string, name: string, label: string, description: string | null } | { __typename: 'TableMetadataEntry', label: string, description: string | null, table: { __typename: 'Table', records: Array<string>, schema: { __typename: 'TableSchema', columns: Array<{ __typename: 'TableColumn', name: string, description: string | null, type: string, constraints: { __typename: 'TableColumnConstraints', nullable: boolean, unique: boolean, other: Array<string> } }>, constraints: { __typename: 'TableConstraints', other: Array<string> } | null } } } | { __typename: 'TableSchemaMetadataEntry', label: string, description: string | null, schema: { __typename: 'TableSchema', columns: Array<{ __typename: 'TableColumn', name: string, description: string | null, type: string, constraints: { __typename: 'TableColumnConstraints', nullable: boolean, unique: boolean, other: Array<string> } }>, constraints: { __typename: 'TableConstraints', other: Array<string> } | null } } | { __typename: 'TextMetadataEntry', text: string, label: string, description: string | null } | { __typename: 'UrlMetadataEntry', url: string, label: string, description: string | null }>, assetLineage: Array<{ __typename: 'AssetLineageInfo', partitions: Array<string>, assetKey: { __typename: 'AssetKey', path: Array<string> } }> };

export type AssetObservationFragmentFragment = { __typename: 'ObservationEvent', partition: string | null, runId: string, timestamp: string, stepKey: string | null, label: string | null, description: string | null, runOrError: { __typename: 'PythonError' } | { __typename: 'Run', id: string, runId: string, mode: string, status: RunStatus, pipelineName: string, pipelineSnapshotId: string | null, repositoryOrigin: { __typename: 'RepositoryOrigin', id: string, repositoryName: string, repositoryLocationName: string } | null } | { __typename: 'RunNotFoundError' }, metadataEntries: Array<{ __typename: 'AssetMetadataEntry', label: string, description: string | null, assetKey: { __typename: 'AssetKey', path: Array<string> } } | { __typename: 'BoolMetadataEntry', boolValue: boolean | null, label: string, description: string | null } | { __typename: 'FloatMetadataEntry', floatValue: number | null, label: string, description: string | null } | { __typename: 'IntMetadataEntry', intValue: number | null, intRepr: string, label: string, description: string | null } | { __typename: 'JsonMetadataEntry', jsonString: string, label: string, description: string | null } | { __typename: 'MarkdownMetadataEntry', mdStr: string, label: string, description: string | null } | { __typename: 'NotebookMetadataEntry', path: string, label: string, description: string | null } | { __typename: 'NullMetadataEntry', label: string, description: string | null } | { __typename: 'PathMetadataEntry', path: string, label: string, description: string | null } | { __typename: 'PipelineRunMetadataEntry', runId: string, label: string, description: string | null } | { __typename: 'PythonArtifactMetadataEntry', module: string, name: string, label: string, description: string | null } | { __typename: 'TableMetadataEntry', label: string, description: string | null, table: { __typename: 'Table', records: Array<string>, schema: { __typename: 'TableSchema', columns: Array<{ __typename: 'TableColumn', name: string, description: string | null, type: string, constraints: { __typename: 'TableColumnConstraints', nullable: boolean, unique: boolean, other: Array<string> } }>, constraints: { __typename: 'TableConstraints', other: Array<string> } | null } } } | { __typename: 'TableSchemaMetadataEntry', label: string, description: string | null, schema: { __typename: 'TableSchema', columns: Array<{ __typename: 'TableColumn', name: string, description: string | null, type: string, constraints: { __typename: 'TableColumnConstraints', nullable: boolean, unique: boolean, other: Array<string> } }>, constraints: { __typename: 'TableConstraints', other: Array<string> } | null } } | { __typename: 'TextMetadataEntry', text: string, label: string, description: string | null } | { __typename: 'UrlMetadataEntry', url: string, label: string, description: string | null }> };

export type AssetEventsQueryQueryVariables = Exact<{
  assetKey: AssetKeyInput;
  limit?: InputMaybe<Scalars['Int']>;
  before?: InputMaybe<Scalars['String']>;
  partitionInLast?: InputMaybe<Scalars['Int']>;
}>;


export type AssetEventsQueryQuery = { __typename: 'DagitQuery', assetOrError: { __typename: 'Asset', id: string, key: { __typename: 'AssetKey', path: Array<string> }, assetObservations: Array<{ __typename: 'ObservationEvent', partition: string | null, runId: string, timestamp: string, stepKey: string | null, label: string | null, description: string | null, runOrError: { __typename: 'PythonError' } | { __typename: 'Run', id: string, runId: string, mode: string, status: RunStatus, pipelineName: string, pipelineSnapshotId: string | null, repositoryOrigin: { __typename: 'RepositoryOrigin', id: string, repositoryName: string, repositoryLocationName: string } | null } | { __typename: 'RunNotFoundError' }, metadataEntries: Array<{ __typename: 'AssetMetadataEntry', label: string, description: string | null, assetKey: { __typename: 'AssetKey', path: Array<string> } } | { __typename: 'BoolMetadataEntry', boolValue: boolean | null, label: string, description: string | null } | { __typename: 'FloatMetadataEntry', floatValue: number | null, label: string, description: string | null } | { __typename: 'IntMetadataEntry', intValue: number | null, intRepr: string, label: string, description: string | null } | { __typename: 'JsonMetadataEntry', jsonString: string, label: string, description: string | null } | { __typename: 'MarkdownMetadataEntry', mdStr: string, label: string, description: string | null } | { __typename: 'NotebookMetadataEntry', path: string, label: string, description: string | null } | { __typename: 'NullMetadataEntry', label: string, description: string | null } | { __typename: 'PathMetadataEntry', path: string, label: string, description: string | null } | { __typename: 'PipelineRunMetadataEntry', runId: string, label: string, description: string | null } | { __typename: 'PythonArtifactMetadataEntry', module: string, name: string, label: string, description: string | null } | { __typename: 'TableMetadataEntry', label: string, description: string | null, table: { __typename: 'Table', records: Array<string>, schema: { __typename: 'TableSchema', columns: Array<{ __typename: 'TableColumn', name: string, description: string | null, type: string, constraints: { __typename: 'TableColumnConstraints', nullable: boolean, unique: boolean, other: Array<string> } }>, constraints: { __typename: 'TableConstraints', other: Array<string> } | null } } } | { __typename: 'TableSchemaMetadataEntry', label: string, description: string | null, schema: { __typename: 'TableSchema', columns: Array<{ __typename: 'TableColumn', name: string, description: string | null, type: string, constraints: { __typename: 'TableColumnConstraints', nullable: boolean, unique: boolean, other: Array<string> } }>, constraints: { __typename: 'TableConstraints', other: Array<string> } | null } } | { __typename: 'TextMetadataEntry', text: string, label: string, description: string | null } | { __typename: 'UrlMetadataEntry', url: string, label: string, description: string | null }> }>, assetMaterializations: Array<{ __typename: 'MaterializationEvent', partition: string | null, runId: string, timestamp: string, stepKey: string | null, label: string | null, description: string | null, runOrError: { __typename: 'PythonError' } | { __typename: 'Run', id: string, runId: string, mode: string, status: RunStatus, pipelineName: string, pipelineSnapshotId: string | null, repositoryOrigin: { __typename: 'RepositoryOrigin', id: string, repositoryName: string, repositoryLocationName: string } | null } | { __typename: 'RunNotFoundError' }, metadataEntries: Array<{ __typename: 'AssetMetadataEntry', label: string, description: string | null, assetKey: { __typename: 'AssetKey', path: Array<string> } } | { __typename: 'BoolMetadataEntry', boolValue: boolean | null, label: string, description: string | null } | { __typename: 'FloatMetadataEntry', floatValue: number | null, label: string, description: string | null } | { __typename: 'IntMetadataEntry', intValue: number | null, intRepr: string, label: string, description: string | null } | { __typename: 'JsonMetadataEntry', jsonString: string, label: string, description: string | null } | { __typename: 'MarkdownMetadataEntry', mdStr: string, label: string, description: string | null } | { __typename: 'NotebookMetadataEntry', path: string, label: string, description: string | null } | { __typename: 'NullMetadataEntry', label: string, description: string | null } | { __typename: 'PathMetadataEntry', path: string, label: string, description: string | null } | { __typename: 'PipelineRunMetadataEntry', runId: string, label: string, description: string | null } | { __typename: 'PythonArtifactMetadataEntry', module: string, name: string, label: string, description: string | null } | { __typename: 'TableMetadataEntry', label: string, description: string | null, table: { __typename: 'Table', records: Array<string>, schema: { __typename: 'TableSchema', columns: Array<{ __typename: 'TableColumn', name: string, description: string | null, type: string, constraints: { __typename: 'TableColumnConstraints', nullable: boolean, unique: boolean, other: Array<string> } }>, constraints: { __typename: 'TableConstraints', other: Array<string> } | null } } } | { __typename: 'TableSchemaMetadataEntry', label: string, description: string | null, schema: { __typename: 'TableSchema', columns: Array<{ __typename: 'TableColumn', name: string, description: string | null, type: string, constraints: { __typename: 'TableColumnConstraints', nullable: boolean, unique: boolean, other: Array<string> } }>, constraints: { __typename: 'TableConstraints', other: Array<string> } | null } } | { __typename: 'TextMetadataEntry', text: string, label: string, description: string | null } | { __typename: 'UrlMetadataEntry', url: string, label: string, description: string | null }>, assetLineage: Array<{ __typename: 'AssetLineageInfo', partitions: Array<string>, assetKey: { __typename: 'AssetKey', path: Array<string> } }> }>, definition: { __typename: 'AssetNode', id: string, partitionKeys: Array<string> } | null } | { __typename: 'AssetNotFoundError' } };

export type ConfigEditorRunConfigSchemaFragmentFragment = { __typename: 'RunConfigSchema', rootConfigType: { __typename: 'ArrayConfigType', key: string } | { __typename: 'CompositeConfigType', key: string } | { __typename: 'EnumConfigType', key: string } | { __typename: 'MapConfigType', key: string } | { __typename: 'NullableConfigType', key: string } | { __typename: 'RegularConfigType', key: string } | { __typename: 'ScalarUnionConfigType', key: string }, allConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', key: string, scalarTypeKey: string, nonScalarTypeKey: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> };

type AllConfigTypesForEditor_ArrayConfigType_Fragment = { __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> };

type AllConfigTypesForEditor_CompositeConfigType_Fragment = { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> };

type AllConfigTypesForEditor_EnumConfigType_Fragment = { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> };

type AllConfigTypesForEditor_MapConfigType_Fragment = { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> };

type AllConfigTypesForEditor_NullableConfigType_Fragment = { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> };

type AllConfigTypesForEditor_RegularConfigType_Fragment = { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> };

type AllConfigTypesForEditor_ScalarUnionConfigType_Fragment = { __typename: 'ScalarUnionConfigType', key: string, scalarTypeKey: string, nonScalarTypeKey: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> };

export type AllConfigTypesForEditorFragment = AllConfigTypesForEditor_ArrayConfigType_Fragment | AllConfigTypesForEditor_CompositeConfigType_Fragment | AllConfigTypesForEditor_EnumConfigType_Fragment | AllConfigTypesForEditor_MapConfigType_Fragment | AllConfigTypesForEditor_NullableConfigType_Fragment | AllConfigTypesForEditor_RegularConfigType_Fragment | AllConfigTypesForEditor_ScalarUnionConfigType_Fragment;

export type CompositeConfigTypeForSchemaFragment = { __typename: 'CompositeConfigType', fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> };

type ConfigEditorValidationFragment_InvalidSubsetError_Fragment = { __typename: 'InvalidSubsetError' };

type ConfigEditorValidationFragment_PipelineConfigValidationValid_Fragment = { __typename: 'PipelineConfigValidationValid' };

type ConfigEditorValidationFragment_PipelineNotFoundError_Fragment = { __typename: 'PipelineNotFoundError' };

type ConfigEditorValidationFragment_PythonError_Fragment = { __typename: 'PythonError' };

type ConfigEditorValidationFragment_RunConfigValidationInvalid_Fragment = { __typename: 'RunConfigValidationInvalid', errors: Array<{ __typename: 'FieldNotDefinedConfigError', reason: EvaluationErrorReason, message: string, stack: { __typename: 'EvaluationStack', entries: Array<{ __typename: 'EvaluationStackListItemEntry', listIndex: number } | { __typename: 'EvaluationStackMapKeyEntry', mapKey: any } | { __typename: 'EvaluationStackMapValueEntry', mapKey: any } | { __typename: 'EvaluationStackPathEntry', fieldName: string }> } } | { __typename: 'FieldsNotDefinedConfigError', reason: EvaluationErrorReason, message: string, stack: { __typename: 'EvaluationStack', entries: Array<{ __typename: 'EvaluationStackListItemEntry', listIndex: number } | { __typename: 'EvaluationStackMapKeyEntry', mapKey: any } | { __typename: 'EvaluationStackMapValueEntry', mapKey: any } | { __typename: 'EvaluationStackPathEntry', fieldName: string }> } } | { __typename: 'MissingFieldConfigError', reason: EvaluationErrorReason, message: string, stack: { __typename: 'EvaluationStack', entries: Array<{ __typename: 'EvaluationStackListItemEntry', listIndex: number } | { __typename: 'EvaluationStackMapKeyEntry', mapKey: any } | { __typename: 'EvaluationStackMapValueEntry', mapKey: any } | { __typename: 'EvaluationStackPathEntry', fieldName: string }> } } | { __typename: 'MissingFieldsConfigError', reason: EvaluationErrorReason, message: string, stack: { __typename: 'EvaluationStack', entries: Array<{ __typename: 'EvaluationStackListItemEntry', listIndex: number } | { __typename: 'EvaluationStackMapKeyEntry', mapKey: any } | { __typename: 'EvaluationStackMapValueEntry', mapKey: any } | { __typename: 'EvaluationStackPathEntry', fieldName: string }> } } | { __typename: 'RuntimeMismatchConfigError', reason: EvaluationErrorReason, message: string, stack: { __typename: 'EvaluationStack', entries: Array<{ __typename: 'EvaluationStackListItemEntry', listIndex: number } | { __typename: 'EvaluationStackMapKeyEntry', mapKey: any } | { __typename: 'EvaluationStackMapValueEntry', mapKey: any } | { __typename: 'EvaluationStackPathEntry', fieldName: string }> } } | { __typename: 'SelectorTypeConfigError', reason: EvaluationErrorReason, message: string, stack: { __typename: 'EvaluationStack', entries: Array<{ __typename: 'EvaluationStackListItemEntry', listIndex: number } | { __typename: 'EvaluationStackMapKeyEntry', mapKey: any } | { __typename: 'EvaluationStackMapValueEntry', mapKey: any } | { __typename: 'EvaluationStackPathEntry', fieldName: string }> } }> };

export type ConfigEditorValidationFragmentFragment = ConfigEditorValidationFragment_InvalidSubsetError_Fragment | ConfigEditorValidationFragment_PipelineConfigValidationValid_Fragment | ConfigEditorValidationFragment_PipelineNotFoundError_Fragment | ConfigEditorValidationFragment_PythonError_Fragment | ConfigEditorValidationFragment_RunConfigValidationInvalid_Fragment;

type DagsterTypeFragment_ListDagsterType_Fragment = { __typename: 'ListDagsterType', key: string, name: string | null, displayName: string, description: string | null, isNullable: boolean, isList: boolean, isBuiltin: boolean, isNothing: boolean, innerTypes: Array<{ __typename: 'ListDagsterType', key: string, name: string | null, displayName: string, description: string | null, isNullable: boolean, isList: boolean, isBuiltin: boolean, isNothing: boolean, metadataEntries: Array<{ __typename: 'AssetMetadataEntry', label: string, description: string | null, assetKey: { __typename: 'AssetKey', path: Array<string> } } | { __typename: 'BoolMetadataEntry', boolValue: boolean | null, label: string, description: string | null } | { __typename: 'FloatMetadataEntry', floatValue: number | null, label: string, description: string | null } | { __typename: 'IntMetadataEntry', intValue: number | null, intRepr: string, label: string, description: string | null } | { __typename: 'JsonMetadataEntry', jsonString: string, label: string, description: string | null } | { __typename: 'MarkdownMetadataEntry', mdStr: string, label: string, description: string | null } | { __typename: 'NotebookMetadataEntry', path: string, label: string, description: string | null } | { __typename: 'NullMetadataEntry', label: string, description: string | null } | { __typename: 'PathMetadataEntry', path: string, label: string, description: string | null } | { __typename: 'PipelineRunMetadataEntry', runId: string, label: string, description: string | null } | { __typename: 'PythonArtifactMetadataEntry', module: string, name: string, label: string, description: string | null } | { __typename: 'TableMetadataEntry', label: string, description: string | null, table: { __typename: 'Table', records: Array<string>, schema: { __typename: 'TableSchema', columns: Array<{ __typename: 'TableColumn', name: string, description: string | null, type: string, constraints: { __typename: 'TableColumnConstraints', nullable: boolean, unique: boolean, other: Array<string> } }>, constraints: { __typename: 'TableConstraints', other: Array<string> } | null } } } | { __typename: 'TableSchemaMetadataEntry', label: string, description: string | null, schema: { __typename: 'TableSchema', columns: Array<{ __typename: 'TableColumn', name: string, description: string | null, type: string, constraints: { __typename: 'TableColumnConstraints', nullable: boolean, unique: boolean, other: Array<string> } }>, constraints: { __typename: 'TableConstraints', other: Array<string> } | null } } | { __typename: 'TextMetadataEntry', text: string, label: string, description: string | null } | { __typename: 'UrlMetadataEntry', url: string, label: string, description: string | null }>, inputSchemaType: { __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | null, outputSchemaType: { __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | null } | { __typename: 'NullableDagsterType', key: string, name: string | null, displayName: string, description: string | null, isNullable: boolean, isList: boolean, isBuiltin: boolean, isNothing: boolean, metadataEntries: Array<{ __typename: 'AssetMetadataEntry', label: string, description: string | null, assetKey: { __typename: 'AssetKey', path: Array<string> } } | { __typename: 'BoolMetadataEntry', boolValue: boolean | null, label: string, description: string | null } | { __typename: 'FloatMetadataEntry', floatValue: number | null, label: string, description: string | null } | { __typename: 'IntMetadataEntry', intValue: number | null, intRepr: string, label: string, description: string | null } | { __typename: 'JsonMetadataEntry', jsonString: string, label: string, description: string | null } | { __typename: 'MarkdownMetadataEntry', mdStr: string, label: string, description: string | null } | { __typename: 'NotebookMetadataEntry', path: string, label: string, description: string | null } | { __typename: 'NullMetadataEntry', label: string, description: string | null } | { __typename: 'PathMetadataEntry', path: string, label: string, description: string | null } | { __typename: 'PipelineRunMetadataEntry', runId: string, label: string, description: string | null } | { __typename: 'PythonArtifactMetadataEntry', module: string, name: string, label: string, description: string | null } | { __typename: 'TableMetadataEntry', label: string, description: string | null, table: { __typename: 'Table', records: Array<string>, schema: { __typename: 'TableSchema', columns: Array<{ __typename: 'TableColumn', name: string, description: string | null, type: string, constraints: { __typename: 'TableColumnConstraints', nullable: boolean, unique: boolean, other: Array<string> } }>, constraints: { __typename: 'TableConstraints', other: Array<string> } | null } } } | { __typename: 'TableSchemaMetadataEntry', label: string, description: string | null, schema: { __typename: 'TableSchema', columns: Array<{ __typename: 'TableColumn', name: string, description: string | null, type: string, constraints: { __typename: 'TableColumnConstraints', nullable: boolean, unique: boolean, other: Array<string> } }>, constraints: { __typename: 'TableConstraints', other: Array<string> } | null } } | { __typename: 'TextMetadataEntry', text: string, label: string, description: string | null } | { __typename: 'UrlMetadataEntry', url: string, label: string, description: string | null }>, inputSchemaType: { __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | null, outputSchemaType: { __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | null } | { __typename: 'RegularDagsterType', key: string, name: string | null, displayName: string, description: string | null, isNullable: boolean, isList: boolean, isBuiltin: boolean, isNothing: boolean, metadataEntries: Array<{ __typename: 'AssetMetadataEntry', label: string, description: string | null, assetKey: { __typename: 'AssetKey', path: Array<string> } } | { __typename: 'BoolMetadataEntry', boolValue: boolean | null, label: string, description: string | null } | { __typename: 'FloatMetadataEntry', floatValue: number | null, label: string, description: string | null } | { __typename: 'IntMetadataEntry', intValue: number | null, intRepr: string, label: string, description: string | null } | { __typename: 'JsonMetadataEntry', jsonString: string, label: string, description: string | null } | { __typename: 'MarkdownMetadataEntry', mdStr: string, label: string, description: string | null } | { __typename: 'NotebookMetadataEntry', path: string, label: string, description: string | null } | { __typename: 'NullMetadataEntry', label: string, description: string | null } | { __typename: 'PathMetadataEntry', path: string, label: string, description: string | null } | { __typename: 'PipelineRunMetadataEntry', runId: string, label: string, description: string | null } | { __typename: 'PythonArtifactMetadataEntry', module: string, name: string, label: string, description: string | null } | { __typename: 'TableMetadataEntry', label: string, description: string | null, table: { __typename: 'Table', records: Array<string>, schema: { __typename: 'TableSchema', columns: Array<{ __typename: 'TableColumn', name: string, description: string | null, type: string, constraints: { __typename: 'TableColumnConstraints', nullable: boolean, unique: boolean, other: Array<string> } }>, constraints: { __typename: 'TableConstraints', other: Array<string> } | null } } } | { __typename: 'TableSchemaMetadataEntry', label: string, description: string | null, schema: { __typename: 'TableSchema', columns: Array<{ __typename: 'TableColumn', name: string, description: string | null, type: string, constraints: { __typename: 'TableColumnConstraints', nullable: boolean, unique: boolean, other: Array<string> } }>, constraints: { __typename: 'TableConstraints', other: Array<string> } | null } } | { __typename: 'TextMetadataEntry', text: string, label: string, description: string | null } | { __typename: 'UrlMetadataEntry', url: string, label: string, description: string | null }>, inputSchemaType: { __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | null, outputSchemaType: { __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | null }>, metadataEntries: Array<{ __typename: 'AssetMetadataEntry', label: string, description: string | null, assetKey: { __typename: 'AssetKey', path: Array<string> } } | { __typename: 'BoolMetadataEntry', boolValue: boolean | null, label: string, description: string | null } | { __typename: 'FloatMetadataEntry', floatValue: number | null, label: string, description: string | null } | { __typename: 'IntMetadataEntry', intValue: number | null, intRepr: string, label: string, description: string | null } | { __typename: 'JsonMetadataEntry', jsonString: string, label: string, description: string | null } | { __typename: 'MarkdownMetadataEntry', mdStr: string, label: string, description: string | null } | { __typename: 'NotebookMetadataEntry', path: string, label: string, description: string | null } | { __typename: 'NullMetadataEntry', label: string, description: string | null } | { __typename: 'PathMetadataEntry', path: string, label: string, description: string | null } | { __typename: 'PipelineRunMetadataEntry', runId: string, label: string, description: string | null } | { __typename: 'PythonArtifactMetadataEntry', module: string, name: string, label: string, description: string | null } | { __typename: 'TableMetadataEntry', label: string, description: string | null, table: { __typename: 'Table', records: Array<string>, schema: { __typename: 'TableSchema', columns: Array<{ __typename: 'TableColumn', name: string, description: string | null, type: string, constraints: { __typename: 'TableColumnConstraints', nullable: boolean, unique: boolean, other: Array<string> } }>, constraints: { __typename: 'TableConstraints', other: Array<string> } | null } } } | { __typename: 'TableSchemaMetadataEntry', label: string, description: string | null, schema: { __typename: 'TableSchema', columns: Array<{ __typename: 'TableColumn', name: string, description: string | null, type: string, constraints: { __typename: 'TableColumnConstraints', nullable: boolean, unique: boolean, other: Array<string> } }>, constraints: { __typename: 'TableConstraints', other: Array<string> } | null } } | { __typename: 'TextMetadataEntry', text: string, label: string, description: string | null } | { __typename: 'UrlMetadataEntry', url: string, label: string, description: string | null }>, inputSchemaType: { __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | null, outputSchemaType: { __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | null };

type DagsterTypeFragment_NullableDagsterType_Fragment = { __typename: 'NullableDagsterType', key: string, name: string | null, displayName: string, description: string | null, isNullable: boolean, isList: boolean, isBuiltin: boolean, isNothing: boolean, innerTypes: Array<{ __typename: 'ListDagsterType', key: string, name: string | null, displayName: string, description: string | null, isNullable: boolean, isList: boolean, isBuiltin: boolean, isNothing: boolean, metadataEntries: Array<{ __typename: 'AssetMetadataEntry', label: string, description: string | null, assetKey: { __typename: 'AssetKey', path: Array<string> } } | { __typename: 'BoolMetadataEntry', boolValue: boolean | null, label: string, description: string | null } | { __typename: 'FloatMetadataEntry', floatValue: number | null, label: string, description: string | null } | { __typename: 'IntMetadataEntry', intValue: number | null, intRepr: string, label: string, description: string | null } | { __typename: 'JsonMetadataEntry', jsonString: string, label: string, description: string | null } | { __typename: 'MarkdownMetadataEntry', mdStr: string, label: string, description: string | null } | { __typename: 'NotebookMetadataEntry', path: string, label: string, description: string | null } | { __typename: 'NullMetadataEntry', label: string, description: string | null } | { __typename: 'PathMetadataEntry', path: string, label: string, description: string | null } | { __typename: 'PipelineRunMetadataEntry', runId: string, label: string, description: string | null } | { __typename: 'PythonArtifactMetadataEntry', module: string, name: string, label: string, description: string | null } | { __typename: 'TableMetadataEntry', label: string, description: string | null, table: { __typename: 'Table', records: Array<string>, schema: { __typename: 'TableSchema', columns: Array<{ __typename: 'TableColumn', name: string, description: string | null, type: string, constraints: { __typename: 'TableColumnConstraints', nullable: boolean, unique: boolean, other: Array<string> } }>, constraints: { __typename: 'TableConstraints', other: Array<string> } | null } } } | { __typename: 'TableSchemaMetadataEntry', label: string, description: string | null, schema: { __typename: 'TableSchema', columns: Array<{ __typename: 'TableColumn', name: string, description: string | null, type: string, constraints: { __typename: 'TableColumnConstraints', nullable: boolean, unique: boolean, other: Array<string> } }>, constraints: { __typename: 'TableConstraints', other: Array<string> } | null } } | { __typename: 'TextMetadataEntry', text: string, label: string, description: string | null } | { __typename: 'UrlMetadataEntry', url: string, label: string, description: string | null }>, inputSchemaType: { __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | null, outputSchemaType: { __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | null } | { __typename: 'NullableDagsterType', key: string, name: string | null, displayName: string, description: string | null, isNullable: boolean, isList: boolean, isBuiltin: boolean, isNothing: boolean, metadataEntries: Array<{ __typename: 'AssetMetadataEntry', label: string, description: string | null, assetKey: { __typename: 'AssetKey', path: Array<string> } } | { __typename: 'BoolMetadataEntry', boolValue: boolean | null, label: string, description: string | null } | { __typename: 'FloatMetadataEntry', floatValue: number | null, label: string, description: string | null } | { __typename: 'IntMetadataEntry', intValue: number | null, intRepr: string, label: string, description: string | null } | { __typename: 'JsonMetadataEntry', jsonString: string, label: string, description: string | null } | { __typename: 'MarkdownMetadataEntry', mdStr: string, label: string, description: string | null } | { __typename: 'NotebookMetadataEntry', path: string, label: string, description: string | null } | { __typename: 'NullMetadataEntry', label: string, description: string | null } | { __typename: 'PathMetadataEntry', path: string, label: string, description: string | null } | { __typename: 'PipelineRunMetadataEntry', runId: string, label: string, description: string | null } | { __typename: 'PythonArtifactMetadataEntry', module: string, name: string, label: string, description: string | null } | { __typename: 'TableMetadataEntry', label: string, description: string | null, table: { __typename: 'Table', records: Array<string>, schema: { __typename: 'TableSchema', columns: Array<{ __typename: 'TableColumn', name: string, description: string | null, type: string, constraints: { __typename: 'TableColumnConstraints', nullable: boolean, unique: boolean, other: Array<string> } }>, constraints: { __typename: 'TableConstraints', other: Array<string> } | null } } } | { __typename: 'TableSchemaMetadataEntry', label: string, description: string | null, schema: { __typename: 'TableSchema', columns: Array<{ __typename: 'TableColumn', name: string, description: string | null, type: string, constraints: { __typename: 'TableColumnConstraints', nullable: boolean, unique: boolean, other: Array<string> } }>, constraints: { __typename: 'TableConstraints', other: Array<string> } | null } } | { __typename: 'TextMetadataEntry', text: string, label: string, description: string | null } | { __typename: 'UrlMetadataEntry', url: string, label: string, description: string | null }>, inputSchemaType: { __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | null, outputSchemaType: { __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | null } | { __typename: 'RegularDagsterType', key: string, name: string | null, displayName: string, description: string | null, isNullable: boolean, isList: boolean, isBuiltin: boolean, isNothing: boolean, metadataEntries: Array<{ __typename: 'AssetMetadataEntry', label: string, description: string | null, assetKey: { __typename: 'AssetKey', path: Array<string> } } | { __typename: 'BoolMetadataEntry', boolValue: boolean | null, label: string, description: string | null } | { __typename: 'FloatMetadataEntry', floatValue: number | null, label: string, description: string | null } | { __typename: 'IntMetadataEntry', intValue: number | null, intRepr: string, label: string, description: string | null } | { __typename: 'JsonMetadataEntry', jsonString: string, label: string, description: string | null } | { __typename: 'MarkdownMetadataEntry', mdStr: string, label: string, description: string | null } | { __typename: 'NotebookMetadataEntry', path: string, label: string, description: string | null } | { __typename: 'NullMetadataEntry', label: string, description: string | null } | { __typename: 'PathMetadataEntry', path: string, label: string, description: string | null } | { __typename: 'PipelineRunMetadataEntry', runId: string, label: string, description: string | null } | { __typename: 'PythonArtifactMetadataEntry', module: string, name: string, label: string, description: string | null } | { __typename: 'TableMetadataEntry', label: string, description: string | null, table: { __typename: 'Table', records: Array<string>, schema: { __typename: 'TableSchema', columns: Array<{ __typename: 'TableColumn', name: string, description: string | null, type: string, constraints: { __typename: 'TableColumnConstraints', nullable: boolean, unique: boolean, other: Array<string> } }>, constraints: { __typename: 'TableConstraints', other: Array<string> } | null } } } | { __typename: 'TableSchemaMetadataEntry', label: string, description: string | null, schema: { __typename: 'TableSchema', columns: Array<{ __typename: 'TableColumn', name: string, description: string | null, type: string, constraints: { __typename: 'TableColumnConstraints', nullable: boolean, unique: boolean, other: Array<string> } }>, constraints: { __typename: 'TableConstraints', other: Array<string> } | null } } | { __typename: 'TextMetadataEntry', text: string, label: string, description: string | null } | { __typename: 'UrlMetadataEntry', url: string, label: string, description: string | null }>, inputSchemaType: { __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | null, outputSchemaType: { __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | null }>, metadataEntries: Array<{ __typename: 'AssetMetadataEntry', label: string, description: string | null, assetKey: { __typename: 'AssetKey', path: Array<string> } } | { __typename: 'BoolMetadataEntry', boolValue: boolean | null, label: string, description: string | null } | { __typename: 'FloatMetadataEntry', floatValue: number | null, label: string, description: string | null } | { __typename: 'IntMetadataEntry', intValue: number | null, intRepr: string, label: string, description: string | null } | { __typename: 'JsonMetadataEntry', jsonString: string, label: string, description: string | null } | { __typename: 'MarkdownMetadataEntry', mdStr: string, label: string, description: string | null } | { __typename: 'NotebookMetadataEntry', path: string, label: string, description: string | null } | { __typename: 'NullMetadataEntry', label: string, description: string | null } | { __typename: 'PathMetadataEntry', path: string, label: string, description: string | null } | { __typename: 'PipelineRunMetadataEntry', runId: string, label: string, description: string | null } | { __typename: 'PythonArtifactMetadataEntry', module: string, name: string, label: string, description: string | null } | { __typename: 'TableMetadataEntry', label: string, description: string | null, table: { __typename: 'Table', records: Array<string>, schema: { __typename: 'TableSchema', columns: Array<{ __typename: 'TableColumn', name: string, description: string | null, type: string, constraints: { __typename: 'TableColumnConstraints', nullable: boolean, unique: boolean, other: Array<string> } }>, constraints: { __typename: 'TableConstraints', other: Array<string> } | null } } } | { __typename: 'TableSchemaMetadataEntry', label: string, description: string | null, schema: { __typename: 'TableSchema', columns: Array<{ __typename: 'TableColumn', name: string, description: string | null, type: string, constraints: { __typename: 'TableColumnConstraints', nullable: boolean, unique: boolean, other: Array<string> } }>, constraints: { __typename: 'TableConstraints', other: Array<string> } | null } } | { __typename: 'TextMetadataEntry', text: string, label: string, description: string | null } | { __typename: 'UrlMetadataEntry', url: string, label: string, description: string | null }>, inputSchemaType: { __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | null, outputSchemaType: { __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | null };

type DagsterTypeFragment_RegularDagsterType_Fragment = { __typename: 'RegularDagsterType', key: string, name: string | null, displayName: string, description: string | null, isNullable: boolean, isList: boolean, isBuiltin: boolean, isNothing: boolean, innerTypes: Array<{ __typename: 'ListDagsterType', key: string, name: string | null, displayName: string, description: string | null, isNullable: boolean, isList: boolean, isBuiltin: boolean, isNothing: boolean, metadataEntries: Array<{ __typename: 'AssetMetadataEntry', label: string, description: string | null, assetKey: { __typename: 'AssetKey', path: Array<string> } } | { __typename: 'BoolMetadataEntry', boolValue: boolean | null, label: string, description: string | null } | { __typename: 'FloatMetadataEntry', floatValue: number | null, label: string, description: string | null } | { __typename: 'IntMetadataEntry', intValue: number | null, intRepr: string, label: string, description: string | null } | { __typename: 'JsonMetadataEntry', jsonString: string, label: string, description: string | null } | { __typename: 'MarkdownMetadataEntry', mdStr: string, label: string, description: string | null } | { __typename: 'NotebookMetadataEntry', path: string, label: string, description: string | null } | { __typename: 'NullMetadataEntry', label: string, description: string | null } | { __typename: 'PathMetadataEntry', path: string, label: string, description: string | null } | { __typename: 'PipelineRunMetadataEntry', runId: string, label: string, description: string | null } | { __typename: 'PythonArtifactMetadataEntry', module: string, name: string, label: string, description: string | null } | { __typename: 'TableMetadataEntry', label: string, description: string | null, table: { __typename: 'Table', records: Array<string>, schema: { __typename: 'TableSchema', columns: Array<{ __typename: 'TableColumn', name: string, description: string | null, type: string, constraints: { __typename: 'TableColumnConstraints', nullable: boolean, unique: boolean, other: Array<string> } }>, constraints: { __typename: 'TableConstraints', other: Array<string> } | null } } } | { __typename: 'TableSchemaMetadataEntry', label: string, description: string | null, schema: { __typename: 'TableSchema', columns: Array<{ __typename: 'TableColumn', name: string, description: string | null, type: string, constraints: { __typename: 'TableColumnConstraints', nullable: boolean, unique: boolean, other: Array<string> } }>, constraints: { __typename: 'TableConstraints', other: Array<string> } | null } } | { __typename: 'TextMetadataEntry', text: string, label: string, description: string | null } | { __typename: 'UrlMetadataEntry', url: string, label: string, description: string | null }>, inputSchemaType: { __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | null, outputSchemaType: { __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | null } | { __typename: 'NullableDagsterType', key: string, name: string | null, displayName: string, description: string | null, isNullable: boolean, isList: boolean, isBuiltin: boolean, isNothing: boolean, metadataEntries: Array<{ __typename: 'AssetMetadataEntry', label: string, description: string | null, assetKey: { __typename: 'AssetKey', path: Array<string> } } | { __typename: 'BoolMetadataEntry', boolValue: boolean | null, label: string, description: string | null } | { __typename: 'FloatMetadataEntry', floatValue: number | null, label: string, description: string | null } | { __typename: 'IntMetadataEntry', intValue: number | null, intRepr: string, label: string, description: string | null } | { __typename: 'JsonMetadataEntry', jsonString: string, label: string, description: string | null } | { __typename: 'MarkdownMetadataEntry', mdStr: string, label: string, description: string | null } | { __typename: 'NotebookMetadataEntry', path: string, label: string, description: string | null } | { __typename: 'NullMetadataEntry', label: string, description: string | null } | { __typename: 'PathMetadataEntry', path: string, label: string, description: string | null } | { __typename: 'PipelineRunMetadataEntry', runId: string, label: string, description: string | null } | { __typename: 'PythonArtifactMetadataEntry', module: string, name: string, label: string, description: string | null } | { __typename: 'TableMetadataEntry', label: string, description: string | null, table: { __typename: 'Table', records: Array<string>, schema: { __typename: 'TableSchema', columns: Array<{ __typename: 'TableColumn', name: string, description: string | null, type: string, constraints: { __typename: 'TableColumnConstraints', nullable: boolean, unique: boolean, other: Array<string> } }>, constraints: { __typename: 'TableConstraints', other: Array<string> } | null } } } | { __typename: 'TableSchemaMetadataEntry', label: string, description: string | null, schema: { __typename: 'TableSchema', columns: Array<{ __typename: 'TableColumn', name: string, description: string | null, type: string, constraints: { __typename: 'TableColumnConstraints', nullable: boolean, unique: boolean, other: Array<string> } }>, constraints: { __typename: 'TableConstraints', other: Array<string> } | null } } | { __typename: 'TextMetadataEntry', text: string, label: string, description: string | null } | { __typename: 'UrlMetadataEntry', url: string, label: string, description: string | null }>, inputSchemaType: { __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | null, outputSchemaType: { __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | null } | { __typename: 'RegularDagsterType', key: string, name: string | null, displayName: string, description: string | null, isNullable: boolean, isList: boolean, isBuiltin: boolean, isNothing: boolean, metadataEntries: Array<{ __typename: 'AssetMetadataEntry', label: string, description: string | null, assetKey: { __typename: 'AssetKey', path: Array<string> } } | { __typename: 'BoolMetadataEntry', boolValue: boolean | null, label: string, description: string | null } | { __typename: 'FloatMetadataEntry', floatValue: number | null, label: string, description: string | null } | { __typename: 'IntMetadataEntry', intValue: number | null, intRepr: string, label: string, description: string | null } | { __typename: 'JsonMetadataEntry', jsonString: string, label: string, description: string | null } | { __typename: 'MarkdownMetadataEntry', mdStr: string, label: string, description: string | null } | { __typename: 'NotebookMetadataEntry', path: string, label: string, description: string | null } | { __typename: 'NullMetadataEntry', label: string, description: string | null } | { __typename: 'PathMetadataEntry', path: string, label: string, description: string | null } | { __typename: 'PipelineRunMetadataEntry', runId: string, label: string, description: string | null } | { __typename: 'PythonArtifactMetadataEntry', module: string, name: string, label: string, description: string | null } | { __typename: 'TableMetadataEntry', label: string, description: string | null, table: { __typename: 'Table', records: Array<string>, schema: { __typename: 'TableSchema', columns: Array<{ __typename: 'TableColumn', name: string, description: string | null, type: string, constraints: { __typename: 'TableColumnConstraints', nullable: boolean, unique: boolean, other: Array<string> } }>, constraints: { __typename: 'TableConstraints', other: Array<string> } | null } } } | { __typename: 'TableSchemaMetadataEntry', label: string, description: string | null, schema: { __typename: 'TableSchema', columns: Array<{ __typename: 'TableColumn', name: string, description: string | null, type: string, constraints: { __typename: 'TableColumnConstraints', nullable: boolean, unique: boolean, other: Array<string> } }>, constraints: { __typename: 'TableConstraints', other: Array<string> } | null } } | { __typename: 'TextMetadataEntry', text: string, label: string, description: string | null } | { __typename: 'UrlMetadataEntry', url: string, label: string, description: string | null }>, inputSchemaType: { __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | null, outputSchemaType: { __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | null }>, metadataEntries: Array<{ __typename: 'AssetMetadataEntry', label: string, description: string | null, assetKey: { __typename: 'AssetKey', path: Array<string> } } | { __typename: 'BoolMetadataEntry', boolValue: boolean | null, label: string, description: string | null } | { __typename: 'FloatMetadataEntry', floatValue: number | null, label: string, description: string | null } | { __typename: 'IntMetadataEntry', intValue: number | null, intRepr: string, label: string, description: string | null } | { __typename: 'JsonMetadataEntry', jsonString: string, label: string, description: string | null } | { __typename: 'MarkdownMetadataEntry', mdStr: string, label: string, description: string | null } | { __typename: 'NotebookMetadataEntry', path: string, label: string, description: string | null } | { __typename: 'NullMetadataEntry', label: string, description: string | null } | { __typename: 'PathMetadataEntry', path: string, label: string, description: string | null } | { __typename: 'PipelineRunMetadataEntry', runId: string, label: string, description: string | null } | { __typename: 'PythonArtifactMetadataEntry', module: string, name: string, label: string, description: string | null } | { __typename: 'TableMetadataEntry', label: string, description: string | null, table: { __typename: 'Table', records: Array<string>, schema: { __typename: 'TableSchema', columns: Array<{ __typename: 'TableColumn', name: string, description: string | null, type: string, constraints: { __typename: 'TableColumnConstraints', nullable: boolean, unique: boolean, other: Array<string> } }>, constraints: { __typename: 'TableConstraints', other: Array<string> } | null } } } | { __typename: 'TableSchemaMetadataEntry', label: string, description: string | null, schema: { __typename: 'TableSchema', columns: Array<{ __typename: 'TableColumn', name: string, description: string | null, type: string, constraints: { __typename: 'TableColumnConstraints', nullable: boolean, unique: boolean, other: Array<string> } }>, constraints: { __typename: 'TableConstraints', other: Array<string> } | null } } | { __typename: 'TextMetadataEntry', text: string, label: string, description: string | null } | { __typename: 'UrlMetadataEntry', url: string, label: string, description: string | null }>, inputSchemaType: { __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | null, outputSchemaType: { __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | null };

export type DagsterTypeFragmentFragment = DagsterTypeFragment_ListDagsterType_Fragment | DagsterTypeFragment_NullableDagsterType_Fragment | DagsterTypeFragment_RegularDagsterType_Fragment;

type _DagsterTypeFragment_ListDagsterType_Fragment = { __typename: 'ListDagsterType', key: string, name: string | null, displayName: string, description: string | null, isNullable: boolean, isList: boolean, isBuiltin: boolean, isNothing: boolean, metadataEntries: Array<{ __typename: 'AssetMetadataEntry', label: string, description: string | null, assetKey: { __typename: 'AssetKey', path: Array<string> } } | { __typename: 'BoolMetadataEntry', boolValue: boolean | null, label: string, description: string | null } | { __typename: 'FloatMetadataEntry', floatValue: number | null, label: string, description: string | null } | { __typename: 'IntMetadataEntry', intValue: number | null, intRepr: string, label: string, description: string | null } | { __typename: 'JsonMetadataEntry', jsonString: string, label: string, description: string | null } | { __typename: 'MarkdownMetadataEntry', mdStr: string, label: string, description: string | null } | { __typename: 'NotebookMetadataEntry', path: string, label: string, description: string | null } | { __typename: 'NullMetadataEntry', label: string, description: string | null } | { __typename: 'PathMetadataEntry', path: string, label: string, description: string | null } | { __typename: 'PipelineRunMetadataEntry', runId: string, label: string, description: string | null } | { __typename: 'PythonArtifactMetadataEntry', module: string, name: string, label: string, description: string | null } | { __typename: 'TableMetadataEntry', label: string, description: string | null, table: { __typename: 'Table', records: Array<string>, schema: { __typename: 'TableSchema', columns: Array<{ __typename: 'TableColumn', name: string, description: string | null, type: string, constraints: { __typename: 'TableColumnConstraints', nullable: boolean, unique: boolean, other: Array<string> } }>, constraints: { __typename: 'TableConstraints', other: Array<string> } | null } } } | { __typename: 'TableSchemaMetadataEntry', label: string, description: string | null, schema: { __typename: 'TableSchema', columns: Array<{ __typename: 'TableColumn', name: string, description: string | null, type: string, constraints: { __typename: 'TableColumnConstraints', nullable: boolean, unique: boolean, other: Array<string> } }>, constraints: { __typename: 'TableConstraints', other: Array<string> } | null } } | { __typename: 'TextMetadataEntry', text: string, label: string, description: string | null } | { __typename: 'UrlMetadataEntry', url: string, label: string, description: string | null }>, inputSchemaType: { __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | null, outputSchemaType: { __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | null };

type _DagsterTypeFragment_NullableDagsterType_Fragment = { __typename: 'NullableDagsterType', key: string, name: string | null, displayName: string, description: string | null, isNullable: boolean, isList: boolean, isBuiltin: boolean, isNothing: boolean, metadataEntries: Array<{ __typename: 'AssetMetadataEntry', label: string, description: string | null, assetKey: { __typename: 'AssetKey', path: Array<string> } } | { __typename: 'BoolMetadataEntry', boolValue: boolean | null, label: string, description: string | null } | { __typename: 'FloatMetadataEntry', floatValue: number | null, label: string, description: string | null } | { __typename: 'IntMetadataEntry', intValue: number | null, intRepr: string, label: string, description: string | null } | { __typename: 'JsonMetadataEntry', jsonString: string, label: string, description: string | null } | { __typename: 'MarkdownMetadataEntry', mdStr: string, label: string, description: string | null } | { __typename: 'NotebookMetadataEntry', path: string, label: string, description: string | null } | { __typename: 'NullMetadataEntry', label: string, description: string | null } | { __typename: 'PathMetadataEntry', path: string, label: string, description: string | null } | { __typename: 'PipelineRunMetadataEntry', runId: string, label: string, description: string | null } | { __typename: 'PythonArtifactMetadataEntry', module: string, name: string, label: string, description: string | null } | { __typename: 'TableMetadataEntry', label: string, description: string | null, table: { __typename: 'Table', records: Array<string>, schema: { __typename: 'TableSchema', columns: Array<{ __typename: 'TableColumn', name: string, description: string | null, type: string, constraints: { __typename: 'TableColumnConstraints', nullable: boolean, unique: boolean, other: Array<string> } }>, constraints: { __typename: 'TableConstraints', other: Array<string> } | null } } } | { __typename: 'TableSchemaMetadataEntry', label: string, description: string | null, schema: { __typename: 'TableSchema', columns: Array<{ __typename: 'TableColumn', name: string, description: string | null, type: string, constraints: { __typename: 'TableColumnConstraints', nullable: boolean, unique: boolean, other: Array<string> } }>, constraints: { __typename: 'TableConstraints', other: Array<string> } | null } } | { __typename: 'TextMetadataEntry', text: string, label: string, description: string | null } | { __typename: 'UrlMetadataEntry', url: string, label: string, description: string | null }>, inputSchemaType: { __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | null, outputSchemaType: { __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | null };

type _DagsterTypeFragment_RegularDagsterType_Fragment = { __typename: 'RegularDagsterType', key: string, name: string | null, displayName: string, description: string | null, isNullable: boolean, isList: boolean, isBuiltin: boolean, isNothing: boolean, metadataEntries: Array<{ __typename: 'AssetMetadataEntry', label: string, description: string | null, assetKey: { __typename: 'AssetKey', path: Array<string> } } | { __typename: 'BoolMetadataEntry', boolValue: boolean | null, label: string, description: string | null } | { __typename: 'FloatMetadataEntry', floatValue: number | null, label: string, description: string | null } | { __typename: 'IntMetadataEntry', intValue: number | null, intRepr: string, label: string, description: string | null } | { __typename: 'JsonMetadataEntry', jsonString: string, label: string, description: string | null } | { __typename: 'MarkdownMetadataEntry', mdStr: string, label: string, description: string | null } | { __typename: 'NotebookMetadataEntry', path: string, label: string, description: string | null } | { __typename: 'NullMetadataEntry', label: string, description: string | null } | { __typename: 'PathMetadataEntry', path: string, label: string, description: string | null } | { __typename: 'PipelineRunMetadataEntry', runId: string, label: string, description: string | null } | { __typename: 'PythonArtifactMetadataEntry', module: string, name: string, label: string, description: string | null } | { __typename: 'TableMetadataEntry', label: string, description: string | null, table: { __typename: 'Table', records: Array<string>, schema: { __typename: 'TableSchema', columns: Array<{ __typename: 'TableColumn', name: string, description: string | null, type: string, constraints: { __typename: 'TableColumnConstraints', nullable: boolean, unique: boolean, other: Array<string> } }>, constraints: { __typename: 'TableConstraints', other: Array<string> } | null } } } | { __typename: 'TableSchemaMetadataEntry', label: string, description: string | null, schema: { __typename: 'TableSchema', columns: Array<{ __typename: 'TableColumn', name: string, description: string | null, type: string, constraints: { __typename: 'TableColumnConstraints', nullable: boolean, unique: boolean, other: Array<string> } }>, constraints: { __typename: 'TableConstraints', other: Array<string> } | null } } | { __typename: 'TextMetadataEntry', text: string, label: string, description: string | null } | { __typename: 'UrlMetadataEntry', url: string, label: string, description: string | null }>, inputSchemaType: { __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | null, outputSchemaType: { __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | null };

export type _DagsterTypeFragmentFragment = _DagsterTypeFragment_ListDagsterType_Fragment | _DagsterTypeFragment_NullableDagsterType_Fragment | _DagsterTypeFragment_RegularDagsterType_Fragment;

export type RunGroupPanelQueryQueryVariables = Exact<{
  runId: Scalars['ID'];
}>;


export type RunGroupPanelQueryQuery = { __typename: 'DagitQuery', runGroupOrError: { __typename: 'PythonError', message: string, stack: Array<string>, errorChain: Array<{ __typename: 'ErrorChainLink', isExplicitLink: boolean, error: { __typename: 'PythonError', message: string, stack: Array<string> } }> } | { __typename: 'RunGroup', rootRunId: string, runs: Array<{ __typename: 'Run', id: string, runId: string, parentRunId: string | null, status: RunStatus, stepKeysToExecute: Array<string> | null, pipelineName: string, startTime: number | null, endTime: number | null, updateTime: number | null, tags: Array<{ __typename: 'PipelineTag', key: string, value: string }> } | null> | null } | { __typename: 'RunGroupNotFoundError' } };

export type RunGroupPanelRunFragment = { __typename: 'Run', id: string, runId: string, parentRunId: string | null, status: RunStatus, stepKeysToExecute: Array<string> | null, pipelineName: string, startTime: number | null, endTime: number | null, updateTime: number | null, tags: Array<{ __typename: 'PipelineTag', key: string, value: string }> };

export type ExecutionPlanToGraphFragmentFragment = { __typename: 'ExecutionPlan', steps: Array<{ __typename: 'ExecutionStep', key: string, kind: StepKind, inputs: Array<{ __typename: 'ExecutionStepInput', dependsOn: Array<{ __typename: 'ExecutionStep', key: string, kind: StepKind }> }> }> };

export type OpGraphOpFragmentFragment = { __typename: 'Solid', name: string, isDynamicMapped: boolean, definition: { __typename: 'CompositeSolidDefinition', name: string, id: string, description: string | null, inputMappings: Array<{ __typename: 'InputMapping', definition: { __typename: 'InputDefinition', name: string }, mappedInput: { __typename: 'Input', definition: { __typename: 'InputDefinition', name: string }, solid: { __typename: 'Solid', name: string } } }>, outputMappings: Array<{ __typename: 'OutputMapping', definition: { __typename: 'OutputDefinition', name: string }, mappedOutput: { __typename: 'Output', definition: { __typename: 'OutputDefinition', name: string }, solid: { __typename: 'Solid', name: string } } }>, metadata: Array<{ __typename: 'MetadataItemDefinition', key: string, value: string }>, assetNodes: Array<{ __typename: 'AssetNode', id: string, assetKey: { __typename: 'AssetKey', path: Array<string> } }>, inputDefinitions: Array<{ __typename: 'InputDefinition', name: string, type: { __typename: 'ListDagsterType', displayName: string } | { __typename: 'NullableDagsterType', displayName: string } | { __typename: 'RegularDagsterType', displayName: string } }>, outputDefinitions: Array<{ __typename: 'OutputDefinition', name: string, isDynamic: boolean | null, type: { __typename: 'ListDagsterType', displayName: string } | { __typename: 'NullableDagsterType', displayName: string } | { __typename: 'RegularDagsterType', displayName: string } }> } | { __typename: 'SolidDefinition', name: string, description: string | null, configField: { __typename: 'ConfigTypeField', configType: { __typename: 'ArrayConfigType', key: string, description: string | null } | { __typename: 'CompositeConfigType', key: string, description: string | null } | { __typename: 'EnumConfigType', key: string, description: string | null } | { __typename: 'MapConfigType', key: string, description: string | null } | { __typename: 'NullableConfigType', key: string, description: string | null } | { __typename: 'RegularConfigType', key: string, description: string | null } | { __typename: 'ScalarUnionConfigType', key: string, description: string | null } } | null, metadata: Array<{ __typename: 'MetadataItemDefinition', key: string, value: string }>, assetNodes: Array<{ __typename: 'AssetNode', id: string, assetKey: { __typename: 'AssetKey', path: Array<string> } }>, inputDefinitions: Array<{ __typename: 'InputDefinition', name: string, type: { __typename: 'ListDagsterType', displayName: string } | { __typename: 'NullableDagsterType', displayName: string } | { __typename: 'RegularDagsterType', displayName: string } }>, outputDefinitions: Array<{ __typename: 'OutputDefinition', name: string, isDynamic: boolean | null, type: { __typename: 'ListDagsterType', displayName: string } | { __typename: 'NullableDagsterType', displayName: string } | { __typename: 'RegularDagsterType', displayName: string } }> }, inputs: Array<{ __typename: 'Input', isDynamicCollect: boolean, definition: { __typename: 'InputDefinition', name: string }, dependsOn: Array<{ __typename: 'Output', definition: { __typename: 'OutputDefinition', name: string, type: { __typename: 'ListDagsterType', displayName: string } | { __typename: 'NullableDagsterType', displayName: string } | { __typename: 'RegularDagsterType', displayName: string } }, solid: { __typename: 'Solid', name: string } }> }>, outputs: Array<{ __typename: 'Output', definition: { __typename: 'OutputDefinition', name: string }, dependedBy: Array<{ __typename: 'Input', solid: { __typename: 'Solid', name: string }, definition: { __typename: 'InputDefinition', name: string, type: { __typename: 'ListDagsterType', displayName: string } | { __typename: 'NullableDagsterType', displayName: string } | { __typename: 'RegularDagsterType', displayName: string } } }> }> };

export type OpNodeInvocationFragmentFragment = { __typename: 'Solid', name: string, isDynamicMapped: boolean, inputs: Array<{ __typename: 'Input', isDynamicCollect: boolean, definition: { __typename: 'InputDefinition', name: string }, dependsOn: Array<{ __typename: 'Output', definition: { __typename: 'OutputDefinition', name: string, type: { __typename: 'ListDagsterType', displayName: string } | { __typename: 'NullableDagsterType', displayName: string } | { __typename: 'RegularDagsterType', displayName: string } }, solid: { __typename: 'Solid', name: string } }> }>, outputs: Array<{ __typename: 'Output', definition: { __typename: 'OutputDefinition', name: string }, dependedBy: Array<{ __typename: 'Input', solid: { __typename: 'Solid', name: string }, definition: { __typename: 'InputDefinition', name: string, type: { __typename: 'ListDagsterType', displayName: string } | { __typename: 'NullableDagsterType', displayName: string } | { __typename: 'RegularDagsterType', displayName: string } } }> }> };

type OpNodeDefinitionFragment_CompositeSolidDefinition_Fragment = { __typename: 'CompositeSolidDefinition', id: string, name: string, description: string | null, inputMappings: Array<{ __typename: 'InputMapping', definition: { __typename: 'InputDefinition', name: string }, mappedInput: { __typename: 'Input', definition: { __typename: 'InputDefinition', name: string }, solid: { __typename: 'Solid', name: string } } }>, outputMappings: Array<{ __typename: 'OutputMapping', definition: { __typename: 'OutputDefinition', name: string }, mappedOutput: { __typename: 'Output', definition: { __typename: 'OutputDefinition', name: string }, solid: { __typename: 'Solid', name: string } } }>, metadata: Array<{ __typename: 'MetadataItemDefinition', key: string, value: string }>, assetNodes: Array<{ __typename: 'AssetNode', id: string, assetKey: { __typename: 'AssetKey', path: Array<string> } }>, inputDefinitions: Array<{ __typename: 'InputDefinition', name: string, type: { __typename: 'ListDagsterType', displayName: string } | { __typename: 'NullableDagsterType', displayName: string } | { __typename: 'RegularDagsterType', displayName: string } }>, outputDefinitions: Array<{ __typename: 'OutputDefinition', name: string, isDynamic: boolean | null, type: { __typename: 'ListDagsterType', displayName: string } | { __typename: 'NullableDagsterType', displayName: string } | { __typename: 'RegularDagsterType', displayName: string } }> };

type OpNodeDefinitionFragment_SolidDefinition_Fragment = { __typename: 'SolidDefinition', name: string, description: string | null, configField: { __typename: 'ConfigTypeField', configType: { __typename: 'ArrayConfigType', key: string, description: string | null } | { __typename: 'CompositeConfigType', key: string, description: string | null } | { __typename: 'EnumConfigType', key: string, description: string | null } | { __typename: 'MapConfigType', key: string, description: string | null } | { __typename: 'NullableConfigType', key: string, description: string | null } | { __typename: 'RegularConfigType', key: string, description: string | null } | { __typename: 'ScalarUnionConfigType', key: string, description: string | null } } | null, metadata: Array<{ __typename: 'MetadataItemDefinition', key: string, value: string }>, assetNodes: Array<{ __typename: 'AssetNode', id: string, assetKey: { __typename: 'AssetKey', path: Array<string> } }>, inputDefinitions: Array<{ __typename: 'InputDefinition', name: string, type: { __typename: 'ListDagsterType', displayName: string } | { __typename: 'NullableDagsterType', displayName: string } | { __typename: 'RegularDagsterType', displayName: string } }>, outputDefinitions: Array<{ __typename: 'OutputDefinition', name: string, isDynamic: boolean | null, type: { __typename: 'ListDagsterType', displayName: string } | { __typename: 'NullableDagsterType', displayName: string } | { __typename: 'RegularDagsterType', displayName: string } }> };

export type OpNodeDefinitionFragmentFragment = OpNodeDefinitionFragment_CompositeSolidDefinition_Fragment | OpNodeDefinitionFragment_SolidDefinition_Fragment;

export type OpNodeInputDefinitionFragment = { __typename: 'InputDefinition', name: string, type: { __typename: 'ListDagsterType', displayName: string } | { __typename: 'NullableDagsterType', displayName: string } | { __typename: 'RegularDagsterType', displayName: string } };

export type OpNodeOutputDefinitionFragment = { __typename: 'OutputDefinition', name: string, isDynamic: boolean | null, type: { __typename: 'ListDagsterType', displayName: string } | { __typename: 'NullableDagsterType', displayName: string } | { __typename: 'RegularDagsterType', displayName: string } };

export type SingleBackfillQueryQueryVariables = Exact<{
  backfillId: Scalars['String'];
}>;


export type SingleBackfillQueryQuery = { __typename: 'DagitQuery', partitionBackfillOrError: { __typename: 'PartitionBackfill', partitionStatuses: { __typename: 'PartitionStatuses', results: Array<{ __typename: 'PartitionStatus', id: string, partitionName: string, runId: string | null, runStatus: RunStatus | null }> } } | { __typename: 'PythonError' } };

export type PartitionStatusesForBackfillFragment = { __typename: 'PartitionStatuses', results: Array<{ __typename: 'PartitionStatus', id: string, partitionName: string, runId: string | null, runStatus: RunStatus | null }> };

export type BackfillTableFragmentFragment = { __typename: 'PartitionBackfill', backfillId: string, status: BulkActionStatus, numCancelable: number, partitionNames: Array<string>, numPartitions: number, timestamp: number, partitionSetName: string | null, partitionSet: { __typename: 'PartitionSet', id: string, name: string, mode: string, pipelineName: string, repositoryOrigin: { __typename: 'RepositoryOrigin', id: string, repositoryName: string, repositoryLocationName: string } } | null, assetSelection: Array<{ __typename: 'AssetKey', path: Array<string> }> | null, error: { __typename: 'PythonError', message: string, stack: Array<string>, errorChain: Array<{ __typename: 'ErrorChainLink', isExplicitLink: boolean, error: { __typename: 'PythonError', message: string, stack: Array<string> } }> } | null };

export type PartitionSetForBackfillTableFragment = { __typename: 'PartitionSet', id: string, name: string, mode: string, pipelineName: string, repositoryOrigin: { __typename: 'RepositoryOrigin', id: string, repositoryName: string, repositoryLocationName: string } };

export type CancelBackfillMutationVariables = Exact<{
  backfillId: Scalars['String'];
}>;


export type CancelBackfillMutation = { __typename: 'DagitMutation', cancelPartitionBackfill: { __typename: 'CancelBackfillSuccess', backfillId: string } | { __typename: 'PythonError', message: string, stack: Array<string>, errorChain: Array<{ __typename: 'ErrorChainLink', isExplicitLink: boolean, error: { __typename: 'PythonError', message: string, stack: Array<string> } }> } | { __typename: 'UnauthorizedError' } };

export type ResumeBackfillMutationVariables = Exact<{
  backfillId: Scalars['String'];
}>;


export type ResumeBackfillMutation = { __typename: 'DagitMutation', resumePartitionBackfill: { __typename: 'PythonError', message: string, stack: Array<string>, errorChain: Array<{ __typename: 'ErrorChainLink', isExplicitLink: boolean, error: { __typename: 'PythonError', message: string, stack: Array<string> } }> } | { __typename: 'ResumeBackfillSuccess', backfillId: string } | { __typename: 'UnauthorizedError', message: string } };

export type LaunchPartitionBackfillMutationVariables = Exact<{
  backfillParams: LaunchBackfillParams;
}>;


export type LaunchPartitionBackfillMutation = { __typename: 'DagitMutation', launchPartitionBackfill: { __typename: 'ConflictingExecutionParamsError', message: string } | { __typename: 'InvalidOutputError', stepKey: string, invalidOutputName: string } | { __typename: 'InvalidStepError', invalidStepKey: string } | { __typename: 'InvalidSubsetError' } | { __typename: 'LaunchBackfillSuccess', backfillId: string } | { __typename: 'NoModeProvidedError' } | { __typename: 'PartitionSetNotFoundError', message: string } | { __typename: 'PipelineNotFoundError', message: string } | { __typename: 'PresetNotFoundError', message: string } | { __typename: 'PythonError', message: string, stack: Array<string>, errorChain: Array<{ __typename: 'ErrorChainLink', isExplicitLink: boolean, error: { __typename: 'PythonError', message: string, stack: Array<string> } }> } | { __typename: 'RunConfigValidationInvalid', pipelineName: string, errors: Array<{ __typename: 'FieldNotDefinedConfigError', message: string, path: Array<string>, reason: EvaluationErrorReason } | { __typename: 'FieldsNotDefinedConfigError', message: string, path: Array<string>, reason: EvaluationErrorReason } | { __typename: 'MissingFieldConfigError', message: string, path: Array<string>, reason: EvaluationErrorReason } | { __typename: 'MissingFieldsConfigError', message: string, path: Array<string>, reason: EvaluationErrorReason } | { __typename: 'RuntimeMismatchConfigError', message: string, path: Array<string>, reason: EvaluationErrorReason } | { __typename: 'SelectorTypeConfigError', message: string, path: Array<string>, reason: EvaluationErrorReason }> } | { __typename: 'RunConflict', message: string } | { __typename: 'UnauthorizedError', message: string } };

export type DaemonHealthFragmentFragment = { __typename: 'DaemonHealth', id: string, allDaemonStatuses: Array<{ __typename: 'DaemonStatus', id: string, daemonType: string, required: boolean, healthy: boolean | null, lastHeartbeatTime: number | null, lastHeartbeatErrors: Array<{ __typename: 'PythonError', message: string, stack: Array<string>, errorChain: Array<{ __typename: 'ErrorChainLink', isExplicitLink: boolean, error: { __typename: 'PythonError', message: string, stack: Array<string> } }> }> }> };

export type DaemonStatusForListFragment = { __typename: 'DaemonStatus', id: string, daemonType: string, required: boolean, healthy: boolean | null, lastHeartbeatTime: number | null, lastHeartbeatErrors: Array<{ __typename: 'PythonError', message: string, stack: Array<string>, errorChain: Array<{ __typename: 'ErrorChainLink', isExplicitLink: boolean, error: { __typename: 'PythonError', message: string, stack: Array<string> } }> }> };

export type InstanceHealthForBackfillsQueryQueryVariables = Exact<{ [key: string]: never; }>;


export type InstanceHealthForBackfillsQueryQuery = { __typename: 'DagitQuery', instance: { __typename: 'Instance', hasInfo: boolean, daemonHealth: { __typename: 'DaemonHealth', id: string, allDaemonStatuses: Array<{ __typename: 'DaemonStatus', id: string, daemonType: string, required: boolean, healthy: boolean | null, lastHeartbeatTime: number | null, lastHeartbeatErrors: Array<{ __typename: 'PythonError', message: string, stack: Array<string>, errorChain: Array<{ __typename: 'ErrorChainLink', isExplicitLink: boolean, error: { __typename: 'PythonError', message: string, stack: Array<string> } }> }> }> } } };

export type InstanceBackfillsQueryQueryVariables = Exact<{
  cursor?: InputMaybe<Scalars['String']>;
  limit?: InputMaybe<Scalars['Int']>;
}>;


export type InstanceBackfillsQueryQuery = { __typename: 'DagitQuery', partitionBackfillsOrError: { __typename: 'PartitionBackfills', results: Array<{ __typename: 'PartitionBackfill', backfillId: string, status: BulkActionStatus, numPartitions: number, timestamp: number, partitionSetName: string | null, numCancelable: number, partitionNames: Array<string>, partitionSet: { __typename: 'PartitionSet', id: string, name: string, mode: string, pipelineName: string, repositoryOrigin: { __typename: 'RepositoryOrigin', id: string, repositoryName: string, repositoryLocationName: string } } | null, error: { __typename: 'PythonError', message: string, stack: Array<string>, errorChain: Array<{ __typename: 'ErrorChainLink', isExplicitLink: boolean, error: { __typename: 'PythonError', message: string, stack: Array<string> } }> } | null, assetSelection: Array<{ __typename: 'AssetKey', path: Array<string> }> | null }> } | { __typename: 'PythonError', message: string, stack: Array<string>, errorChain: Array<{ __typename: 'ErrorChainLink', isExplicitLink: boolean, error: { __typename: 'PythonError', message: string, stack: Array<string> } }> } };

export type InstanceConfigQueryQueryVariables = Exact<{ [key: string]: never; }>;


export type InstanceConfigQueryQuery = { __typename: 'DagitQuery', version: string, instance: { __typename: 'Instance', info: string | null } };

export type InstanceHealthFragmentFragment = { __typename: 'Instance', hasInfo: boolean, daemonHealth: { __typename: 'DaemonHealth', id: string, allDaemonStatuses: Array<{ __typename: 'DaemonStatus', id: string, daemonType: string, required: boolean, healthy: boolean | null, lastHeartbeatTime: number | null, lastHeartbeatErrors: Array<{ __typename: 'PythonError', message: string, stack: Array<string>, errorChain: Array<{ __typename: 'ErrorChainLink', isExplicitLink: boolean, error: { __typename: 'PythonError', message: string, stack: Array<string> } }> }> }> } };

export type InstanceHealthQueryQueryVariables = Exact<{ [key: string]: never; }>;


export type InstanceHealthQueryQuery = { __typename: 'DagitQuery', instance: { __typename: 'Instance', hasInfo: boolean, daemonHealth: { __typename: 'DaemonHealth', id: string, allDaemonStatuses: Array<{ __typename: 'DaemonStatus', id: string, daemonType: string, required: boolean, healthy: boolean | null, lastHeartbeatTime: number | null, lastHeartbeatErrors: Array<{ __typename: 'PythonError', message: string, stack: Array<string>, errorChain: Array<{ __typename: 'ErrorChainLink', isExplicitLink: boolean, error: { __typename: 'PythonError', message: string, stack: Array<string> } }> }> }> } } };

export type RunReExecutionQueryQueryVariables = Exact<{
  runId: Scalars['ID'];
}>;


export type RunReExecutionQueryQuery = { __typename: 'DagitQuery', pipelineRunOrError: { __typename: 'PythonError' } | { __typename: 'Run', id: string, runConfigYaml: string, runId: string, canTerminate: boolean, status: RunStatus, mode: string, rootRunId: string | null, parentRunId: string | null, pipelineName: string, solidSelection: Array<string> | null, pipelineSnapshotId: string | null, parentPipelineSnapshotId: string | null, stepKeysToExecute: Array<string> | null, updateTime: number | null, startTime: number | null, endTime: number | null, tags: Array<{ __typename: 'PipelineTag', key: string, value: string }>, assets: Array<{ __typename: 'Asset', id: string, key: { __typename: 'AssetKey', path: Array<string> } }>, assetSelection: Array<{ __typename: 'AssetKey', path: Array<string> }> | null, executionPlan: { __typename: 'ExecutionPlan', artifactsPersisted: boolean, steps: Array<{ __typename: 'ExecutionStep', key: string, kind: StepKind, inputs: Array<{ __typename: 'ExecutionStepInput', dependsOn: Array<{ __typename: 'ExecutionStep', key: string, kind: StepKind }> }> }> } | null, stepStats: Array<{ __typename: 'RunStepStats', stepKey: string, status: StepEventStatus | null, startTime: number | null, endTime: number | null, attempts: Array<{ __typename: 'RunMarker', startTime: number | null, endTime: number | null }>, markers: Array<{ __typename: 'RunMarker', startTime: number | null, endTime: number | null }> }>, repositoryOrigin: { __typename: 'RepositoryOrigin', id: string, repositoryName: string, repositoryLocationName: string } | null } | { __typename: 'RunNotFoundError' } };

export type ScheduleFutureTicksFragmentFragment = { __typename: 'Schedule', id: string, executionTimezone: string | null, scheduleState: { __typename: 'InstigationState', id: string, status: InstigationStatus }, futureTicks: { __typename: 'FutureInstigationTicks', results: Array<{ __typename: 'FutureInstigationTick', timestamp: number }> } };

export type StepSummaryForRunQueryQueryVariables = Exact<{
  runId: Scalars['ID'];
}>;


export type StepSummaryForRunQueryQuery = { __typename: 'DagitQuery', pipelineRunOrError: { __typename: 'PythonError' } | { __typename: 'Run', id: string, status: RunStatus, stepStats: Array<{ __typename: 'RunStepStats', endTime: number | null, stepKey: string, status: StepEventStatus | null }> } | { __typename: 'RunNotFoundError' } };

export type InstanceConfigHasInfoQueryVariables = Exact<{ [key: string]: never; }>;


export type InstanceConfigHasInfoQuery = { __typename: 'DagitQuery', instance: { __typename: 'Instance', hasInfo: boolean } };

export type InstanceWarningQueryQueryVariables = Exact<{ [key: string]: never; }>;


export type InstanceWarningQueryQuery = { __typename: 'DagitQuery', instance: { __typename: 'Instance', hasInfo: boolean, daemonHealth: { __typename: 'DaemonHealth', id: string, allDaemonStatuses: Array<{ __typename: 'DaemonStatus', id: string, daemonType: string, required: boolean, healthy: boolean | null, lastHeartbeatTime: number | null, lastHeartbeatErrors: Array<{ __typename: 'PythonError', message: string, stack: Array<string>, errorChain: Array<{ __typename: 'ErrorChainLink', isExplicitLink: boolean, error: { __typename: 'PythonError', message: string, stack: Array<string> } }> }> }> } }, partitionBackfillsOrError: { __typename: 'PartitionBackfills', results: Array<{ __typename: 'PartitionBackfill', backfillId: string }> } | { __typename: 'PythonError' } };

export type InstanceSupportsCapturedLogsQueryVariables = Exact<{ [key: string]: never; }>;


export type InstanceSupportsCapturedLogsQuery = { __typename: 'DagitQuery', instance: { __typename: 'Instance', hasCapturedLogManager: boolean } };

export type TickTagFragmentFragment = { __typename: 'InstigationTick', id: string, status: InstigationTickStatus, timestamp: number, skipReason: string | null, runIds: Array<string>, runKeys: Array<string>, error: { __typename: 'PythonError', message: string, stack: Array<string>, errorChain: Array<{ __typename: 'ErrorChainLink', isExplicitLink: boolean, error: { __typename: 'PythonError', message: string, stack: Array<string> } }> } | null };

export type LaunchedRunListQueryQueryVariables = Exact<{
  filter: RunsFilter;
}>;


export type LaunchedRunListQueryQuery = { __typename: 'DagitQuery', pipelineRunsOrError: { __typename: 'InvalidPipelineRunsFilterError', message: string } | { __typename: 'PythonError', message: string, stack: Array<string>, errorChain: Array<{ __typename: 'ErrorChainLink', isExplicitLink: boolean, error: { __typename: 'PythonError', message: string, stack: Array<string> } }> } | { __typename: 'Runs', results: Array<{ __typename: 'Run', id: string, runId: string, status: RunStatus, stepKeysToExecute: Array<string> | null, canTerminate: boolean, mode: string, rootRunId: string | null, parentRunId: string | null, pipelineSnapshotId: string | null, parentPipelineSnapshotId: string | null, pipelineName: string, solidSelection: Array<string> | null, startTime: number | null, endTime: number | null, updateTime: number | null, repositoryOrigin: { __typename: 'RepositoryOrigin', id: string, repositoryName: string, repositoryLocationName: string } | null, assetSelection: Array<{ __typename: 'AssetKey', path: Array<string> }> | null, tags: Array<{ __typename: 'PipelineTag', key: string, value: string }> }> } };

export type RunStatusFragmentFragment = { __typename: 'Run', id: string, runId: string, status: RunStatus };

export type InstigationStateFragmentFragment = { __typename: 'InstigationState', id: string, selectorId: string, name: string, instigationType: InstigationType, status: InstigationStatus, repositoryName: string, repositoryLocationName: string, runningCount: number, typeSpecificData: { __typename: 'ScheduleData', cronSchedule: string } | { __typename: 'SensorData', lastRunKey: string | null, lastCursor: string | null } | null, runs: Array<{ __typename: 'Run', id: string, runId: string, status: RunStatus, startTime: number | null, endTime: number | null, updateTime: number | null }>, ticks: Array<{ __typename: 'InstigationTick', id: string, cursor: string | null, status: InstigationTickStatus, timestamp: number, skipReason: string | null, runIds: Array<string>, runKeys: Array<string>, error: { __typename: 'PythonError', message: string, stack: Array<string>, errorChain: Array<{ __typename: 'ErrorChainLink', isExplicitLink: boolean, error: { __typename: 'PythonError', message: string, stack: Array<string> } }> } | null }> };

export type SelectedTickQueryQueryVariables = Exact<{
  instigationSelector: InstigationSelector;
  timestamp: Scalars['Float'];
}>;


export type SelectedTickQueryQuery = { __typename: 'DagitQuery', instigationStateOrError: { __typename: 'InstigationState', id: string, tick: { __typename: 'InstigationTick', id: string, status: InstigationTickStatus, timestamp: number, skipReason: string | null, runIds: Array<string>, originRunIds: Array<string>, runKeys: Array<string>, error: { __typename: 'PythonError', message: string, stack: Array<string>, errorChain: Array<{ __typename: 'ErrorChainLink', isExplicitLink: boolean, error: { __typename: 'PythonError', message: string, stack: Array<string> } }> } | null } | null } | { __typename: 'InstigationStateNotFoundError' } | { __typename: 'PythonError' } };

export type TickHistoryQueryQueryVariables = Exact<{
  instigationSelector: InstigationSelector;
  dayRange?: InputMaybe<Scalars['Int']>;
  limit?: InputMaybe<Scalars['Int']>;
  cursor?: InputMaybe<Scalars['String']>;
  statuses?: InputMaybe<Array<InstigationTickStatus> | InstigationTickStatus>;
}>;


export type TickHistoryQueryQuery = { __typename: 'DagitQuery', instigationStateOrError: { __typename: 'InstigationState', id: string, instigationType: InstigationType, nextTick: { __typename: 'FutureInstigationTick', timestamp: number } | null, ticks: Array<{ __typename: 'InstigationTick', id: string, status: InstigationTickStatus, timestamp: number, cursor: string | null, skipReason: string | null, runIds: Array<string>, originRunIds: Array<string>, logKey: Array<string> | null, runKeys: Array<string>, runs: Array<{ __typename: 'Run', id: string, status: RunStatus, runId: string }>, error: { __typename: 'PythonError', message: string, stack: Array<string>, errorChain: Array<{ __typename: 'ErrorChainLink', isExplicitLink: boolean, error: { __typename: 'PythonError', message: string, stack: Array<string> } }> } | null }> } | { __typename: 'InstigationStateNotFoundError' } | { __typename: 'PythonError', message: string, stack: Array<string>, errorChain: Array<{ __typename: 'ErrorChainLink', isExplicitLink: boolean, error: { __typename: 'PythonError', message: string, stack: Array<string> } }> } };

export type NextTickForHistoyFragment = { __typename: 'FutureInstigationTick', timestamp: number };

export type HistoryTickFragment = { __typename: 'InstigationTick', id: string, status: InstigationTickStatus, timestamp: number, cursor: string | null, skipReason: string | null, runIds: Array<string>, originRunIds: Array<string>, logKey: Array<string> | null, runKeys: Array<string>, runs: Array<{ __typename: 'Run', id: string, status: RunStatus, runId: string }>, error: { __typename: 'PythonError', message: string, stack: Array<string>, errorChain: Array<{ __typename: 'ErrorChainLink', isExplicitLink: boolean, error: { __typename: 'PythonError', message: string, stack: Array<string> } }> } | null };

export type UnloadableInstigationStatesQueryQueryVariables = Exact<{ [key: string]: never; }>;


export type UnloadableInstigationStatesQueryQuery = { __typename: 'DagitQuery', unloadableInstigationStatesOrError: { __typename: 'InstigationStates', results: Array<{ __typename: 'InstigationState', id: string, selectorId: string, name: string, instigationType: InstigationType, status: InstigationStatus, repositoryName: string, repositoryLocationName: string, runningCount: number, typeSpecificData: { __typename: 'ScheduleData', cronSchedule: string } | { __typename: 'SensorData', lastRunKey: string | null, lastCursor: string | null } | null, runs: Array<{ __typename: 'Run', id: string, runId: string, status: RunStatus, startTime: number | null, endTime: number | null, updateTime: number | null }>, ticks: Array<{ __typename: 'InstigationTick', id: string, cursor: string | null, status: InstigationTickStatus, timestamp: number, skipReason: string | null, runIds: Array<string>, runKeys: Array<string>, error: { __typename: 'PythonError', message: string, stack: Array<string>, errorChain: Array<{ __typename: 'ErrorChainLink', isExplicitLink: boolean, error: { __typename: 'PythonError', message: string, stack: Array<string> } }> } | null }> }> } | { __typename: 'PythonError', message: string, stack: Array<string>, errorChain: Array<{ __typename: 'ErrorChainLink', isExplicitLink: boolean, error: { __typename: 'PythonError', message: string, stack: Array<string> } }> } };

export type ConfigPartitionsQueryQueryVariables = Exact<{
  repositorySelector: RepositorySelector;
  partitionSetName: Scalars['String'];
}>;


export type ConfigPartitionsQueryQuery = { __typename: 'DagitQuery', partitionSetOrError: { __typename: 'PartitionSet', id: string, partitionsOrError: { __typename: 'Partitions', results: Array<{ __typename: 'Partition', name: string }> } | { __typename: 'PythonError', message: string, stack: Array<string>, errorChain: Array<{ __typename: 'ErrorChainLink', isExplicitLink: boolean, error: { __typename: 'PythonError', message: string, stack: Array<string> } }> } } | { __typename: 'PartitionSetNotFoundError' } | { __typename: 'PythonError' } };

export type ConfigPartitionResultFragment = { __typename: 'Partition', name: string };

export type ConfigPartitionSelectionQueryQueryVariables = Exact<{
  repositorySelector: RepositorySelector;
  partitionSetName: Scalars['String'];
  partitionName: Scalars['String'];
}>;


export type ConfigPartitionSelectionQueryQuery = { __typename: 'DagitQuery', partitionSetOrError: { __typename: 'PartitionSet', id: string, partition: { __typename: 'Partition', name: string, solidSelection: Array<string> | null, mode: string, runConfigOrError: { __typename: 'PartitionRunConfig', yaml: string } | { __typename: 'PythonError', message: string, stack: Array<string>, errorChain: Array<{ __typename: 'ErrorChainLink', isExplicitLink: boolean, error: { __typename: 'PythonError', message: string, stack: Array<string> } }> }, tagsOrError: { __typename: 'PartitionTags', results: Array<{ __typename: 'PipelineTag', key: string, value: string }> } | { __typename: 'PythonError', message: string, stack: Array<string>, errorChain: Array<{ __typename: 'ErrorChainLink', isExplicitLink: boolean, error: { __typename: 'PythonError', message: string, stack: Array<string> } }> } } | null } | { __typename: 'PartitionSetNotFoundError' } | { __typename: 'PythonError' } };

export type ConfigEditorGeneratorPipelineFragmentFragment = { __typename: 'Pipeline', id: string, isJob: boolean, name: string, presets: Array<{ __typename: 'PipelinePreset', name: string, mode: string, solidSelection: Array<string> | null, runConfigYaml: string, tags: Array<{ __typename: 'PipelineTag', key: string, value: string }> }>, tags: Array<{ __typename: 'PipelineTag', key: string, value: string }> };

export type ConfigEditorPipelinePresetFragment = { __typename: 'PipelinePreset', name: string, mode: string, solidSelection: Array<string> | null, runConfigYaml: string, tags: Array<{ __typename: 'PipelineTag', key: string, value: string }> };

export type ConfigEditorGeneratorPartitionSetsFragmentFragment = { __typename: 'PartitionSets', results: Array<{ __typename: 'PartitionSet', id: string, name: string, mode: string, solidSelection: Array<string> | null }> };

export type PartitionSetForConfigEditorFragment = { __typename: 'PartitionSet', id: string, name: string, mode: string, solidSelection: Array<string> | null };

export type LaunchpadRootQueryQueryVariables = Exact<{
  pipelineName: Scalars['String'];
  repositoryName: Scalars['String'];
  repositoryLocationName: Scalars['String'];
}>;


export type LaunchpadRootQueryQuery = { __typename: 'DagitQuery', pipelineOrError: { __typename: 'InvalidSubsetError' } | { __typename: 'Pipeline', id: string, isJob: boolean, isAssetJob: boolean, name: string, modes: Array<{ __typename: 'Mode', id: string, name: string, description: string | null }>, presets: Array<{ __typename: 'PipelinePreset', name: string, mode: string, solidSelection: Array<string> | null, runConfigYaml: string, tags: Array<{ __typename: 'PipelineTag', key: string, value: string }> }>, tags: Array<{ __typename: 'PipelineTag', key: string, value: string }> } | { __typename: 'PipelineNotFoundError', message: string } | { __typename: 'PythonError', message: string, stack: Array<string>, errorChain: Array<{ __typename: 'ErrorChainLink', isExplicitLink: boolean, error: { __typename: 'PythonError', message: string, stack: Array<string> } }> }, partitionSetsOrError: { __typename: 'PartitionSets', results: Array<{ __typename: 'PartitionSet', id: string, name: string, mode: string, solidSelection: Array<string> | null }> } | { __typename: 'PipelineNotFoundError', message: string } | { __typename: 'PythonError', message: string, stack: Array<string>, errorChain: Array<{ __typename: 'ErrorChainLink', isExplicitLink: boolean, error: { __typename: 'PythonError', message: string, stack: Array<string> } }> } };

export type LaunchpadSessionPartitionSetsFragmentFragment = { __typename: 'PartitionSets', results: Array<{ __typename: 'PartitionSet', id: string, name: string, mode: string, solidSelection: Array<string> | null }> };

export type LaunchpadSessionPipelineFragmentFragment = { __typename: 'Pipeline', id: string, isJob: boolean, isAssetJob: boolean, name: string, modes: Array<{ __typename: 'Mode', id: string, name: string, description: string | null }>, presets: Array<{ __typename: 'PipelinePreset', name: string, mode: string, solidSelection: Array<string> | null, runConfigYaml: string, tags: Array<{ __typename: 'PipelineTag', key: string, value: string }> }>, tags: Array<{ __typename: 'PipelineTag', key: string, value: string }> };

export type PreviewConfigQueryQueryVariables = Exact<{
  pipeline: PipelineSelector;
  runConfigData: Scalars['RunConfigData'];
  mode: Scalars['String'];
}>;


export type PreviewConfigQueryQuery = { __typename: 'DagitQuery', isPipelineConfigValid: { __typename: 'InvalidSubsetError', message: string } | { __typename: 'PipelineConfigValidationValid' } | { __typename: 'PipelineNotFoundError', message: string } | { __typename: 'PythonError', message: string, stack: Array<string>, errorChain: Array<{ __typename: 'ErrorChainLink', isExplicitLink: boolean, error: { __typename: 'PythonError', message: string, stack: Array<string> } }> } | { __typename: 'RunConfigValidationInvalid', errors: Array<{ __typename: 'FieldNotDefinedConfigError', reason: EvaluationErrorReason, message: string, fieldName: string, stack: { __typename: 'EvaluationStack', entries: Array<{ __typename: 'EvaluationStackListItemEntry', listIndex: number } | { __typename: 'EvaluationStackMapKeyEntry', mapKey: any } | { __typename: 'EvaluationStackMapValueEntry', mapKey: any } | { __typename: 'EvaluationStackPathEntry', fieldName: string }> } } | { __typename: 'FieldsNotDefinedConfigError', reason: EvaluationErrorReason, message: string, fieldNames: Array<string>, stack: { __typename: 'EvaluationStack', entries: Array<{ __typename: 'EvaluationStackListItemEntry', listIndex: number } | { __typename: 'EvaluationStackMapKeyEntry', mapKey: any } | { __typename: 'EvaluationStackMapValueEntry', mapKey: any } | { __typename: 'EvaluationStackPathEntry', fieldName: string }> } } | { __typename: 'MissingFieldConfigError', reason: EvaluationErrorReason, message: string, stack: { __typename: 'EvaluationStack', entries: Array<{ __typename: 'EvaluationStackListItemEntry', listIndex: number } | { __typename: 'EvaluationStackMapKeyEntry', mapKey: any } | { __typename: 'EvaluationStackMapValueEntry', mapKey: any } | { __typename: 'EvaluationStackPathEntry', fieldName: string }> }, field: { __typename: 'ConfigTypeField', name: string } } | { __typename: 'MissingFieldsConfigError', reason: EvaluationErrorReason, message: string, stack: { __typename: 'EvaluationStack', entries: Array<{ __typename: 'EvaluationStackListItemEntry', listIndex: number } | { __typename: 'EvaluationStackMapKeyEntry', mapKey: any } | { __typename: 'EvaluationStackMapValueEntry', mapKey: any } | { __typename: 'EvaluationStackPathEntry', fieldName: string }> }, fields: Array<{ __typename: 'ConfigTypeField', name: string }> } | { __typename: 'RuntimeMismatchConfigError', reason: EvaluationErrorReason, message: string, stack: { __typename: 'EvaluationStack', entries: Array<{ __typename: 'EvaluationStackListItemEntry', listIndex: number } | { __typename: 'EvaluationStackMapKeyEntry', mapKey: any } | { __typename: 'EvaluationStackMapValueEntry', mapKey: any } | { __typename: 'EvaluationStackPathEntry', fieldName: string }> } } | { __typename: 'SelectorTypeConfigError', reason: EvaluationErrorReason, message: string, stack: { __typename: 'EvaluationStack', entries: Array<{ __typename: 'EvaluationStackListItemEntry', listIndex: number } | { __typename: 'EvaluationStackMapKeyEntry', mapKey: any } | { __typename: 'EvaluationStackMapValueEntry', mapKey: any } | { __typename: 'EvaluationStackPathEntry', fieldName: string }> } }> } };

export type PipelineExecutionConfigSchemaQueryQueryVariables = Exact<{
  selector: PipelineSelector;
  mode?: InputMaybe<Scalars['String']>;
}>;


export type PipelineExecutionConfigSchemaQueryQuery = { __typename: 'DagitQuery', runConfigSchemaOrError: { __typename: 'InvalidSubsetError' } | { __typename: 'ModeNotFoundError', message: string } | { __typename: 'PipelineNotFoundError' } | { __typename: 'PythonError' } | { __typename: 'RunConfigSchema', rootConfigType: { __typename: 'ArrayConfigType', key: string } | { __typename: 'CompositeConfigType', key: string } | { __typename: 'EnumConfigType', key: string } | { __typename: 'MapConfigType', key: string } | { __typename: 'NullableConfigType', key: string } | { __typename: 'RegularConfigType', key: string } | { __typename: 'ScalarUnionConfigType', key: string }, allConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', key: string, scalarTypeKey: string, nonScalarTypeKey: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } };

type LaunchpadSessionRunConfigSchemaFragment_InvalidSubsetError_Fragment = { __typename: 'InvalidSubsetError' };

type LaunchpadSessionRunConfigSchemaFragment_ModeNotFoundError_Fragment = { __typename: 'ModeNotFoundError', message: string };

type LaunchpadSessionRunConfigSchemaFragment_PipelineNotFoundError_Fragment = { __typename: 'PipelineNotFoundError' };

type LaunchpadSessionRunConfigSchemaFragment_PythonError_Fragment = { __typename: 'PythonError' };

type LaunchpadSessionRunConfigSchemaFragment_RunConfigSchema_Fragment = { __typename: 'RunConfigSchema', rootConfigType: { __typename: 'ArrayConfigType', key: string } | { __typename: 'CompositeConfigType', key: string } | { __typename: 'EnumConfigType', key: string } | { __typename: 'MapConfigType', key: string } | { __typename: 'NullableConfigType', key: string } | { __typename: 'RegularConfigType', key: string } | { __typename: 'ScalarUnionConfigType', key: string }, allConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', key: string, scalarTypeKey: string, nonScalarTypeKey: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> };

export type LaunchpadSessionRunConfigSchemaFragmentFragment = LaunchpadSessionRunConfigSchemaFragment_InvalidSubsetError_Fragment | LaunchpadSessionRunConfigSchemaFragment_ModeNotFoundError_Fragment | LaunchpadSessionRunConfigSchemaFragment_PipelineNotFoundError_Fragment | LaunchpadSessionRunConfigSchemaFragment_PythonError_Fragment | LaunchpadSessionRunConfigSchemaFragment_RunConfigSchema_Fragment;

export type LaunchpadSessionModeNotFoundFragment = { __typename: 'ModeNotFoundError', message: string };

export type ConfigForRunQueryQueryVariables = Exact<{
  runId: Scalars['ID'];
}>;


export type ConfigForRunQueryQuery = { __typename: 'DagitQuery', runOrError: { __typename: 'PythonError', message: string, stack: Array<string>, errorChain: Array<{ __typename: 'ErrorChainLink', isExplicitLink: boolean, error: { __typename: 'PythonError', message: string, stack: Array<string> } }> } | { __typename: 'Run', id: string, mode: string, runConfigYaml: string, solidSelection: Array<string> | null } | { __typename: 'RunNotFoundError' } };

export type OpSelectorQueryQueryVariables = Exact<{
  selector: PipelineSelector;
  requestScopeHandleID?: InputMaybe<Scalars['String']>;
}>;


export type OpSelectorQueryQuery = { __typename: 'DagitQuery', pipelineOrError: { __typename: 'InvalidSubsetError', message: string } | { __typename: 'Pipeline', id: string, name: string, solidHandles: Array<{ __typename: 'SolidHandle', handleID: string, solid: { __typename: 'Solid', name: string, isDynamicMapped: boolean, definition: { __typename: 'CompositeSolidDefinition', name: string, id: string, description: string | null, inputMappings: Array<{ __typename: 'InputMapping', definition: { __typename: 'InputDefinition', name: string }, mappedInput: { __typename: 'Input', definition: { __typename: 'InputDefinition', name: string }, solid: { __typename: 'Solid', name: string } } }>, outputMappings: Array<{ __typename: 'OutputMapping', definition: { __typename: 'OutputDefinition', name: string }, mappedOutput: { __typename: 'Output', definition: { __typename: 'OutputDefinition', name: string }, solid: { __typename: 'Solid', name: string } } }>, metadata: Array<{ __typename: 'MetadataItemDefinition', key: string, value: string }>, assetNodes: Array<{ __typename: 'AssetNode', id: string, assetKey: { __typename: 'AssetKey', path: Array<string> } }>, inputDefinitions: Array<{ __typename: 'InputDefinition', name: string, type: { __typename: 'ListDagsterType', displayName: string } | { __typename: 'NullableDagsterType', displayName: string } | { __typename: 'RegularDagsterType', displayName: string } }>, outputDefinitions: Array<{ __typename: 'OutputDefinition', name: string, isDynamic: boolean | null, type: { __typename: 'ListDagsterType', displayName: string } | { __typename: 'NullableDagsterType', displayName: string } | { __typename: 'RegularDagsterType', displayName: string } }> } | { __typename: 'SolidDefinition', name: string, description: string | null, configField: { __typename: 'ConfigTypeField', configType: { __typename: 'ArrayConfigType', key: string, description: string | null } | { __typename: 'CompositeConfigType', key: string, description: string | null } | { __typename: 'EnumConfigType', key: string, description: string | null } | { __typename: 'MapConfigType', key: string, description: string | null } | { __typename: 'NullableConfigType', key: string, description: string | null } | { __typename: 'RegularConfigType', key: string, description: string | null } | { __typename: 'ScalarUnionConfigType', key: string, description: string | null } } | null, metadata: Array<{ __typename: 'MetadataItemDefinition', key: string, value: string }>, assetNodes: Array<{ __typename: 'AssetNode', id: string, assetKey: { __typename: 'AssetKey', path: Array<string> } }>, inputDefinitions: Array<{ __typename: 'InputDefinition', name: string, type: { __typename: 'ListDagsterType', displayName: string } | { __typename: 'NullableDagsterType', displayName: string } | { __typename: 'RegularDagsterType', displayName: string } }>, outputDefinitions: Array<{ __typename: 'OutputDefinition', name: string, isDynamic: boolean | null, type: { __typename: 'ListDagsterType', displayName: string } | { __typename: 'NullableDagsterType', displayName: string } | { __typename: 'RegularDagsterType', displayName: string } }> }, inputs: Array<{ __typename: 'Input', isDynamicCollect: boolean, definition: { __typename: 'InputDefinition', name: string }, dependsOn: Array<{ __typename: 'Output', definition: { __typename: 'OutputDefinition', name: string, type: { __typename: 'ListDagsterType', displayName: string } | { __typename: 'NullableDagsterType', displayName: string } | { __typename: 'RegularDagsterType', displayName: string } }, solid: { __typename: 'Solid', name: string } }> }>, outputs: Array<{ __typename: 'Output', definition: { __typename: 'OutputDefinition', name: string }, dependedBy: Array<{ __typename: 'Input', solid: { __typename: 'Solid', name: string }, definition: { __typename: 'InputDefinition', name: string, type: { __typename: 'ListDagsterType', displayName: string } | { __typename: 'NullableDagsterType', displayName: string } | { __typename: 'RegularDagsterType', displayName: string } } }> }> } }> } | { __typename: 'PipelineNotFoundError', message: string } | { __typename: 'PythonError', message: string, stack: Array<string>, errorChain: Array<{ __typename: 'ErrorChainLink', isExplicitLink: boolean, error: { __typename: 'PythonError', message: string, stack: Array<string> } }> } };

type RunPreviewValidationFragment_InvalidSubsetError_Fragment = { __typename: 'InvalidSubsetError', message: string };

type RunPreviewValidationFragment_PipelineConfigValidationValid_Fragment = { __typename: 'PipelineConfigValidationValid' };

type RunPreviewValidationFragment_PipelineNotFoundError_Fragment = { __typename: 'PipelineNotFoundError', message: string };

type RunPreviewValidationFragment_PythonError_Fragment = { __typename: 'PythonError', message: string, stack: Array<string>, errorChain: Array<{ __typename: 'ErrorChainLink', isExplicitLink: boolean, error: { __typename: 'PythonError', message: string, stack: Array<string> } }> };

type RunPreviewValidationFragment_RunConfigValidationInvalid_Fragment = { __typename: 'RunConfigValidationInvalid', errors: Array<{ __typename: 'FieldNotDefinedConfigError', fieldName: string, reason: EvaluationErrorReason, message: string, stack: { __typename: 'EvaluationStack', entries: Array<{ __typename: 'EvaluationStackListItemEntry', listIndex: number } | { __typename: 'EvaluationStackMapKeyEntry', mapKey: any } | { __typename: 'EvaluationStackMapValueEntry', mapKey: any } | { __typename: 'EvaluationStackPathEntry', fieldName: string }> } } | { __typename: 'FieldsNotDefinedConfigError', fieldNames: Array<string>, reason: EvaluationErrorReason, message: string, stack: { __typename: 'EvaluationStack', entries: Array<{ __typename: 'EvaluationStackListItemEntry', listIndex: number } | { __typename: 'EvaluationStackMapKeyEntry', mapKey: any } | { __typename: 'EvaluationStackMapValueEntry', mapKey: any } | { __typename: 'EvaluationStackPathEntry', fieldName: string }> } } | { __typename: 'MissingFieldConfigError', reason: EvaluationErrorReason, message: string, field: { __typename: 'ConfigTypeField', name: string }, stack: { __typename: 'EvaluationStack', entries: Array<{ __typename: 'EvaluationStackListItemEntry', listIndex: number } | { __typename: 'EvaluationStackMapKeyEntry', mapKey: any } | { __typename: 'EvaluationStackMapValueEntry', mapKey: any } | { __typename: 'EvaluationStackPathEntry', fieldName: string }> } } | { __typename: 'MissingFieldsConfigError', reason: EvaluationErrorReason, message: string, fields: Array<{ __typename: 'ConfigTypeField', name: string }>, stack: { __typename: 'EvaluationStack', entries: Array<{ __typename: 'EvaluationStackListItemEntry', listIndex: number } | { __typename: 'EvaluationStackMapKeyEntry', mapKey: any } | { __typename: 'EvaluationStackMapValueEntry', mapKey: any } | { __typename: 'EvaluationStackPathEntry', fieldName: string }> } } | { __typename: 'RuntimeMismatchConfigError', reason: EvaluationErrorReason, message: string, stack: { __typename: 'EvaluationStack', entries: Array<{ __typename: 'EvaluationStackListItemEntry', listIndex: number } | { __typename: 'EvaluationStackMapKeyEntry', mapKey: any } | { __typename: 'EvaluationStackMapValueEntry', mapKey: any } | { __typename: 'EvaluationStackPathEntry', fieldName: string }> } } | { __typename: 'SelectorTypeConfigError', reason: EvaluationErrorReason, message: string, stack: { __typename: 'EvaluationStack', entries: Array<{ __typename: 'EvaluationStackListItemEntry', listIndex: number } | { __typename: 'EvaluationStackMapKeyEntry', mapKey: any } | { __typename: 'EvaluationStackMapValueEntry', mapKey: any } | { __typename: 'EvaluationStackPathEntry', fieldName: string }> } }> };

export type RunPreviewValidationFragmentFragment = RunPreviewValidationFragment_InvalidSubsetError_Fragment | RunPreviewValidationFragment_PipelineConfigValidationValid_Fragment | RunPreviewValidationFragment_PipelineNotFoundError_Fragment | RunPreviewValidationFragment_PythonError_Fragment | RunPreviewValidationFragment_RunConfigValidationInvalid_Fragment;

type RunPreviewValidationErrors_FieldNotDefinedConfigError_Fragment = { __typename: 'FieldNotDefinedConfigError', fieldName: string, reason: EvaluationErrorReason, message: string, stack: { __typename: 'EvaluationStack', entries: Array<{ __typename: 'EvaluationStackListItemEntry', listIndex: number } | { __typename: 'EvaluationStackMapKeyEntry', mapKey: any } | { __typename: 'EvaluationStackMapValueEntry', mapKey: any } | { __typename: 'EvaluationStackPathEntry', fieldName: string }> } };

type RunPreviewValidationErrors_FieldsNotDefinedConfigError_Fragment = { __typename: 'FieldsNotDefinedConfigError', fieldNames: Array<string>, reason: EvaluationErrorReason, message: string, stack: { __typename: 'EvaluationStack', entries: Array<{ __typename: 'EvaluationStackListItemEntry', listIndex: number } | { __typename: 'EvaluationStackMapKeyEntry', mapKey: any } | { __typename: 'EvaluationStackMapValueEntry', mapKey: any } | { __typename: 'EvaluationStackPathEntry', fieldName: string }> } };

type RunPreviewValidationErrors_MissingFieldConfigError_Fragment = { __typename: 'MissingFieldConfigError', reason: EvaluationErrorReason, message: string, field: { __typename: 'ConfigTypeField', name: string }, stack: { __typename: 'EvaluationStack', entries: Array<{ __typename: 'EvaluationStackListItemEntry', listIndex: number } | { __typename: 'EvaluationStackMapKeyEntry', mapKey: any } | { __typename: 'EvaluationStackMapValueEntry', mapKey: any } | { __typename: 'EvaluationStackPathEntry', fieldName: string }> } };

type RunPreviewValidationErrors_MissingFieldsConfigError_Fragment = { __typename: 'MissingFieldsConfigError', reason: EvaluationErrorReason, message: string, fields: Array<{ __typename: 'ConfigTypeField', name: string }>, stack: { __typename: 'EvaluationStack', entries: Array<{ __typename: 'EvaluationStackListItemEntry', listIndex: number } | { __typename: 'EvaluationStackMapKeyEntry', mapKey: any } | { __typename: 'EvaluationStackMapValueEntry', mapKey: any } | { __typename: 'EvaluationStackPathEntry', fieldName: string }> } };

type RunPreviewValidationErrors_RuntimeMismatchConfigError_Fragment = { __typename: 'RuntimeMismatchConfigError', reason: EvaluationErrorReason, message: string, stack: { __typename: 'EvaluationStack', entries: Array<{ __typename: 'EvaluationStackListItemEntry', listIndex: number } | { __typename: 'EvaluationStackMapKeyEntry', mapKey: any } | { __typename: 'EvaluationStackMapValueEntry', mapKey: any } | { __typename: 'EvaluationStackPathEntry', fieldName: string }> } };

type RunPreviewValidationErrors_SelectorTypeConfigError_Fragment = { __typename: 'SelectorTypeConfigError', reason: EvaluationErrorReason, message: string, stack: { __typename: 'EvaluationStack', entries: Array<{ __typename: 'EvaluationStackListItemEntry', listIndex: number } | { __typename: 'EvaluationStackMapKeyEntry', mapKey: any } | { __typename: 'EvaluationStackMapValueEntry', mapKey: any } | { __typename: 'EvaluationStackPathEntry', fieldName: string }> } };

export type RunPreviewValidationErrorsFragment = RunPreviewValidationErrors_FieldNotDefinedConfigError_Fragment | RunPreviewValidationErrors_FieldsNotDefinedConfigError_Fragment | RunPreviewValidationErrors_MissingFieldConfigError_Fragment | RunPreviewValidationErrors_MissingFieldsConfigError_Fragment | RunPreviewValidationErrors_RuntimeMismatchConfigError_Fragment | RunPreviewValidationErrors_SelectorTypeConfigError_Fragment;

type MetadataEntryFragment_AssetMetadataEntry_Fragment = { __typename: 'AssetMetadataEntry', label: string, description: string | null, assetKey: { __typename: 'AssetKey', path: Array<string> } };

type MetadataEntryFragment_BoolMetadataEntry_Fragment = { __typename: 'BoolMetadataEntry', boolValue: boolean | null, label: string, description: string | null };

type MetadataEntryFragment_FloatMetadataEntry_Fragment = { __typename: 'FloatMetadataEntry', floatValue: number | null, label: string, description: string | null };

type MetadataEntryFragment_IntMetadataEntry_Fragment = { __typename: 'IntMetadataEntry', intValue: number | null, intRepr: string, label: string, description: string | null };

type MetadataEntryFragment_JsonMetadataEntry_Fragment = { __typename: 'JsonMetadataEntry', jsonString: string, label: string, description: string | null };

type MetadataEntryFragment_MarkdownMetadataEntry_Fragment = { __typename: 'MarkdownMetadataEntry', mdStr: string, label: string, description: string | null };

type MetadataEntryFragment_NotebookMetadataEntry_Fragment = { __typename: 'NotebookMetadataEntry', path: string, label: string, description: string | null };

type MetadataEntryFragment_NullMetadataEntry_Fragment = { __typename: 'NullMetadataEntry', label: string, description: string | null };

type MetadataEntryFragment_PathMetadataEntry_Fragment = { __typename: 'PathMetadataEntry', path: string, label: string, description: string | null };

type MetadataEntryFragment_PipelineRunMetadataEntry_Fragment = { __typename: 'PipelineRunMetadataEntry', runId: string, label: string, description: string | null };

type MetadataEntryFragment_PythonArtifactMetadataEntry_Fragment = { __typename: 'PythonArtifactMetadataEntry', module: string, name: string, label: string, description: string | null };

type MetadataEntryFragment_TableMetadataEntry_Fragment = { __typename: 'TableMetadataEntry', label: string, description: string | null, table: { __typename: 'Table', records: Array<string>, schema: { __typename: 'TableSchema', columns: Array<{ __typename: 'TableColumn', name: string, description: string | null, type: string, constraints: { __typename: 'TableColumnConstraints', nullable: boolean, unique: boolean, other: Array<string> } }>, constraints: { __typename: 'TableConstraints', other: Array<string> } | null } } };

type MetadataEntryFragment_TableSchemaMetadataEntry_Fragment = { __typename: 'TableSchemaMetadataEntry', label: string, description: string | null, schema: { __typename: 'TableSchema', columns: Array<{ __typename: 'TableColumn', name: string, description: string | null, type: string, constraints: { __typename: 'TableColumnConstraints', nullable: boolean, unique: boolean, other: Array<string> } }>, constraints: { __typename: 'TableConstraints', other: Array<string> } | null } };

type MetadataEntryFragment_TextMetadataEntry_Fragment = { __typename: 'TextMetadataEntry', text: string, label: string, description: string | null };

type MetadataEntryFragment_UrlMetadataEntry_Fragment = { __typename: 'UrlMetadataEntry', url: string, label: string, description: string | null };

export type MetadataEntryFragmentFragment = MetadataEntryFragment_AssetMetadataEntry_Fragment | MetadataEntryFragment_BoolMetadataEntry_Fragment | MetadataEntryFragment_FloatMetadataEntry_Fragment | MetadataEntryFragment_IntMetadataEntry_Fragment | MetadataEntryFragment_JsonMetadataEntry_Fragment | MetadataEntryFragment_MarkdownMetadataEntry_Fragment | MetadataEntryFragment_NotebookMetadataEntry_Fragment | MetadataEntryFragment_NullMetadataEntry_Fragment | MetadataEntryFragment_PathMetadataEntry_Fragment | MetadataEntryFragment_PipelineRunMetadataEntry_Fragment | MetadataEntryFragment_PythonArtifactMetadataEntry_Fragment | MetadataEntryFragment_TableMetadataEntry_Fragment | MetadataEntryFragment_TableSchemaMetadataEntry_Fragment | MetadataEntryFragment_TextMetadataEntry_Fragment | MetadataEntryFragment_UrlMetadataEntry_Fragment;

export type TableSchemaForMetadataEntryFragment = { __typename: 'TableSchemaMetadataEntry', schema: { __typename: 'TableSchema', columns: Array<{ __typename: 'TableColumn', name: string, description: string | null, type: string, constraints: { __typename: 'TableColumnConstraints', nullable: boolean, unique: boolean, other: Array<string> } }>, constraints: { __typename: 'TableConstraints', other: Array<string> } | null } };

export type TableSchemaFragmentFragment = { __typename: 'TableSchema', columns: Array<{ __typename: 'TableColumn', name: string, description: string | null, type: string, constraints: { __typename: 'TableColumnConstraints', nullable: boolean, unique: boolean, other: Array<string> } }>, constraints: { __typename: 'TableConstraints', other: Array<string> } | null };

export type ConstraintsForTableColumnFragment = { __typename: 'TableColumnConstraints', nullable: boolean, unique: boolean, other: Array<string> };

export type JobMetadataQueryQueryVariables = Exact<{
  params: PipelineSelector;
  runsFilter: RunsFilter;
}>;


export type JobMetadataQueryQuery = { __typename: 'DagitQuery', pipelineOrError: { __typename: 'InvalidSubsetError' } | { __typename: 'Pipeline', id: string, isJob: boolean, name: string, schedules: Array<{ __typename: 'Schedule', id: string, mode: string, name: string, cronSchedule: string, executionTimezone: string | null, scheduleState: { __typename: 'InstigationState', id: string, selectorId: string, status: InstigationStatus } }>, sensors: Array<{ __typename: 'Sensor', id: string, jobOriginId: string, name: string, targets: Array<{ __typename: 'Target', pipelineName: string, mode: string }> | null, sensorState: { __typename: 'InstigationState', id: string, selectorId: string, status: InstigationStatus } }> } | { __typename: 'PipelineNotFoundError' } | { __typename: 'PythonError' }, assetNodes: Array<{ __typename: 'AssetNode', id: string, assetKey: { __typename: 'AssetKey', path: Array<string> } }>, pipelineRunsOrError: { __typename: 'InvalidPipelineRunsFilterError' } | { __typename: 'PythonError' } | { __typename: 'Runs', results: Array<{ __typename: 'Run', id: string, status: RunStatus, runId: string, startTime: number | null, endTime: number | null, updateTime: number | null, assets: Array<{ __typename: 'Asset', id: string, key: { __typename: 'AssetKey', path: Array<string> } }> }> } };

export type JobMetadataAssetNodeFragment = { __typename: 'AssetNode', id: string, assetKey: { __typename: 'AssetKey', path: Array<string> } };

export type JobMetadataFragmentFragment = { __typename: 'Pipeline', id: string, isJob: boolean, name: string, schedules: Array<{ __typename: 'Schedule', id: string, mode: string, name: string, cronSchedule: string, executionTimezone: string | null, scheduleState: { __typename: 'InstigationState', id: string, selectorId: string, status: InstigationStatus } }>, sensors: Array<{ __typename: 'Sensor', id: string, jobOriginId: string, name: string, targets: Array<{ __typename: 'Target', pipelineName: string, mode: string }> | null, sensorState: { __typename: 'InstigationState', id: string, selectorId: string, status: InstigationStatus } }> };

export type RunMetadataFragmentFragment = { __typename: 'Run', id: string, status: RunStatus, runId: string, startTime: number | null, endTime: number | null, updateTime: number | null, assets: Array<{ __typename: 'Asset', id: string, key: { __typename: 'AssetKey', path: Array<string> } }> };

export type LatestRunTagQueryQueryVariables = Exact<{
  runsFilter?: InputMaybe<RunsFilter>;
}>;


export type LatestRunTagQueryQuery = { __typename: 'DagitQuery', pipelineRunsOrError: { __typename: 'InvalidPipelineRunsFilterError' } | { __typename: 'PythonError' } | { __typename: 'Runs', results: Array<{ __typename: 'Run', id: string, status: RunStatus, runId: string, startTime: number | null, endTime: number | null, updateTime: number | null }> } };

export type LocationStateChangeSubscriptionSubscriptionVariables = Exact<{ [key: string]: never; }>;


export type LocationStateChangeSubscriptionSubscription = { __typename: 'DagitSubscription', locationStateChangeEvents: { __typename: 'LocationStateChangeSubscription', event: { __typename: 'LocationStateChangeEvent', message: string, locationName: string, eventType: LocationStateChangeEventType, serverId: string | null } } };

export type VersionNumberQueryQueryVariables = Exact<{ [key: string]: never; }>;


export type VersionNumberQueryQuery = { __typename: 'DagitQuery', version: string };

export type CodeLocationStatusQueryQueryVariables = Exact<{ [key: string]: never; }>;


export type CodeLocationStatusQueryQuery = { __typename: 'DagitQuery', locationStatusesOrError: { __typename: 'PythonError' } | { __typename: 'WorkspaceLocationStatusEntries', entries: Array<{ __typename: 'WorkspaceLocationStatusEntry', id: string, name: string, loadStatus: RepositoryLocationLoadStatus, updateTimestamp: number }> } };

export type RepositoryLocationStatusQueryQueryVariables = Exact<{ [key: string]: never; }>;


export type RepositoryLocationStatusQueryQuery = { __typename: 'DagitQuery', workspaceOrError: { __typename: 'PythonError', message: string, stack: Array<string>, errorChain: Array<{ __typename: 'ErrorChainLink', isExplicitLink: boolean, error: { __typename: 'PythonError', message: string, stack: Array<string> } }> } | { __typename: 'Workspace', locationEntries: Array<{ __typename: 'WorkspaceLocationEntry', id: string, loadStatus: RepositoryLocationLoadStatus, locationOrLoadError: { __typename: 'PythonError', message: string, stack: Array<string>, errorChain: Array<{ __typename: 'ErrorChainLink', isExplicitLink: boolean, error: { __typename: 'PythonError', message: string, stack: Array<string> } }> } | { __typename: 'RepositoryLocation', id: string, repositories: Array<{ __typename: 'Repository', id: string, name: string, pipelines: Array<{ __typename: 'Pipeline', id: string, name: string }> }> } | null }> } };

export type ReloadWorkspaceMutationMutationVariables = Exact<{ [key: string]: never; }>;


export type ReloadWorkspaceMutationMutation = { __typename: 'DagitMutation', reloadWorkspace: { __typename: 'PythonError', message: string, stack: Array<string>, errorChain: Array<{ __typename: 'ErrorChainLink', isExplicitLink: boolean, error: { __typename: 'PythonError', message: string, stack: Array<string> } }> } | { __typename: 'UnauthorizedError', message: string } | { __typename: 'Workspace', locationEntries: Array<{ __typename: 'WorkspaceLocationEntry', name: string, id: string, loadStatus: RepositoryLocationLoadStatus, locationOrLoadError: { __typename: 'PythonError', message: string, stack: Array<string>, errorChain: Array<{ __typename: 'ErrorChainLink', isExplicitLink: boolean, error: { __typename: 'PythonError', message: string, stack: Array<string> } }> } | { __typename: 'RepositoryLocation', id: string, repositories: Array<{ __typename: 'Repository', id: string, name: string, pipelines: Array<{ __typename: 'Pipeline', id: string, name: string }> }> } | null }> } };

export type ReloadRepositoryLocationMutationMutationVariables = Exact<{
  location: Scalars['String'];
}>;


export type ReloadRepositoryLocationMutationMutation = { __typename: 'DagitMutation', reloadRepositoryLocation: { __typename: 'PythonError', message: string, stack: Array<string>, errorChain: Array<{ __typename: 'ErrorChainLink', isExplicitLink: boolean, error: { __typename: 'PythonError', message: string, stack: Array<string> } }> } | { __typename: 'ReloadNotSupported', message: string } | { __typename: 'RepositoryLocationNotFound', message: string } | { __typename: 'UnauthorizedError', message: string } | { __typename: 'WorkspaceLocationEntry', id: string } };

type OpCardSolidDefinitionFragment_CompositeSolidDefinition_Fragment = { __typename: 'CompositeSolidDefinition', name: string, description: string | null, id: string, metadata: Array<{ __typename: 'MetadataItemDefinition', key: string, value: string }>, inputDefinitions: Array<{ __typename: 'InputDefinition', name: string, type: { __typename: 'ListDagsterType', displayName: string } | { __typename: 'NullableDagsterType', displayName: string } | { __typename: 'RegularDagsterType', displayName: string } }>, outputDefinitions: Array<{ __typename: 'OutputDefinition', name: string, isDynamic: boolean | null, type: { __typename: 'ListDagsterType', displayName: string } | { __typename: 'NullableDagsterType', displayName: string } | { __typename: 'RegularDagsterType', displayName: string } }>, inputMappings: Array<{ __typename: 'InputMapping', definition: { __typename: 'InputDefinition', name: string }, mappedInput: { __typename: 'Input', definition: { __typename: 'InputDefinition', name: string }, solid: { __typename: 'Solid', name: string } } }>, outputMappings: Array<{ __typename: 'OutputMapping', definition: { __typename: 'OutputDefinition', name: string }, mappedOutput: { __typename: 'Output', definition: { __typename: 'OutputDefinition', name: string }, solid: { __typename: 'Solid', name: string } } }>, assetNodes: Array<{ __typename: 'AssetNode', id: string, assetKey: { __typename: 'AssetKey', path: Array<string> } }> };

type OpCardSolidDefinitionFragment_SolidDefinition_Fragment = { __typename: 'SolidDefinition', name: string, description: string | null, metadata: Array<{ __typename: 'MetadataItemDefinition', key: string, value: string }>, inputDefinitions: Array<{ __typename: 'InputDefinition', name: string, type: { __typename: 'ListDagsterType', displayName: string } | { __typename: 'NullableDagsterType', displayName: string } | { __typename: 'RegularDagsterType', displayName: string } }>, outputDefinitions: Array<{ __typename: 'OutputDefinition', name: string, isDynamic: boolean | null, type: { __typename: 'ListDagsterType', displayName: string } | { __typename: 'NullableDagsterType', displayName: string } | { __typename: 'RegularDagsterType', displayName: string } }>, configField: { __typename: 'ConfigTypeField', configType: { __typename: 'ArrayConfigType', key: string, description: string | null } | { __typename: 'CompositeConfigType', key: string, description: string | null } | { __typename: 'EnumConfigType', key: string, description: string | null } | { __typename: 'MapConfigType', key: string, description: string | null } | { __typename: 'NullableConfigType', key: string, description: string | null } | { __typename: 'RegularConfigType', key: string, description: string | null } | { __typename: 'ScalarUnionConfigType', key: string, description: string | null } } | null, assetNodes: Array<{ __typename: 'AssetNode', id: string, assetKey: { __typename: 'AssetKey', path: Array<string> } }> };

export type OpCardSolidDefinitionFragmentFragment = OpCardSolidDefinitionFragment_CompositeSolidDefinition_Fragment | OpCardSolidDefinitionFragment_SolidDefinition_Fragment;

export type UsedSolidDetailsQueryQueryVariables = Exact<{
  name: Scalars['String'];
  repositorySelector: RepositorySelector;
}>;


export type UsedSolidDetailsQueryQuery = { __typename: 'DagitQuery', repositoryOrError: { __typename: 'PythonError' } | { __typename: 'Repository', id: string, usedSolid: { __typename: 'UsedSolid', definition: { __typename: 'CompositeSolidDefinition', name: string, description: string | null, id: string, metadata: Array<{ __typename: 'MetadataItemDefinition', key: string, value: string }>, inputDefinitions: Array<{ __typename: 'InputDefinition', name: string, description: string | null, type: { __typename: 'ListDagsterType', displayName: string, name: string | null, description: string | null } | { __typename: 'NullableDagsterType', displayName: string, name: string | null, description: string | null } | { __typename: 'RegularDagsterType', displayName: string, name: string | null, description: string | null } }>, outputDefinitions: Array<{ __typename: 'OutputDefinition', name: string, description: string | null, isDynamic: boolean | null, type: { __typename: 'ListDagsterType', displayName: string, name: string | null, description: string | null } | { __typename: 'NullableDagsterType', displayName: string, name: string | null, description: string | null } | { __typename: 'RegularDagsterType', displayName: string, name: string | null, description: string | null } }>, inputMappings: Array<{ __typename: 'InputMapping', definition: { __typename: 'InputDefinition', name: string }, mappedInput: { __typename: 'Input', definition: { __typename: 'InputDefinition', name: string }, solid: { __typename: 'Solid', name: string } } }>, outputMappings: Array<{ __typename: 'OutputMapping', definition: { __typename: 'OutputDefinition', name: string }, mappedOutput: { __typename: 'Output', definition: { __typename: 'OutputDefinition', name: string }, solid: { __typename: 'Solid', name: string } } }>, assetNodes: Array<{ __typename: 'AssetNode', id: string, assetKey: { __typename: 'AssetKey', path: Array<string> } }> } | { __typename: 'SolidDefinition', name: string, description: string | null, metadata: Array<{ __typename: 'MetadataItemDefinition', key: string, value: string }>, inputDefinitions: Array<{ __typename: 'InputDefinition', name: string, description: string | null, type: { __typename: 'ListDagsterType', displayName: string, name: string | null, description: string | null } | { __typename: 'NullableDagsterType', displayName: string, name: string | null, description: string | null } | { __typename: 'RegularDagsterType', displayName: string, name: string | null, description: string | null } }>, outputDefinitions: Array<{ __typename: 'OutputDefinition', name: string, description: string | null, isDynamic: boolean | null, type: { __typename: 'ListDagsterType', displayName: string, name: string | null, description: string | null } | { __typename: 'NullableDagsterType', displayName: string, name: string | null, description: string | null } | { __typename: 'RegularDagsterType', displayName: string, name: string | null, description: string | null } }>, requiredResources: Array<{ __typename: 'ResourceRequirement', resourceKey: string }>, configField: { __typename: 'ConfigTypeField', configType: { __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', key: string, description: string | null, givenName: string, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', key: string, description: string | null, keyLabelName: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'RegularConfigType', key: string, description: string | null, givenName: string, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'ScalarUnionConfigType', key: string, description: string | null, scalarTypeKey: string, nonScalarTypeKey: string, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } } | null, assetNodes: Array<{ __typename: 'AssetNode', id: string, assetKey: { __typename: 'AssetKey', path: Array<string> } }> }, invocations: Array<{ __typename: 'NodeInvocationSite', pipeline: { __typename: 'Pipeline', id: string, name: string }, solidHandle: { __typename: 'SolidHandle', handleID: string } }> } | null } | { __typename: 'RepositoryNotFoundError' } };

type OpTypeSignatureFragment_CompositeSolidDefinition_Fragment = { __typename: 'CompositeSolidDefinition', outputDefinitions: Array<{ __typename: 'OutputDefinition', name: string, type: { __typename: 'ListDagsterType', name: string | null, displayName: string, description: string | null } | { __typename: 'NullableDagsterType', name: string | null, displayName: string, description: string | null } | { __typename: 'RegularDagsterType', name: string | null, displayName: string, description: string | null } }>, inputDefinitions: Array<{ __typename: 'InputDefinition', name: string, type: { __typename: 'ListDagsterType', name: string | null, displayName: string, description: string | null } | { __typename: 'NullableDagsterType', name: string | null, displayName: string, description: string | null } | { __typename: 'RegularDagsterType', name: string | null, displayName: string, description: string | null } }> };

type OpTypeSignatureFragment_SolidDefinition_Fragment = { __typename: 'SolidDefinition', outputDefinitions: Array<{ __typename: 'OutputDefinition', name: string, type: { __typename: 'ListDagsterType', name: string | null, displayName: string, description: string | null } | { __typename: 'NullableDagsterType', name: string | null, displayName: string, description: string | null } | { __typename: 'RegularDagsterType', name: string | null, displayName: string, description: string | null } }>, inputDefinitions: Array<{ __typename: 'InputDefinition', name: string, type: { __typename: 'ListDagsterType', name: string | null, displayName: string, description: string | null } | { __typename: 'NullableDagsterType', name: string | null, displayName: string, description: string | null } | { __typename: 'RegularDagsterType', name: string | null, displayName: string, description: string | null } }> };

export type OpTypeSignatureFragmentFragment = OpTypeSignatureFragment_CompositeSolidDefinition_Fragment | OpTypeSignatureFragment_SolidDefinition_Fragment;

export type OpsRootQueryQueryVariables = Exact<{
  repositorySelector: RepositorySelector;
}>;


export type OpsRootQueryQuery = { __typename: 'DagitQuery', repositoryOrError: { __typename: 'PythonError' } | { __typename: 'Repository', id: string, usedSolids: Array<{ __typename: 'UsedSolid', definition: { __typename: 'CompositeSolidDefinition', name: string, outputDefinitions: Array<{ __typename: 'OutputDefinition', name: string, type: { __typename: 'ListDagsterType', name: string | null, displayName: string, description: string | null } | { __typename: 'NullableDagsterType', name: string | null, displayName: string, description: string | null } | { __typename: 'RegularDagsterType', name: string | null, displayName: string, description: string | null } }>, inputDefinitions: Array<{ __typename: 'InputDefinition', name: string, type: { __typename: 'ListDagsterType', name: string | null, displayName: string, description: string | null } | { __typename: 'NullableDagsterType', name: string | null, displayName: string, description: string | null } | { __typename: 'RegularDagsterType', name: string | null, displayName: string, description: string | null } }> } | { __typename: 'SolidDefinition', name: string, outputDefinitions: Array<{ __typename: 'OutputDefinition', name: string, type: { __typename: 'ListDagsterType', name: string | null, displayName: string, description: string | null } | { __typename: 'NullableDagsterType', name: string | null, displayName: string, description: string | null } | { __typename: 'RegularDagsterType', name: string | null, displayName: string, description: string | null } }>, inputDefinitions: Array<{ __typename: 'InputDefinition', name: string, type: { __typename: 'ListDagsterType', name: string | null, displayName: string, description: string | null } | { __typename: 'NullableDagsterType', name: string | null, displayName: string, description: string | null } | { __typename: 'RegularDagsterType', name: string | null, displayName: string, description: string | null } }> }, invocations: Array<{ __typename: 'NodeInvocationSite', pipeline: { __typename: 'Pipeline', id: string, isJob: boolean, name: string } }> }> } | { __typename: 'RepositoryNotFoundError' } };

export type OpsRootUsedSolidFragment = { __typename: 'UsedSolid', definition: { __typename: 'CompositeSolidDefinition', name: string, outputDefinitions: Array<{ __typename: 'OutputDefinition', name: string, type: { __typename: 'ListDagsterType', name: string | null, displayName: string, description: string | null } | { __typename: 'NullableDagsterType', name: string | null, displayName: string, description: string | null } | { __typename: 'RegularDagsterType', name: string | null, displayName: string, description: string | null } }>, inputDefinitions: Array<{ __typename: 'InputDefinition', name: string, type: { __typename: 'ListDagsterType', name: string | null, displayName: string, description: string | null } | { __typename: 'NullableDagsterType', name: string | null, displayName: string, description: string | null } | { __typename: 'RegularDagsterType', name: string | null, displayName: string, description: string | null } }> } | { __typename: 'SolidDefinition', name: string, outputDefinitions: Array<{ __typename: 'OutputDefinition', name: string, type: { __typename: 'ListDagsterType', name: string | null, displayName: string, description: string | null } | { __typename: 'NullableDagsterType', name: string | null, displayName: string, description: string | null } | { __typename: 'RegularDagsterType', name: string | null, displayName: string, description: string | null } }>, inputDefinitions: Array<{ __typename: 'InputDefinition', name: string, type: { __typename: 'ListDagsterType', name: string | null, displayName: string, description: string | null } | { __typename: 'NullableDagsterType', name: string | null, displayName: string, description: string | null } | { __typename: 'RegularDagsterType', name: string | null, displayName: string, description: string | null } }> }, invocations: Array<{ __typename: 'NodeInvocationSite', pipeline: { __typename: 'Pipeline', id: string, isJob: boolean, name: string } }> };

export type OverviewJobsQueryQueryVariables = Exact<{ [key: string]: never; }>;


export type OverviewJobsQueryQuery = { __typename: 'DagitQuery', workspaceOrError: { __typename: 'PythonError', message: string, stack: Array<string>, errorChain: Array<{ __typename: 'ErrorChainLink', isExplicitLink: boolean, error: { __typename: 'PythonError', message: string, stack: Array<string> } }> } | { __typename: 'Workspace', locationEntries: Array<{ __typename: 'WorkspaceLocationEntry', id: string, locationOrLoadError: { __typename: 'PythonError', message: string, stack: Array<string>, errorChain: Array<{ __typename: 'ErrorChainLink', isExplicitLink: boolean, error: { __typename: 'PythonError', message: string, stack: Array<string> } }> } | { __typename: 'RepositoryLocation', id: string, name: string, repositories: Array<{ __typename: 'Repository', id: string, name: string, pipelines: Array<{ __typename: 'Pipeline', id: string, name: string, isJob: boolean }> }> } | null }> } };

export type OverviewSchedulesQueryQueryVariables = Exact<{ [key: string]: never; }>;


export type OverviewSchedulesQueryQuery = { __typename: 'DagitQuery', workspaceOrError: { __typename: 'PythonError', message: string, stack: Array<string>, errorChain: Array<{ __typename: 'ErrorChainLink', isExplicitLink: boolean, error: { __typename: 'PythonError', message: string, stack: Array<string> } }> } | { __typename: 'Workspace', locationEntries: Array<{ __typename: 'WorkspaceLocationEntry', id: string, locationOrLoadError: { __typename: 'PythonError', message: string, stack: Array<string>, errorChain: Array<{ __typename: 'ErrorChainLink', isExplicitLink: boolean, error: { __typename: 'PythonError', message: string, stack: Array<string> } }> } | { __typename: 'RepositoryLocation', id: string, name: string, repositories: Array<{ __typename: 'Repository', id: string, name: string, schedules: Array<{ __typename: 'Schedule', id: string, name: string, description: string | null }> }> } | null }> }, unloadableInstigationStatesOrError: { __typename: 'InstigationStates', results: Array<{ __typename: 'InstigationState', id: string }> } | { __typename: 'PythonError' }, instance: { __typename: 'Instance', hasInfo: boolean, daemonHealth: { __typename: 'DaemonHealth', id: string, allDaemonStatuses: Array<{ __typename: 'DaemonStatus', id: string, daemonType: string, required: boolean, healthy: boolean | null, lastHeartbeatTime: number | null, lastHeartbeatErrors: Array<{ __typename: 'PythonError', message: string, stack: Array<string>, errorChain: Array<{ __typename: 'ErrorChainLink', isExplicitLink: boolean, error: { __typename: 'PythonError', message: string, stack: Array<string> } }> }> }> } } };

export type UnloadableSchedulesQueryQueryVariables = Exact<{ [key: string]: never; }>;


export type UnloadableSchedulesQueryQuery = { __typename: 'DagitQuery', unloadableInstigationStatesOrError: { __typename: 'InstigationStates', results: Array<{ __typename: 'InstigationState', id: string, selectorId: string, name: string, instigationType: InstigationType, status: InstigationStatus, repositoryName: string, repositoryLocationName: string, runningCount: number, typeSpecificData: { __typename: 'ScheduleData', cronSchedule: string } | { __typename: 'SensorData', lastRunKey: string | null, lastCursor: string | null } | null, runs: Array<{ __typename: 'Run', id: string, runId: string, status: RunStatus, startTime: number | null, endTime: number | null, updateTime: number | null }>, ticks: Array<{ __typename: 'InstigationTick', id: string, cursor: string | null, status: InstigationTickStatus, timestamp: number, skipReason: string | null, runIds: Array<string>, runKeys: Array<string>, error: { __typename: 'PythonError', message: string, stack: Array<string>, errorChain: Array<{ __typename: 'ErrorChainLink', isExplicitLink: boolean, error: { __typename: 'PythonError', message: string, stack: Array<string> } }> } | null }> }> } | { __typename: 'PythonError', message: string, stack: Array<string>, errorChain: Array<{ __typename: 'ErrorChainLink', isExplicitLink: boolean, error: { __typename: 'PythonError', message: string, stack: Array<string> } }> } };

export type OverviewSensorsQueryQueryVariables = Exact<{ [key: string]: never; }>;


export type OverviewSensorsQueryQuery = { __typename: 'DagitQuery', workspaceOrError: { __typename: 'PythonError', message: string, stack: Array<string>, errorChain: Array<{ __typename: 'ErrorChainLink', isExplicitLink: boolean, error: { __typename: 'PythonError', message: string, stack: Array<string> } }> } | { __typename: 'Workspace', locationEntries: Array<{ __typename: 'WorkspaceLocationEntry', id: string, locationOrLoadError: { __typename: 'PythonError', message: string, stack: Array<string>, errorChain: Array<{ __typename: 'ErrorChainLink', isExplicitLink: boolean, error: { __typename: 'PythonError', message: string, stack: Array<string> } }> } | { __typename: 'RepositoryLocation', id: string, name: string, repositories: Array<{ __typename: 'Repository', id: string, name: string, sensors: Array<{ __typename: 'Sensor', id: string, name: string, description: string | null }> }> } | null }> }, unloadableInstigationStatesOrError: { __typename: 'InstigationStates', results: Array<{ __typename: 'InstigationState', id: string }> } | { __typename: 'PythonError' }, instance: { __typename: 'Instance', hasInfo: boolean, daemonHealth: { __typename: 'DaemonHealth', id: string, allDaemonStatuses: Array<{ __typename: 'DaemonStatus', id: string, daemonType: string, required: boolean, healthy: boolean | null, lastHeartbeatTime: number | null, lastHeartbeatErrors: Array<{ __typename: 'PythonError', message: string, stack: Array<string>, errorChain: Array<{ __typename: 'ErrorChainLink', isExplicitLink: boolean, error: { __typename: 'PythonError', message: string, stack: Array<string> } }> }> }> } } };

export type UnloadableSensorsQueryQueryVariables = Exact<{ [key: string]: never; }>;


export type UnloadableSensorsQueryQuery = { __typename: 'DagitQuery', unloadableInstigationStatesOrError: { __typename: 'InstigationStates', results: Array<{ __typename: 'InstigationState', id: string, selectorId: string, name: string, instigationType: InstigationType, status: InstigationStatus, repositoryName: string, repositoryLocationName: string, runningCount: number, typeSpecificData: { __typename: 'ScheduleData', cronSchedule: string } | { __typename: 'SensorData', lastRunKey: string | null, lastCursor: string | null } | null, runs: Array<{ __typename: 'Run', id: string, runId: string, status: RunStatus, startTime: number | null, endTime: number | null, updateTime: number | null }>, ticks: Array<{ __typename: 'InstigationTick', id: string, cursor: string | null, status: InstigationTickStatus, timestamp: number, skipReason: string | null, runIds: Array<string>, runKeys: Array<string>, error: { __typename: 'PythonError', message: string, stack: Array<string>, errorChain: Array<{ __typename: 'ErrorChainLink', isExplicitLink: boolean, error: { __typename: 'PythonError', message: string, stack: Array<string> } }> } | null }> }> } | { __typename: 'PythonError', message: string, stack: Array<string>, errorChain: Array<{ __typename: 'ErrorChainLink', isExplicitLink: boolean, error: { __typename: 'PythonError', message: string, stack: Array<string> } }> } };

export type BackfillSelectorQueryQueryVariables = Exact<{
  pipelineSelector: PipelineSelector;
}>;


export type BackfillSelectorQueryQuery = { __typename: 'DagitQuery', pipelineSnapshotOrError: { __typename: 'PipelineNotFoundError' } | { __typename: 'PipelineSnapshot', id: string, name: string, solidHandles: Array<{ __typename: 'SolidHandle', handleID: string, solid: { __typename: 'Solid', name: string, isDynamicMapped: boolean, definition: { __typename: 'CompositeSolidDefinition', name: string, id: string, description: string | null, inputMappings: Array<{ __typename: 'InputMapping', definition: { __typename: 'InputDefinition', name: string }, mappedInput: { __typename: 'Input', definition: { __typename: 'InputDefinition', name: string }, solid: { __typename: 'Solid', name: string } } }>, outputMappings: Array<{ __typename: 'OutputMapping', definition: { __typename: 'OutputDefinition', name: string }, mappedOutput: { __typename: 'Output', definition: { __typename: 'OutputDefinition', name: string }, solid: { __typename: 'Solid', name: string } } }>, metadata: Array<{ __typename: 'MetadataItemDefinition', key: string, value: string }>, assetNodes: Array<{ __typename: 'AssetNode', id: string, assetKey: { __typename: 'AssetKey', path: Array<string> } }>, inputDefinitions: Array<{ __typename: 'InputDefinition', name: string, type: { __typename: 'ListDagsterType', displayName: string } | { __typename: 'NullableDagsterType', displayName: string } | { __typename: 'RegularDagsterType', displayName: string } }>, outputDefinitions: Array<{ __typename: 'OutputDefinition', name: string, isDynamic: boolean | null, type: { __typename: 'ListDagsterType', displayName: string } | { __typename: 'NullableDagsterType', displayName: string } | { __typename: 'RegularDagsterType', displayName: string } }> } | { __typename: 'SolidDefinition', name: string, description: string | null, configField: { __typename: 'ConfigTypeField', configType: { __typename: 'ArrayConfigType', key: string, description: string | null } | { __typename: 'CompositeConfigType', key: string, description: string | null } | { __typename: 'EnumConfigType', key: string, description: string | null } | { __typename: 'MapConfigType', key: string, description: string | null } | { __typename: 'NullableConfigType', key: string, description: string | null } | { __typename: 'RegularConfigType', key: string, description: string | null } | { __typename: 'ScalarUnionConfigType', key: string, description: string | null } } | null, metadata: Array<{ __typename: 'MetadataItemDefinition', key: string, value: string }>, assetNodes: Array<{ __typename: 'AssetNode', id: string, assetKey: { __typename: 'AssetKey', path: Array<string> } }>, inputDefinitions: Array<{ __typename: 'InputDefinition', name: string, type: { __typename: 'ListDagsterType', displayName: string } | { __typename: 'NullableDagsterType', displayName: string } | { __typename: 'RegularDagsterType', displayName: string } }>, outputDefinitions: Array<{ __typename: 'OutputDefinition', name: string, isDynamic: boolean | null, type: { __typename: 'ListDagsterType', displayName: string } | { __typename: 'NullableDagsterType', displayName: string } | { __typename: 'RegularDagsterType', displayName: string } }> }, inputs: Array<{ __typename: 'Input', isDynamicCollect: boolean, dependsOn: Array<{ __typename: 'Output', solid: { __typename: 'Solid', name: string }, definition: { __typename: 'OutputDefinition', name: string, type: { __typename: 'ListDagsterType', displayName: string } | { __typename: 'NullableDagsterType', displayName: string } | { __typename: 'RegularDagsterType', displayName: string } } }>, definition: { __typename: 'InputDefinition', name: string } }>, outputs: Array<{ __typename: 'Output', dependedBy: Array<{ __typename: 'Input', solid: { __typename: 'Solid', name: string }, definition: { __typename: 'InputDefinition', name: string, type: { __typename: 'ListDagsterType', displayName: string } | { __typename: 'NullableDagsterType', displayName: string } | { __typename: 'RegularDagsterType', displayName: string } } }>, definition: { __typename: 'OutputDefinition', name: string } }> } }> } | { __typename: 'PipelineSnapshotNotFoundError' } | { __typename: 'PythonError' }, instance: { __typename: 'Instance', runQueuingSupported: boolean, runLauncher: { __typename: 'RunLauncher', name: string } | null, daemonHealth: { __typename: 'DaemonHealth', id: string, daemonStatus: { __typename: 'DaemonStatus', id: string, healthy: boolean | null } } } };

export type JobBackfillsQueryQueryVariables = Exact<{
  partitionSetName: Scalars['String'];
  repositorySelector: RepositorySelector;
  cursor?: InputMaybe<Scalars['String']>;
  limit?: InputMaybe<Scalars['Int']>;
}>;


export type JobBackfillsQueryQuery = { __typename: 'DagitQuery', partitionSetOrError: { __typename: 'PartitionSet', id: string, pipelineName: string, backfills: Array<{ __typename: 'PartitionBackfill', backfillId: string, status: BulkActionStatus, numCancelable: number, partitionNames: Array<string>, numPartitions: number, timestamp: number, partitionSetName: string | null, partitionSet: { __typename: 'PartitionSet', id: string, name: string, mode: string, pipelineName: string, repositoryOrigin: { __typename: 'RepositoryOrigin', id: string, repositoryName: string, repositoryLocationName: string } } | null, assetSelection: Array<{ __typename: 'AssetKey', path: Array<string> }> | null, error: { __typename: 'PythonError', message: string, stack: Array<string>, errorChain: Array<{ __typename: 'ErrorChainLink', isExplicitLink: boolean, error: { __typename: 'PythonError', message: string, stack: Array<string> } }> } | null }> } | { __typename: 'PartitionSetNotFoundError' } | { __typename: 'PythonError' } };

export type PartitionsStatusQueryQueryVariables = Exact<{
  partitionSetName: Scalars['String'];
  repositorySelector: RepositorySelector;
}>;


export type PartitionsStatusQueryQuery = { __typename: 'DagitQuery', partitionSetOrError: { __typename: 'PartitionSet', id: string, name: string, pipelineName: string, partitionsOrError: { __typename: 'Partitions', results: Array<{ __typename: 'Partition', name: string }> } | { __typename: 'PythonError' }, partitionStatusesOrError: { __typename: 'PartitionStatuses', results: Array<{ __typename: 'PartitionStatus', id: string, partitionName: string, runStatus: RunStatus | null, runDuration: number | null }> } | { __typename: 'PythonError', message: string, stack: Array<string>, errorChain: Array<{ __typename: 'ErrorChainLink', isExplicitLink: boolean, error: { __typename: 'PythonError', message: string, stack: Array<string> } }> } } | { __typename: 'PartitionSetNotFoundError' } | { __typename: 'PythonError' } };

export type OpJobPartitionSetFragment = { __typename: 'PartitionSet', id: string, name: string, pipelineName: string, partitionsOrError: { __typename: 'Partitions', results: Array<{ __typename: 'Partition', name: string }> } | { __typename: 'PythonError' }, partitionStatusesOrError: { __typename: 'PartitionStatuses', results: Array<{ __typename: 'PartitionStatus', id: string, partitionName: string, runStatus: RunStatus | null, runDuration: number | null }> } | { __typename: 'PythonError', message: string, stack: Array<string>, errorChain: Array<{ __typename: 'ErrorChainLink', isExplicitLink: boolean, error: { __typename: 'PythonError', message: string, stack: Array<string> } }> } };

export type OpJobPartitionStatusFragment = { __typename: 'PartitionStatus', id: string, partitionName: string, runStatus: RunStatus | null, runDuration: number | null };

export type PartitionGraphSetRunFragmentFragment = { __typename: 'Run', id: string, runId: string, tags: Array<{ __typename: 'PipelineTag', key: string, value: string }>, stats: { __typename: 'PythonError', message: string, stack: Array<string>, errorChain: Array<{ __typename: 'ErrorChainLink', isExplicitLink: boolean, error: { __typename: 'PythonError', message: string, stack: Array<string> } }> } | { __typename: 'RunStatsSnapshot', id: string, startTime: number | null, endTime: number | null, materializations: number }, stepStats: Array<{ __typename: 'RunStepStats', stepKey: string, startTime: number | null, endTime: number | null, status: StepEventStatus | null, materializations: Array<{ __typename: 'MaterializationEvent' }>, expectationResults: Array<{ __typename: 'ExpectationResult', success: boolean }> }> };

export type PartitionGraphFragmentFragment = { __typename: 'Run', id: string, runId: string, stats: { __typename: 'PythonError', message: string, stack: Array<string>, errorChain: Array<{ __typename: 'ErrorChainLink', isExplicitLink: boolean, error: { __typename: 'PythonError', message: string, stack: Array<string> } }> } | { __typename: 'RunStatsSnapshot', id: string, startTime: number | null, endTime: number | null, materializations: number }, stepStats: Array<{ __typename: 'RunStepStats', stepKey: string, startTime: number | null, endTime: number | null, status: StepEventStatus | null, materializations: Array<{ __typename: 'MaterializationEvent' }>, expectationResults: Array<{ __typename: 'ExpectationResult', success: boolean }> }> };

export type PartitionRunListQueryQueryVariables = Exact<{
  filter: RunsFilter;
}>;


export type PartitionRunListQueryQuery = { __typename: 'DagitQuery', pipelineRunsOrError: { __typename: 'InvalidPipelineRunsFilterError', message: string } | { __typename: 'PythonError', message: string, stack: Array<string>, errorChain: Array<{ __typename: 'ErrorChainLink', isExplicitLink: boolean, error: { __typename: 'PythonError', message: string, stack: Array<string> } }> } | { __typename: 'Runs', results: Array<{ __typename: 'Run', id: string, runId: string, status: RunStatus, stepKeysToExecute: Array<string> | null, canTerminate: boolean, mode: string, rootRunId: string | null, parentRunId: string | null, pipelineSnapshotId: string | null, parentPipelineSnapshotId: string | null, pipelineName: string, solidSelection: Array<string> | null, startTime: number | null, endTime: number | null, updateTime: number | null, repositoryOrigin: { __typename: 'RepositoryOrigin', id: string, repositoryName: string, repositoryLocationName: string } | null, assetSelection: Array<{ __typename: 'AssetKey', path: Array<string> }> | null, tags: Array<{ __typename: 'PipelineTag', key: string, value: string }> }> } };

export type PartitionStepStatusRunFragment = { __typename: 'Run', id: string, runId: string, tags: Array<{ __typename: 'PipelineTag', key: string, value: string }>, stepStats: Array<{ __typename: 'RunStepStats', stepKey: string, status: StepEventStatus | null }> };

export type PartitionStepStatusPipelineQueryQueryVariables = Exact<{
  pipelineSelector?: InputMaybe<PipelineSelector>;
}>;


export type PartitionStepStatusPipelineQueryQuery = { __typename: 'DagitQuery', pipelineSnapshotOrError: { __typename: 'PipelineNotFoundError' } | { __typename: 'PipelineSnapshot', id: string, name: string, solidHandles: Array<{ __typename: 'SolidHandle', handleID: string, solid: { __typename: 'Solid', name: string, isDynamicMapped: boolean, definition: { __typename: 'CompositeSolidDefinition', name: string, id: string, description: string | null, inputMappings: Array<{ __typename: 'InputMapping', definition: { __typename: 'InputDefinition', name: string }, mappedInput: { __typename: 'Input', definition: { __typename: 'InputDefinition', name: string }, solid: { __typename: 'Solid', name: string } } }>, outputMappings: Array<{ __typename: 'OutputMapping', definition: { __typename: 'OutputDefinition', name: string }, mappedOutput: { __typename: 'Output', definition: { __typename: 'OutputDefinition', name: string }, solid: { __typename: 'Solid', name: string } } }>, metadata: Array<{ __typename: 'MetadataItemDefinition', key: string, value: string }>, assetNodes: Array<{ __typename: 'AssetNode', id: string, assetKey: { __typename: 'AssetKey', path: Array<string> } }>, inputDefinitions: Array<{ __typename: 'InputDefinition', name: string, type: { __typename: 'ListDagsterType', displayName: string } | { __typename: 'NullableDagsterType', displayName: string } | { __typename: 'RegularDagsterType', displayName: string } }>, outputDefinitions: Array<{ __typename: 'OutputDefinition', name: string, isDynamic: boolean | null, type: { __typename: 'ListDagsterType', displayName: string } | { __typename: 'NullableDagsterType', displayName: string } | { __typename: 'RegularDagsterType', displayName: string } }> } | { __typename: 'SolidDefinition', name: string, description: string | null, configField: { __typename: 'ConfigTypeField', configType: { __typename: 'ArrayConfigType', key: string, description: string | null } | { __typename: 'CompositeConfigType', key: string, description: string | null } | { __typename: 'EnumConfigType', key: string, description: string | null } | { __typename: 'MapConfigType', key: string, description: string | null } | { __typename: 'NullableConfigType', key: string, description: string | null } | { __typename: 'RegularConfigType', key: string, description: string | null } | { __typename: 'ScalarUnionConfigType', key: string, description: string | null } } | null, metadata: Array<{ __typename: 'MetadataItemDefinition', key: string, value: string }>, assetNodes: Array<{ __typename: 'AssetNode', id: string, assetKey: { __typename: 'AssetKey', path: Array<string> } }>, inputDefinitions: Array<{ __typename: 'InputDefinition', name: string, type: { __typename: 'ListDagsterType', displayName: string } | { __typename: 'NullableDagsterType', displayName: string } | { __typename: 'RegularDagsterType', displayName: string } }>, outputDefinitions: Array<{ __typename: 'OutputDefinition', name: string, isDynamic: boolean | null, type: { __typename: 'ListDagsterType', displayName: string } | { __typename: 'NullableDagsterType', displayName: string } | { __typename: 'RegularDagsterType', displayName: string } }> }, inputs: Array<{ __typename: 'Input', isDynamicCollect: boolean, dependsOn: Array<{ __typename: 'Output', solid: { __typename: 'Solid', name: string }, definition: { __typename: 'OutputDefinition', name: string, type: { __typename: 'ListDagsterType', displayName: string } | { __typename: 'NullableDagsterType', displayName: string } | { __typename: 'RegularDagsterType', displayName: string } } }>, definition: { __typename: 'InputDefinition', name: string } }>, outputs: Array<{ __typename: 'Output', dependedBy: Array<{ __typename: 'Input', solid: { __typename: 'Solid', name: string }, definition: { __typename: 'InputDefinition', name: string, type: { __typename: 'ListDagsterType', displayName: string } | { __typename: 'NullableDagsterType', displayName: string } | { __typename: 'RegularDagsterType', displayName: string } } }>, definition: { __typename: 'OutputDefinition', name: string } }> } }> } | { __typename: 'PipelineSnapshotNotFoundError' } | { __typename: 'PythonError' } };

export type PartitionsBackfillSelectorQueryQueryVariables = Exact<{
  partitionSetName: Scalars['String'];
  repositorySelector: RepositorySelector;
  pipelineSelector: PipelineSelector;
}>;


export type PartitionsBackfillSelectorQueryQuery = { __typename: 'DagitQuery', partitionSetOrError: { __typename: 'PartitionSet', id: string, name: string, partitionsOrError: { __typename: 'Partitions', results: Array<{ __typename: 'Partition', name: string }> } | { __typename: 'PythonError', message: string, stack: Array<string>, errorChain: Array<{ __typename: 'ErrorChainLink', isExplicitLink: boolean, error: { __typename: 'PythonError', message: string, stack: Array<string> } }> } } | { __typename: 'PartitionSetNotFoundError', message: string } | { __typename: 'PythonError', message: string, stack: Array<string>, errorChain: Array<{ __typename: 'ErrorChainLink', isExplicitLink: boolean, error: { __typename: 'PythonError', message: string, stack: Array<string> } }> }, pipelineSnapshotOrError: { __typename: 'PipelineNotFoundError', message: string } | { __typename: 'PipelineSnapshot', id: string, name: string, solidHandles: Array<{ __typename: 'SolidHandle', handleID: string, solid: { __typename: 'Solid', name: string, definition: { __typename: 'CompositeSolidDefinition', name: string } | { __typename: 'SolidDefinition', name: string }, inputs: Array<{ __typename: 'Input', dependsOn: Array<{ __typename: 'Output', solid: { __typename: 'Solid', name: string } }> }>, outputs: Array<{ __typename: 'Output', dependedBy: Array<{ __typename: 'Input', solid: { __typename: 'Solid', name: string } }> }> } }> } | { __typename: 'PipelineSnapshotNotFoundError', message: string } | { __typename: 'PythonError', message: string, stack: Array<string>, errorChain: Array<{ __typename: 'ErrorChainLink', isExplicitLink: boolean, error: { __typename: 'PythonError', message: string, stack: Array<string> } }> }, instance: { __typename: 'Instance', runQueuingSupported: boolean, runLauncher: { __typename: 'RunLauncher', name: string } | null, daemonHealth: { __typename: 'DaemonHealth', id: string, daemonStatus: { __typename: 'DaemonStatus', id: string, healthy: boolean | null } } } };

export type PartitionStatusQueryQueryVariables = Exact<{
  partitionSetName: Scalars['String'];
  repositorySelector: RepositorySelector;
}>;


export type PartitionStatusQueryQuery = { __typename: 'DagitQuery', partitionSetOrError: { __typename: 'PartitionSet', id: string, name: string, partitionStatusesOrError: { __typename: 'PartitionStatuses', results: Array<{ __typename: 'PartitionStatus', id: string, partitionName: string, runStatus: RunStatus | null }> } | { __typename: 'PythonError', message: string, stack: Array<string>, errorChain: Array<{ __typename: 'ErrorChainLink', isExplicitLink: boolean, error: { __typename: 'PythonError', message: string, stack: Array<string> } }> } } | { __typename: 'PartitionSetNotFoundError', message: string } | { __typename: 'PythonError', message: string, stack: Array<string>, errorChain: Array<{ __typename: 'ErrorChainLink', isExplicitLink: boolean, error: { __typename: 'PythonError', message: string, stack: Array<string> } }> } };

export type PartitionMatrixStepRunFragmentFragment = { __typename: 'Run', id: string, runId: string, status: RunStatus, startTime: number | null, endTime: number | null, stepStats: Array<{ __typename: 'RunStepStats', stepKey: string, startTime: number | null, endTime: number | null, status: StepEventStatus | null }>, tags: Array<{ __typename: 'PipelineTag', key: string, value: string }> };

export type PartitionMatrixSolidHandleFragmentFragment = { __typename: 'SolidHandle', handleID: string, solid: { __typename: 'Solid', name: string, isDynamicMapped: boolean, definition: { __typename: 'CompositeSolidDefinition', name: string, id: string, description: string | null, inputMappings: Array<{ __typename: 'InputMapping', definition: { __typename: 'InputDefinition', name: string }, mappedInput: { __typename: 'Input', definition: { __typename: 'InputDefinition', name: string }, solid: { __typename: 'Solid', name: string } } }>, outputMappings: Array<{ __typename: 'OutputMapping', definition: { __typename: 'OutputDefinition', name: string }, mappedOutput: { __typename: 'Output', definition: { __typename: 'OutputDefinition', name: string }, solid: { __typename: 'Solid', name: string } } }>, metadata: Array<{ __typename: 'MetadataItemDefinition', key: string, value: string }>, assetNodes: Array<{ __typename: 'AssetNode', id: string, assetKey: { __typename: 'AssetKey', path: Array<string> } }>, inputDefinitions: Array<{ __typename: 'InputDefinition', name: string, type: { __typename: 'ListDagsterType', displayName: string } | { __typename: 'NullableDagsterType', displayName: string } | { __typename: 'RegularDagsterType', displayName: string } }>, outputDefinitions: Array<{ __typename: 'OutputDefinition', name: string, isDynamic: boolean | null, type: { __typename: 'ListDagsterType', displayName: string } | { __typename: 'NullableDagsterType', displayName: string } | { __typename: 'RegularDagsterType', displayName: string } }> } | { __typename: 'SolidDefinition', name: string, description: string | null, configField: { __typename: 'ConfigTypeField', configType: { __typename: 'ArrayConfigType', key: string, description: string | null } | { __typename: 'CompositeConfigType', key: string, description: string | null } | { __typename: 'EnumConfigType', key: string, description: string | null } | { __typename: 'MapConfigType', key: string, description: string | null } | { __typename: 'NullableConfigType', key: string, description: string | null } | { __typename: 'RegularConfigType', key: string, description: string | null } | { __typename: 'ScalarUnionConfigType', key: string, description: string | null } } | null, metadata: Array<{ __typename: 'MetadataItemDefinition', key: string, value: string }>, assetNodes: Array<{ __typename: 'AssetNode', id: string, assetKey: { __typename: 'AssetKey', path: Array<string> } }>, inputDefinitions: Array<{ __typename: 'InputDefinition', name: string, type: { __typename: 'ListDagsterType', displayName: string } | { __typename: 'NullableDagsterType', displayName: string } | { __typename: 'RegularDagsterType', displayName: string } }>, outputDefinitions: Array<{ __typename: 'OutputDefinition', name: string, isDynamic: boolean | null, type: { __typename: 'ListDagsterType', displayName: string } | { __typename: 'NullableDagsterType', displayName: string } | { __typename: 'RegularDagsterType', displayName: string } }> }, inputs: Array<{ __typename: 'Input', isDynamicCollect: boolean, dependsOn: Array<{ __typename: 'Output', solid: { __typename: 'Solid', name: string }, definition: { __typename: 'OutputDefinition', name: string, type: { __typename: 'ListDagsterType', displayName: string } | { __typename: 'NullableDagsterType', displayName: string } | { __typename: 'RegularDagsterType', displayName: string } } }>, definition: { __typename: 'InputDefinition', name: string } }>, outputs: Array<{ __typename: 'Output', dependedBy: Array<{ __typename: 'Input', solid: { __typename: 'Solid', name: string }, definition: { __typename: 'InputDefinition', name: string, type: { __typename: 'ListDagsterType', displayName: string } | { __typename: 'NullableDagsterType', displayName: string } | { __typename: 'RegularDagsterType', displayName: string } } }>, definition: { __typename: 'OutputDefinition', name: string } }> } };

export type PartitionStepLoaderQueryQueryVariables = Exact<{
  filter: RunsFilter;
  cursor?: InputMaybe<Scalars['String']>;
  limit?: InputMaybe<Scalars['Int']>;
}>;


export type PartitionStepLoaderQueryQuery = { __typename: 'DagitQuery', pipelineRunsOrError: { __typename: 'InvalidPipelineRunsFilterError', message: string } | { __typename: 'PythonError', message: string, stack: Array<string>, errorChain: Array<{ __typename: 'ErrorChainLink', isExplicitLink: boolean, error: { __typename: 'PythonError', message: string, stack: Array<string> } }> } | { __typename: 'Runs', results: Array<{ __typename: 'Run', id: string, runId: string, status: RunStatus, startTime: number | null, endTime: number | null, stepStats: Array<{ __typename: 'RunStepStats', stepKey: string, startTime: number | null, endTime: number | null, status: StepEventStatus | null }>, tags: Array<{ __typename: 'PipelineTag', key: string, value: string }> }> } };

type GraphExplorerFragment_CompositeSolidDefinition_Fragment = { __typename: 'CompositeSolidDefinition', id: string, name: string, description: string | null, modes: Array<{ __typename: 'Mode', id: string, name: string, description: string | null, resources: Array<{ __typename: 'Resource', name: string, description: string | null, configField: { __typename: 'ConfigTypeField', configType: { __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } } | null }>, loggers: Array<{ __typename: 'Logger', name: string, description: string | null, configField: { __typename: 'ConfigTypeField', configType: { __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } } | null }> }> };

type GraphExplorerFragment_Graph_Fragment = { __typename: 'Graph', id: string, name: string, description: string | null, modes: Array<{ __typename: 'Mode', id: string, name: string, description: string | null, resources: Array<{ __typename: 'Resource', name: string, description: string | null, configField: { __typename: 'ConfigTypeField', configType: { __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } } | null }>, loggers: Array<{ __typename: 'Logger', name: string, description: string | null, configField: { __typename: 'ConfigTypeField', configType: { __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } } | null }> }> };

type GraphExplorerFragment_Job_Fragment = { __typename: 'Job', id: string, name: string, description: string | null, modes: Array<{ __typename: 'Mode', id: string, name: string, description: string | null, resources: Array<{ __typename: 'Resource', name: string, description: string | null, configField: { __typename: 'ConfigTypeField', configType: { __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } } | null }>, loggers: Array<{ __typename: 'Logger', name: string, description: string | null, configField: { __typename: 'ConfigTypeField', configType: { __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } } | null }> }> };

type GraphExplorerFragment_Pipeline_Fragment = { __typename: 'Pipeline', id: string, name: string, description: string | null, modes: Array<{ __typename: 'Mode', id: string, name: string, description: string | null, resources: Array<{ __typename: 'Resource', name: string, description: string | null, configField: { __typename: 'ConfigTypeField', configType: { __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } } | null }>, loggers: Array<{ __typename: 'Logger', name: string, description: string | null, configField: { __typename: 'ConfigTypeField', configType: { __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } } | null }> }> };

type GraphExplorerFragment_PipelineSnapshot_Fragment = { __typename: 'PipelineSnapshot', id: string, name: string, description: string | null, pipelineSnapshotId: string, parentSnapshotId: string | null, metadataEntries: Array<{ __typename: 'AssetMetadataEntry', label: string, description: string | null, assetKey: { __typename: 'AssetKey', path: Array<string> } } | { __typename: 'BoolMetadataEntry', boolValue: boolean | null, label: string, description: string | null } | { __typename: 'FloatMetadataEntry', floatValue: number | null, label: string, description: string | null } | { __typename: 'IntMetadataEntry', intValue: number | null, intRepr: string, label: string, description: string | null } | { __typename: 'JsonMetadataEntry', jsonString: string, label: string, description: string | null } | { __typename: 'MarkdownMetadataEntry', mdStr: string, label: string, description: string | null } | { __typename: 'NotebookMetadataEntry', path: string, label: string, description: string | null } | { __typename: 'NullMetadataEntry', label: string, description: string | null } | { __typename: 'PathMetadataEntry', path: string, label: string, description: string | null } | { __typename: 'PipelineRunMetadataEntry', runId: string, label: string, description: string | null } | { __typename: 'PythonArtifactMetadataEntry', module: string, name: string, label: string, description: string | null } | { __typename: 'TableMetadataEntry', label: string, description: string | null, table: { __typename: 'Table', records: Array<string>, schema: { __typename: 'TableSchema', columns: Array<{ __typename: 'TableColumn', name: string, description: string | null, type: string, constraints: { __typename: 'TableColumnConstraints', nullable: boolean, unique: boolean, other: Array<string> } }>, constraints: { __typename: 'TableConstraints', other: Array<string> } | null } } } | { __typename: 'TableSchemaMetadataEntry', label: string, description: string | null, schema: { __typename: 'TableSchema', columns: Array<{ __typename: 'TableColumn', name: string, description: string | null, type: string, constraints: { __typename: 'TableColumnConstraints', nullable: boolean, unique: boolean, other: Array<string> } }>, constraints: { __typename: 'TableConstraints', other: Array<string> } | null } } | { __typename: 'TextMetadataEntry', text: string, label: string, description: string | null } | { __typename: 'UrlMetadataEntry', url: string, label: string, description: string | null }>, modes: Array<{ __typename: 'Mode', id: string, name: string, description: string | null, resources: Array<{ __typename: 'Resource', name: string, description: string | null, configField: { __typename: 'ConfigTypeField', configType: { __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } } | null }>, loggers: Array<{ __typename: 'Logger', name: string, description: string | null, configField: { __typename: 'ConfigTypeField', configType: { __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } } | null }> }> };

export type GraphExplorerFragmentFragment = GraphExplorerFragment_CompositeSolidDefinition_Fragment | GraphExplorerFragment_Graph_Fragment | GraphExplorerFragment_Job_Fragment | GraphExplorerFragment_Pipeline_Fragment | GraphExplorerFragment_PipelineSnapshot_Fragment;

export type GraphExplorerAssetNodeFragmentFragment = { __typename: 'AssetNode', id: string, opNames: Array<string>, assetKey: { __typename: 'AssetKey', path: Array<string> } };

export type GraphExplorerSolidHandleFragmentFragment = { __typename: 'SolidHandle', handleID: string, solid: { __typename: 'Solid', name: string, isDynamicMapped: boolean, definition: { __typename: 'CompositeSolidDefinition', name: string, id: string, description: string | null, inputMappings: Array<{ __typename: 'InputMapping', definition: { __typename: 'InputDefinition', name: string }, mappedInput: { __typename: 'Input', definition: { __typename: 'InputDefinition', name: string }, solid: { __typename: 'Solid', name: string } } }>, outputMappings: Array<{ __typename: 'OutputMapping', definition: { __typename: 'OutputDefinition', name: string }, mappedOutput: { __typename: 'Output', definition: { __typename: 'OutputDefinition', name: string }, solid: { __typename: 'Solid', name: string } } }>, metadata: Array<{ __typename: 'MetadataItemDefinition', key: string, value: string }>, assetNodes: Array<{ __typename: 'AssetNode', id: string, assetKey: { __typename: 'AssetKey', path: Array<string> } }>, inputDefinitions: Array<{ __typename: 'InputDefinition', name: string, type: { __typename: 'ListDagsterType', displayName: string } | { __typename: 'NullableDagsterType', displayName: string } | { __typename: 'RegularDagsterType', displayName: string } }>, outputDefinitions: Array<{ __typename: 'OutputDefinition', name: string, isDynamic: boolean | null, type: { __typename: 'ListDagsterType', displayName: string } | { __typename: 'NullableDagsterType', displayName: string } | { __typename: 'RegularDagsterType', displayName: string } }> } | { __typename: 'SolidDefinition', name: string, description: string | null, configField: { __typename: 'ConfigTypeField', configType: { __typename: 'ArrayConfigType', key: string, description: string | null } | { __typename: 'CompositeConfigType', key: string, description: string | null } | { __typename: 'EnumConfigType', key: string, description: string | null } | { __typename: 'MapConfigType', key: string, description: string | null } | { __typename: 'NullableConfigType', key: string, description: string | null } | { __typename: 'RegularConfigType', key: string, description: string | null } | { __typename: 'ScalarUnionConfigType', key: string, description: string | null } } | null, metadata: Array<{ __typename: 'MetadataItemDefinition', key: string, value: string }>, assetNodes: Array<{ __typename: 'AssetNode', id: string, assetKey: { __typename: 'AssetKey', path: Array<string> } }>, inputDefinitions: Array<{ __typename: 'InputDefinition', name: string, type: { __typename: 'ListDagsterType', displayName: string } | { __typename: 'NullableDagsterType', displayName: string } | { __typename: 'RegularDagsterType', displayName: string } }>, outputDefinitions: Array<{ __typename: 'OutputDefinition', name: string, isDynamic: boolean | null, type: { __typename: 'ListDagsterType', displayName: string } | { __typename: 'NullableDagsterType', displayName: string } | { __typename: 'RegularDagsterType', displayName: string } }> }, inputs: Array<{ __typename: 'Input', isDynamicCollect: boolean, definition: { __typename: 'InputDefinition', name: string }, dependsOn: Array<{ __typename: 'Output', definition: { __typename: 'OutputDefinition', name: string, type: { __typename: 'ListDagsterType', displayName: string } | { __typename: 'NullableDagsterType', displayName: string } | { __typename: 'RegularDagsterType', displayName: string } }, solid: { __typename: 'Solid', name: string } }> }>, outputs: Array<{ __typename: 'Output', definition: { __typename: 'OutputDefinition', name: string }, dependedBy: Array<{ __typename: 'Input', solid: { __typename: 'Solid', name: string }, definition: { __typename: 'InputDefinition', name: string, type: { __typename: 'ListDagsterType', displayName: string } | { __typename: 'NullableDagsterType', displayName: string } | { __typename: 'RegularDagsterType', displayName: string } } }> }> } };

export type GraphExplorerSolidFragment = { __typename: 'Solid', name: string, isDynamicMapped: boolean, definition: { __typename: 'CompositeSolidDefinition', name: string, id: string, description: string | null, inputMappings: Array<{ __typename: 'InputMapping', definition: { __typename: 'InputDefinition', name: string }, mappedInput: { __typename: 'Input', definition: { __typename: 'InputDefinition', name: string }, solid: { __typename: 'Solid', name: string } } }>, outputMappings: Array<{ __typename: 'OutputMapping', definition: { __typename: 'OutputDefinition', name: string }, mappedOutput: { __typename: 'Output', definition: { __typename: 'OutputDefinition', name: string }, solid: { __typename: 'Solid', name: string } } }>, metadata: Array<{ __typename: 'MetadataItemDefinition', key: string, value: string }>, assetNodes: Array<{ __typename: 'AssetNode', id: string, assetKey: { __typename: 'AssetKey', path: Array<string> } }>, inputDefinitions: Array<{ __typename: 'InputDefinition', name: string, type: { __typename: 'ListDagsterType', displayName: string } | { __typename: 'NullableDagsterType', displayName: string } | { __typename: 'RegularDagsterType', displayName: string } }>, outputDefinitions: Array<{ __typename: 'OutputDefinition', name: string, isDynamic: boolean | null, type: { __typename: 'ListDagsterType', displayName: string } | { __typename: 'NullableDagsterType', displayName: string } | { __typename: 'RegularDagsterType', displayName: string } }> } | { __typename: 'SolidDefinition', name: string, description: string | null, configField: { __typename: 'ConfigTypeField', configType: { __typename: 'ArrayConfigType', key: string, description: string | null } | { __typename: 'CompositeConfigType', key: string, description: string | null } | { __typename: 'EnumConfigType', key: string, description: string | null } | { __typename: 'MapConfigType', key: string, description: string | null } | { __typename: 'NullableConfigType', key: string, description: string | null } | { __typename: 'RegularConfigType', key: string, description: string | null } | { __typename: 'ScalarUnionConfigType', key: string, description: string | null } } | null, metadata: Array<{ __typename: 'MetadataItemDefinition', key: string, value: string }>, assetNodes: Array<{ __typename: 'AssetNode', id: string, assetKey: { __typename: 'AssetKey', path: Array<string> } }>, inputDefinitions: Array<{ __typename: 'InputDefinition', name: string, type: { __typename: 'ListDagsterType', displayName: string } | { __typename: 'NullableDagsterType', displayName: string } | { __typename: 'RegularDagsterType', displayName: string } }>, outputDefinitions: Array<{ __typename: 'OutputDefinition', name: string, isDynamic: boolean | null, type: { __typename: 'ListDagsterType', displayName: string } | { __typename: 'NullableDagsterType', displayName: string } | { __typename: 'RegularDagsterType', displayName: string } }> }, inputs: Array<{ __typename: 'Input', isDynamicCollect: boolean, definition: { __typename: 'InputDefinition', name: string }, dependsOn: Array<{ __typename: 'Output', definition: { __typename: 'OutputDefinition', name: string, type: { __typename: 'ListDagsterType', displayName: string } | { __typename: 'NullableDagsterType', displayName: string } | { __typename: 'RegularDagsterType', displayName: string } }, solid: { __typename: 'Solid', name: string } }> }>, outputs: Array<{ __typename: 'Output', definition: { __typename: 'OutputDefinition', name: string }, dependedBy: Array<{ __typename: 'Input', solid: { __typename: 'Solid', name: string }, definition: { __typename: 'InputDefinition', name: string, type: { __typename: 'ListDagsterType', displayName: string } | { __typename: 'NullableDagsterType', displayName: string } | { __typename: 'RegularDagsterType', displayName: string } } }> }> };

export type PipelineExplorerRootQueryQueryVariables = Exact<{
  snapshotPipelineSelector?: InputMaybe<PipelineSelector>;
  snapshotId?: InputMaybe<Scalars['String']>;
  rootHandleID: Scalars['String'];
  requestScopeHandleID?: InputMaybe<Scalars['String']>;
}>;


export type PipelineExplorerRootQueryQuery = { __typename: 'DagitQuery', pipelineSnapshotOrError: { __typename: 'PipelineNotFoundError', message: string } | { __typename: 'PipelineSnapshot', id: string, name: string, description: string | null, pipelineSnapshotId: string, parentSnapshotId: string | null, metadataEntries: Array<{ __typename: 'AssetMetadataEntry', label: string, description: string | null, assetKey: { __typename: 'AssetKey', path: Array<string> } } | { __typename: 'BoolMetadataEntry', boolValue: boolean | null, label: string, description: string | null } | { __typename: 'FloatMetadataEntry', floatValue: number | null, label: string, description: string | null } | { __typename: 'IntMetadataEntry', intValue: number | null, intRepr: string, label: string, description: string | null } | { __typename: 'JsonMetadataEntry', jsonString: string, label: string, description: string | null } | { __typename: 'MarkdownMetadataEntry', mdStr: string, label: string, description: string | null } | { __typename: 'NotebookMetadataEntry', path: string, label: string, description: string | null } | { __typename: 'NullMetadataEntry', label: string, description: string | null } | { __typename: 'PathMetadataEntry', path: string, label: string, description: string | null } | { __typename: 'PipelineRunMetadataEntry', runId: string, label: string, description: string | null } | { __typename: 'PythonArtifactMetadataEntry', module: string, name: string, label: string, description: string | null } | { __typename: 'TableMetadataEntry', label: string, description: string | null, table: { __typename: 'Table', records: Array<string>, schema: { __typename: 'TableSchema', columns: Array<{ __typename: 'TableColumn', name: string, description: string | null, type: string, constraints: { __typename: 'TableColumnConstraints', nullable: boolean, unique: boolean, other: Array<string> } }>, constraints: { __typename: 'TableConstraints', other: Array<string> } | null } } } | { __typename: 'TableSchemaMetadataEntry', label: string, description: string | null, schema: { __typename: 'TableSchema', columns: Array<{ __typename: 'TableColumn', name: string, description: string | null, type: string, constraints: { __typename: 'TableColumnConstraints', nullable: boolean, unique: boolean, other: Array<string> } }>, constraints: { __typename: 'TableConstraints', other: Array<string> } | null } } | { __typename: 'TextMetadataEntry', text: string, label: string, description: string | null } | { __typename: 'UrlMetadataEntry', url: string, label: string, description: string | null }>, solidHandle: { __typename: 'SolidHandle', handleID: string, solid: { __typename: 'Solid', name: string, isDynamicMapped: boolean, definition: { __typename: 'CompositeSolidDefinition', name: string, id: string, description: string | null, inputMappings: Array<{ __typename: 'InputMapping', definition: { __typename: 'InputDefinition', name: string }, mappedInput: { __typename: 'Input', definition: { __typename: 'InputDefinition', name: string }, solid: { __typename: 'Solid', name: string } } }>, outputMappings: Array<{ __typename: 'OutputMapping', definition: { __typename: 'OutputDefinition', name: string }, mappedOutput: { __typename: 'Output', definition: { __typename: 'OutputDefinition', name: string }, solid: { __typename: 'Solid', name: string } } }>, metadata: Array<{ __typename: 'MetadataItemDefinition', key: string, value: string }>, assetNodes: Array<{ __typename: 'AssetNode', id: string, assetKey: { __typename: 'AssetKey', path: Array<string> } }>, inputDefinitions: Array<{ __typename: 'InputDefinition', name: string, type: { __typename: 'ListDagsterType', displayName: string } | { __typename: 'NullableDagsterType', displayName: string } | { __typename: 'RegularDagsterType', displayName: string } }>, outputDefinitions: Array<{ __typename: 'OutputDefinition', name: string, isDynamic: boolean | null, type: { __typename: 'ListDagsterType', displayName: string } | { __typename: 'NullableDagsterType', displayName: string } | { __typename: 'RegularDagsterType', displayName: string } }> } | { __typename: 'SolidDefinition', name: string, description: string | null, configField: { __typename: 'ConfigTypeField', configType: { __typename: 'ArrayConfigType', key: string, description: string | null } | { __typename: 'CompositeConfigType', key: string, description: string | null } | { __typename: 'EnumConfigType', key: string, description: string | null } | { __typename: 'MapConfigType', key: string, description: string | null } | { __typename: 'NullableConfigType', key: string, description: string | null } | { __typename: 'RegularConfigType', key: string, description: string | null } | { __typename: 'ScalarUnionConfigType', key: string, description: string | null } } | null, metadata: Array<{ __typename: 'MetadataItemDefinition', key: string, value: string }>, assetNodes: Array<{ __typename: 'AssetNode', id: string, assetKey: { __typename: 'AssetKey', path: Array<string> } }>, inputDefinitions: Array<{ __typename: 'InputDefinition', name: string, type: { __typename: 'ListDagsterType', displayName: string } | { __typename: 'NullableDagsterType', displayName: string } | { __typename: 'RegularDagsterType', displayName: string } }>, outputDefinitions: Array<{ __typename: 'OutputDefinition', name: string, isDynamic: boolean | null, type: { __typename: 'ListDagsterType', displayName: string } | { __typename: 'NullableDagsterType', displayName: string } | { __typename: 'RegularDagsterType', displayName: string } }> }, inputs: Array<{ __typename: 'Input', isDynamicCollect: boolean, definition: { __typename: 'InputDefinition', name: string }, dependsOn: Array<{ __typename: 'Output', definition: { __typename: 'OutputDefinition', name: string, type: { __typename: 'ListDagsterType', displayName: string } | { __typename: 'NullableDagsterType', displayName: string } | { __typename: 'RegularDagsterType', displayName: string } }, solid: { __typename: 'Solid', name: string } }> }>, outputs: Array<{ __typename: 'Output', definition: { __typename: 'OutputDefinition', name: string }, dependedBy: Array<{ __typename: 'Input', solid: { __typename: 'Solid', name: string }, definition: { __typename: 'InputDefinition', name: string, type: { __typename: 'ListDagsterType', displayName: string } | { __typename: 'NullableDagsterType', displayName: string } | { __typename: 'RegularDagsterType', displayName: string } } }> }> } } | null, solidHandles: Array<{ __typename: 'SolidHandle', handleID: string, solid: { __typename: 'Solid', name: string, isDynamicMapped: boolean, definition: { __typename: 'CompositeSolidDefinition', name: string, id: string, description: string | null, assetNodes: Array<{ __typename: 'AssetNode', id: string, opNames: Array<string>, assetKey: { __typename: 'AssetKey', path: Array<string> } }>, inputMappings: Array<{ __typename: 'InputMapping', definition: { __typename: 'InputDefinition', name: string }, mappedInput: { __typename: 'Input', definition: { __typename: 'InputDefinition', name: string }, solid: { __typename: 'Solid', name: string } } }>, outputMappings: Array<{ __typename: 'OutputMapping', definition: { __typename: 'OutputDefinition', name: string }, mappedOutput: { __typename: 'Output', definition: { __typename: 'OutputDefinition', name: string }, solid: { __typename: 'Solid', name: string } } }>, metadata: Array<{ __typename: 'MetadataItemDefinition', key: string, value: string }>, inputDefinitions: Array<{ __typename: 'InputDefinition', name: string, type: { __typename: 'ListDagsterType', displayName: string } | { __typename: 'NullableDagsterType', displayName: string } | { __typename: 'RegularDagsterType', displayName: string } }>, outputDefinitions: Array<{ __typename: 'OutputDefinition', name: string, isDynamic: boolean | null, type: { __typename: 'ListDagsterType', displayName: string } | { __typename: 'NullableDagsterType', displayName: string } | { __typename: 'RegularDagsterType', displayName: string } }> } | { __typename: 'SolidDefinition', name: string, description: string | null, assetNodes: Array<{ __typename: 'AssetNode', id: string, opNames: Array<string>, assetKey: { __typename: 'AssetKey', path: Array<string> } }>, configField: { __typename: 'ConfigTypeField', configType: { __typename: 'ArrayConfigType', key: string, description: string | null } | { __typename: 'CompositeConfigType', key: string, description: string | null } | { __typename: 'EnumConfigType', key: string, description: string | null } | { __typename: 'MapConfigType', key: string, description: string | null } | { __typename: 'NullableConfigType', key: string, description: string | null } | { __typename: 'RegularConfigType', key: string, description: string | null } | { __typename: 'ScalarUnionConfigType', key: string, description: string | null } } | null, metadata: Array<{ __typename: 'MetadataItemDefinition', key: string, value: string }>, inputDefinitions: Array<{ __typename: 'InputDefinition', name: string, type: { __typename: 'ListDagsterType', displayName: string } | { __typename: 'NullableDagsterType', displayName: string } | { __typename: 'RegularDagsterType', displayName: string } }>, outputDefinitions: Array<{ __typename: 'OutputDefinition', name: string, isDynamic: boolean | null, type: { __typename: 'ListDagsterType', displayName: string } | { __typename: 'NullableDagsterType', displayName: string } | { __typename: 'RegularDagsterType', displayName: string } }> }, inputs: Array<{ __typename: 'Input', isDynamicCollect: boolean, definition: { __typename: 'InputDefinition', name: string }, dependsOn: Array<{ __typename: 'Output', definition: { __typename: 'OutputDefinition', name: string, type: { __typename: 'ListDagsterType', displayName: string } | { __typename: 'NullableDagsterType', displayName: string } | { __typename: 'RegularDagsterType', displayName: string } }, solid: { __typename: 'Solid', name: string } }> }>, outputs: Array<{ __typename: 'Output', definition: { __typename: 'OutputDefinition', name: string }, dependedBy: Array<{ __typename: 'Input', solid: { __typename: 'Solid', name: string }, definition: { __typename: 'InputDefinition', name: string, type: { __typename: 'ListDagsterType', displayName: string } | { __typename: 'NullableDagsterType', displayName: string } | { __typename: 'RegularDagsterType', displayName: string } } }> }> } }>, modes: Array<{ __typename: 'Mode', id: string, name: string, description: string | null, resources: Array<{ __typename: 'Resource', name: string, description: string | null, configField: { __typename: 'ConfigTypeField', configType: { __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } } | null }>, loggers: Array<{ __typename: 'Logger', name: string, description: string | null, configField: { __typename: 'ConfigTypeField', configType: { __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } } | null }> }> } | { __typename: 'PipelineSnapshotNotFoundError', message: string } | { __typename: 'PythonError', message: string, stack: Array<string>, errorChain: Array<{ __typename: 'ErrorChainLink', isExplicitLink: boolean, error: { __typename: 'PythonError', message: string, stack: Array<string> } }> } };

export type PipelineRunsRootQueryQueryVariables = Exact<{
  limit?: InputMaybe<Scalars['Int']>;
  cursor?: InputMaybe<Scalars['String']>;
  filter: RunsFilter;
}>;


export type PipelineRunsRootQueryQuery = { __typename: 'DagitQuery', pipelineRunsOrError: { __typename: 'InvalidPipelineRunsFilterError', message: string } | { __typename: 'PythonError', message: string, stack: Array<string>, errorChain: Array<{ __typename: 'ErrorChainLink', isExplicitLink: boolean, error: { __typename: 'PythonError', message: string, stack: Array<string> } }> } | { __typename: 'Runs', results: Array<{ __typename: 'Run', id: string, runId: string, status: RunStatus, stepKeysToExecute: Array<string> | null, canTerminate: boolean, mode: string, rootRunId: string | null, parentRunId: string | null, pipelineSnapshotId: string | null, parentPipelineSnapshotId: string | null, pipelineName: string, solidSelection: Array<string> | null, startTime: number | null, endTime: number | null, updateTime: number | null, repositoryOrigin: { __typename: 'RepositoryOrigin', id: string, repositoryName: string, repositoryLocationName: string } | null, assetSelection: Array<{ __typename: 'AssetKey', path: Array<string> }> | null, tags: Array<{ __typename: 'PipelineTag', key: string, value: string }> }> } };

export type PipelineTableFragmentFragment = { __typename: 'Pipeline', id: string, description: string | null, isJob: boolean, name: string, modes: Array<{ __typename: 'Mode', id: string, name: string }>, runs: Array<{ __typename: 'Run', id: string, mode: string, runId: string, status: RunStatus }>, schedules: Array<{ __typename: 'Schedule', id: string, name: string, mode: string }>, sensors: Array<{ __typename: 'Sensor', id: string, name: string, targets: Array<{ __typename: 'Target', mode: string, pipelineName: string }> | null }> };

type SidebarRootContainerFragment_CompositeSolidDefinition_Fragment = { __typename: 'CompositeSolidDefinition', id: string, name: string, description: string | null, modes: Array<{ __typename: 'Mode', id: string, name: string, description: string | null, resources: Array<{ __typename: 'Resource', name: string, description: string | null, configField: { __typename: 'ConfigTypeField', configType: { __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } } | null }>, loggers: Array<{ __typename: 'Logger', name: string, description: string | null, configField: { __typename: 'ConfigTypeField', configType: { __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } } | null }> }> };

type SidebarRootContainerFragment_Graph_Fragment = { __typename: 'Graph', id: string, name: string, description: string | null, modes: Array<{ __typename: 'Mode', id: string, name: string, description: string | null, resources: Array<{ __typename: 'Resource', name: string, description: string | null, configField: { __typename: 'ConfigTypeField', configType: { __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } } | null }>, loggers: Array<{ __typename: 'Logger', name: string, description: string | null, configField: { __typename: 'ConfigTypeField', configType: { __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } } | null }> }> };

type SidebarRootContainerFragment_Job_Fragment = { __typename: 'Job', id: string, name: string, description: string | null, modes: Array<{ __typename: 'Mode', id: string, name: string, description: string | null, resources: Array<{ __typename: 'Resource', name: string, description: string | null, configField: { __typename: 'ConfigTypeField', configType: { __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } } | null }>, loggers: Array<{ __typename: 'Logger', name: string, description: string | null, configField: { __typename: 'ConfigTypeField', configType: { __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } } | null }> }> };

type SidebarRootContainerFragment_Pipeline_Fragment = { __typename: 'Pipeline', id: string, name: string, description: string | null, modes: Array<{ __typename: 'Mode', id: string, name: string, description: string | null, resources: Array<{ __typename: 'Resource', name: string, description: string | null, configField: { __typename: 'ConfigTypeField', configType: { __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } } | null }>, loggers: Array<{ __typename: 'Logger', name: string, description: string | null, configField: { __typename: 'ConfigTypeField', configType: { __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } } | null }> }> };

type SidebarRootContainerFragment_PipelineSnapshot_Fragment = { __typename: 'PipelineSnapshot', pipelineSnapshotId: string, parentSnapshotId: string | null, id: string, name: string, description: string | null, metadataEntries: Array<{ __typename: 'AssetMetadataEntry', label: string, description: string | null, assetKey: { __typename: 'AssetKey', path: Array<string> } } | { __typename: 'BoolMetadataEntry', boolValue: boolean | null, label: string, description: string | null } | { __typename: 'FloatMetadataEntry', floatValue: number | null, label: string, description: string | null } | { __typename: 'IntMetadataEntry', intValue: number | null, intRepr: string, label: string, description: string | null } | { __typename: 'JsonMetadataEntry', jsonString: string, label: string, description: string | null } | { __typename: 'MarkdownMetadataEntry', mdStr: string, label: string, description: string | null } | { __typename: 'NotebookMetadataEntry', path: string, label: string, description: string | null } | { __typename: 'NullMetadataEntry', label: string, description: string | null } | { __typename: 'PathMetadataEntry', path: string, label: string, description: string | null } | { __typename: 'PipelineRunMetadataEntry', runId: string, label: string, description: string | null } | { __typename: 'PythonArtifactMetadataEntry', module: string, name: string, label: string, description: string | null } | { __typename: 'TableMetadataEntry', label: string, description: string | null, table: { __typename: 'Table', records: Array<string>, schema: { __typename: 'TableSchema', columns: Array<{ __typename: 'TableColumn', name: string, description: string | null, type: string, constraints: { __typename: 'TableColumnConstraints', nullable: boolean, unique: boolean, other: Array<string> } }>, constraints: { __typename: 'TableConstraints', other: Array<string> } | null } } } | { __typename: 'TableSchemaMetadataEntry', label: string, description: string | null, schema: { __typename: 'TableSchema', columns: Array<{ __typename: 'TableColumn', name: string, description: string | null, type: string, constraints: { __typename: 'TableColumnConstraints', nullable: boolean, unique: boolean, other: Array<string> } }>, constraints: { __typename: 'TableConstraints', other: Array<string> } | null } } | { __typename: 'TextMetadataEntry', text: string, label: string, description: string | null } | { __typename: 'UrlMetadataEntry', url: string, label: string, description: string | null }>, modes: Array<{ __typename: 'Mode', id: string, name: string, description: string | null, resources: Array<{ __typename: 'Resource', name: string, description: string | null, configField: { __typename: 'ConfigTypeField', configType: { __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } } | null }>, loggers: Array<{ __typename: 'Logger', name: string, description: string | null, configField: { __typename: 'ConfigTypeField', configType: { __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } } | null }> }> };

export type SidebarRootContainerFragmentFragment = SidebarRootContainerFragment_CompositeSolidDefinition_Fragment | SidebarRootContainerFragment_Graph_Fragment | SidebarRootContainerFragment_Job_Fragment | SidebarRootContainerFragment_Pipeline_Fragment | SidebarRootContainerFragment_PipelineSnapshot_Fragment;

type SidebarOpFragment_CompositeSolidDefinition_Fragment = { __typename: 'CompositeSolidDefinition', id: string, name: string, solidHandle: { __typename: 'SolidHandle', solid: { __typename: 'Solid', name: string, definition: { __typename: 'CompositeSolidDefinition', id: string, name: string, description: string | null, inputMappings: Array<{ __typename: 'InputMapping', definition: { __typename: 'InputDefinition', name: string }, mappedInput: { __typename: 'Input', definition: { __typename: 'InputDefinition', name: string }, solid: { __typename: 'Solid', name: string } } }>, outputMappings: Array<{ __typename: 'OutputMapping', definition: { __typename: 'OutputDefinition', name: string }, mappedOutput: { __typename: 'Output', definition: { __typename: 'OutputDefinition', name: string }, solid: { __typename: 'Solid', name: string } } }>, metadata: Array<{ __typename: 'MetadataItemDefinition', key: string, value: string }>, assetNodes: Array<{ __typename: 'AssetNode', id: string, assetKey: { __typename: 'AssetKey', path: Array<string> } }>, outputDefinitions: Array<{ __typename: 'OutputDefinition', name: string, description: string | null, isDynamic: boolean | null, type: { __typename: 'ListDagsterType', name: string | null, displayName: string, description: string | null } | { __typename: 'NullableDagsterType', name: string | null, displayName: string, description: string | null } | { __typename: 'RegularDagsterType', name: string | null, displayName: string, description: string | null } }>, inputDefinitions: Array<{ __typename: 'InputDefinition', name: string, description: string | null, type: { __typename: 'ListDagsterType', name: string | null, displayName: string, description: string | null } | { __typename: 'NullableDagsterType', name: string | null, displayName: string, description: string | null } | { __typename: 'RegularDagsterType', name: string | null, displayName: string, description: string | null } }> } | { __typename: 'SolidDefinition', name: string, description: string | null, requiredResources: Array<{ __typename: 'ResourceRequirement', resourceKey: string }>, configField: { __typename: 'ConfigTypeField', configType: { __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } } | null, metadata: Array<{ __typename: 'MetadataItemDefinition', key: string, value: string }>, assetNodes: Array<{ __typename: 'AssetNode', id: string, assetKey: { __typename: 'AssetKey', path: Array<string> } }>, outputDefinitions: Array<{ __typename: 'OutputDefinition', name: string, description: string | null, isDynamic: boolean | null, type: { __typename: 'ListDagsterType', name: string | null, displayName: string, description: string | null } | { __typename: 'NullableDagsterType', name: string | null, displayName: string, description: string | null } | { __typename: 'RegularDagsterType', name: string | null, displayName: string, description: string | null } }>, inputDefinitions: Array<{ __typename: 'InputDefinition', name: string, description: string | null, type: { __typename: 'ListDagsterType', name: string | null, displayName: string, description: string | null } | { __typename: 'NullableDagsterType', name: string | null, displayName: string, description: string | null } | { __typename: 'RegularDagsterType', name: string | null, displayName: string, description: string | null } }> }, inputs: Array<{ __typename: 'Input', isDynamicCollect: boolean, definition: { __typename: 'InputDefinition', name: string, description: string | null, type: { __typename: 'ListDagsterType', name: string | null, displayName: string, description: string | null } | { __typename: 'NullableDagsterType', name: string | null, displayName: string, description: string | null } | { __typename: 'RegularDagsterType', name: string | null, displayName: string, description: string | null } }, dependsOn: Array<{ __typename: 'Output', definition: { __typename: 'OutputDefinition', name: string }, solid: { __typename: 'Solid', name: string } }> }>, outputs: Array<{ __typename: 'Output', definition: { __typename: 'OutputDefinition', name: string, description: string | null, isDynamic: boolean | null, type: { __typename: 'ListDagsterType', name: string | null, displayName: string, description: string | null } | { __typename: 'NullableDagsterType', name: string | null, displayName: string, description: string | null } | { __typename: 'RegularDagsterType', name: string | null, displayName: string, description: string | null } }, dependedBy: Array<{ __typename: 'Input', definition: { __typename: 'InputDefinition', name: string }, solid: { __typename: 'Solid', name: string } }> }> } } | null };

type SidebarOpFragment_Graph_Fragment = { __typename: 'Graph', id: string, name: string, solidHandle: { __typename: 'SolidHandle', solid: { __typename: 'Solid', name: string, definition: { __typename: 'CompositeSolidDefinition', id: string, name: string, description: string | null, inputMappings: Array<{ __typename: 'InputMapping', definition: { __typename: 'InputDefinition', name: string }, mappedInput: { __typename: 'Input', definition: { __typename: 'InputDefinition', name: string }, solid: { __typename: 'Solid', name: string } } }>, outputMappings: Array<{ __typename: 'OutputMapping', definition: { __typename: 'OutputDefinition', name: string }, mappedOutput: { __typename: 'Output', definition: { __typename: 'OutputDefinition', name: string }, solid: { __typename: 'Solid', name: string } } }>, metadata: Array<{ __typename: 'MetadataItemDefinition', key: string, value: string }>, assetNodes: Array<{ __typename: 'AssetNode', id: string, assetKey: { __typename: 'AssetKey', path: Array<string> } }>, outputDefinitions: Array<{ __typename: 'OutputDefinition', name: string, description: string | null, isDynamic: boolean | null, type: { __typename: 'ListDagsterType', name: string | null, displayName: string, description: string | null } | { __typename: 'NullableDagsterType', name: string | null, displayName: string, description: string | null } | { __typename: 'RegularDagsterType', name: string | null, displayName: string, description: string | null } }>, inputDefinitions: Array<{ __typename: 'InputDefinition', name: string, description: string | null, type: { __typename: 'ListDagsterType', name: string | null, displayName: string, description: string | null } | { __typename: 'NullableDagsterType', name: string | null, displayName: string, description: string | null } | { __typename: 'RegularDagsterType', name: string | null, displayName: string, description: string | null } }> } | { __typename: 'SolidDefinition', name: string, description: string | null, requiredResources: Array<{ __typename: 'ResourceRequirement', resourceKey: string }>, configField: { __typename: 'ConfigTypeField', configType: { __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } } | null, metadata: Array<{ __typename: 'MetadataItemDefinition', key: string, value: string }>, assetNodes: Array<{ __typename: 'AssetNode', id: string, assetKey: { __typename: 'AssetKey', path: Array<string> } }>, outputDefinitions: Array<{ __typename: 'OutputDefinition', name: string, description: string | null, isDynamic: boolean | null, type: { __typename: 'ListDagsterType', name: string | null, displayName: string, description: string | null } | { __typename: 'NullableDagsterType', name: string | null, displayName: string, description: string | null } | { __typename: 'RegularDagsterType', name: string | null, displayName: string, description: string | null } }>, inputDefinitions: Array<{ __typename: 'InputDefinition', name: string, description: string | null, type: { __typename: 'ListDagsterType', name: string | null, displayName: string, description: string | null } | { __typename: 'NullableDagsterType', name: string | null, displayName: string, description: string | null } | { __typename: 'RegularDagsterType', name: string | null, displayName: string, description: string | null } }> }, inputs: Array<{ __typename: 'Input', isDynamicCollect: boolean, definition: { __typename: 'InputDefinition', name: string, description: string | null, type: { __typename: 'ListDagsterType', name: string | null, displayName: string, description: string | null } | { __typename: 'NullableDagsterType', name: string | null, displayName: string, description: string | null } | { __typename: 'RegularDagsterType', name: string | null, displayName: string, description: string | null } }, dependsOn: Array<{ __typename: 'Output', definition: { __typename: 'OutputDefinition', name: string }, solid: { __typename: 'Solid', name: string } }> }>, outputs: Array<{ __typename: 'Output', definition: { __typename: 'OutputDefinition', name: string, description: string | null, isDynamic: boolean | null, type: { __typename: 'ListDagsterType', name: string | null, displayName: string, description: string | null } | { __typename: 'NullableDagsterType', name: string | null, displayName: string, description: string | null } | { __typename: 'RegularDagsterType', name: string | null, displayName: string, description: string | null } }, dependedBy: Array<{ __typename: 'Input', definition: { __typename: 'InputDefinition', name: string }, solid: { __typename: 'Solid', name: string } }> }> } } | null };

type SidebarOpFragment_Job_Fragment = { __typename: 'Job', id: string, name: string, solidHandle: { __typename: 'SolidHandle', solid: { __typename: 'Solid', name: string, definition: { __typename: 'CompositeSolidDefinition', id: string, name: string, description: string | null, inputMappings: Array<{ __typename: 'InputMapping', definition: { __typename: 'InputDefinition', name: string }, mappedInput: { __typename: 'Input', definition: { __typename: 'InputDefinition', name: string }, solid: { __typename: 'Solid', name: string } } }>, outputMappings: Array<{ __typename: 'OutputMapping', definition: { __typename: 'OutputDefinition', name: string }, mappedOutput: { __typename: 'Output', definition: { __typename: 'OutputDefinition', name: string }, solid: { __typename: 'Solid', name: string } } }>, metadata: Array<{ __typename: 'MetadataItemDefinition', key: string, value: string }>, assetNodes: Array<{ __typename: 'AssetNode', id: string, assetKey: { __typename: 'AssetKey', path: Array<string> } }>, outputDefinitions: Array<{ __typename: 'OutputDefinition', name: string, description: string | null, isDynamic: boolean | null, type: { __typename: 'ListDagsterType', name: string | null, displayName: string, description: string | null } | { __typename: 'NullableDagsterType', name: string | null, displayName: string, description: string | null } | { __typename: 'RegularDagsterType', name: string | null, displayName: string, description: string | null } }>, inputDefinitions: Array<{ __typename: 'InputDefinition', name: string, description: string | null, type: { __typename: 'ListDagsterType', name: string | null, displayName: string, description: string | null } | { __typename: 'NullableDagsterType', name: string | null, displayName: string, description: string | null } | { __typename: 'RegularDagsterType', name: string | null, displayName: string, description: string | null } }> } | { __typename: 'SolidDefinition', name: string, description: string | null, requiredResources: Array<{ __typename: 'ResourceRequirement', resourceKey: string }>, configField: { __typename: 'ConfigTypeField', configType: { __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } } | null, metadata: Array<{ __typename: 'MetadataItemDefinition', key: string, value: string }>, assetNodes: Array<{ __typename: 'AssetNode', id: string, assetKey: { __typename: 'AssetKey', path: Array<string> } }>, outputDefinitions: Array<{ __typename: 'OutputDefinition', name: string, description: string | null, isDynamic: boolean | null, type: { __typename: 'ListDagsterType', name: string | null, displayName: string, description: string | null } | { __typename: 'NullableDagsterType', name: string | null, displayName: string, description: string | null } | { __typename: 'RegularDagsterType', name: string | null, displayName: string, description: string | null } }>, inputDefinitions: Array<{ __typename: 'InputDefinition', name: string, description: string | null, type: { __typename: 'ListDagsterType', name: string | null, displayName: string, description: string | null } | { __typename: 'NullableDagsterType', name: string | null, displayName: string, description: string | null } | { __typename: 'RegularDagsterType', name: string | null, displayName: string, description: string | null } }> }, inputs: Array<{ __typename: 'Input', isDynamicCollect: boolean, definition: { __typename: 'InputDefinition', name: string, description: string | null, type: { __typename: 'ListDagsterType', name: string | null, displayName: string, description: string | null } | { __typename: 'NullableDagsterType', name: string | null, displayName: string, description: string | null } | { __typename: 'RegularDagsterType', name: string | null, displayName: string, description: string | null } }, dependsOn: Array<{ __typename: 'Output', definition: { __typename: 'OutputDefinition', name: string }, solid: { __typename: 'Solid', name: string } }> }>, outputs: Array<{ __typename: 'Output', definition: { __typename: 'OutputDefinition', name: string, description: string | null, isDynamic: boolean | null, type: { __typename: 'ListDagsterType', name: string | null, displayName: string, description: string | null } | { __typename: 'NullableDagsterType', name: string | null, displayName: string, description: string | null } | { __typename: 'RegularDagsterType', name: string | null, displayName: string, description: string | null } }, dependedBy: Array<{ __typename: 'Input', definition: { __typename: 'InputDefinition', name: string }, solid: { __typename: 'Solid', name: string } }> }> } } | null };

type SidebarOpFragment_Pipeline_Fragment = { __typename: 'Pipeline', id: string, name: string, solidHandle: { __typename: 'SolidHandle', solid: { __typename: 'Solid', name: string, definition: { __typename: 'CompositeSolidDefinition', id: string, name: string, description: string | null, inputMappings: Array<{ __typename: 'InputMapping', definition: { __typename: 'InputDefinition', name: string }, mappedInput: { __typename: 'Input', definition: { __typename: 'InputDefinition', name: string }, solid: { __typename: 'Solid', name: string } } }>, outputMappings: Array<{ __typename: 'OutputMapping', definition: { __typename: 'OutputDefinition', name: string }, mappedOutput: { __typename: 'Output', definition: { __typename: 'OutputDefinition', name: string }, solid: { __typename: 'Solid', name: string } } }>, metadata: Array<{ __typename: 'MetadataItemDefinition', key: string, value: string }>, assetNodes: Array<{ __typename: 'AssetNode', id: string, assetKey: { __typename: 'AssetKey', path: Array<string> } }>, outputDefinitions: Array<{ __typename: 'OutputDefinition', name: string, description: string | null, isDynamic: boolean | null, type: { __typename: 'ListDagsterType', name: string | null, displayName: string, description: string | null } | { __typename: 'NullableDagsterType', name: string | null, displayName: string, description: string | null } | { __typename: 'RegularDagsterType', name: string | null, displayName: string, description: string | null } }>, inputDefinitions: Array<{ __typename: 'InputDefinition', name: string, description: string | null, type: { __typename: 'ListDagsterType', name: string | null, displayName: string, description: string | null } | { __typename: 'NullableDagsterType', name: string | null, displayName: string, description: string | null } | { __typename: 'RegularDagsterType', name: string | null, displayName: string, description: string | null } }> } | { __typename: 'SolidDefinition', name: string, description: string | null, requiredResources: Array<{ __typename: 'ResourceRequirement', resourceKey: string }>, configField: { __typename: 'ConfigTypeField', configType: { __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } } | null, metadata: Array<{ __typename: 'MetadataItemDefinition', key: string, value: string }>, assetNodes: Array<{ __typename: 'AssetNode', id: string, assetKey: { __typename: 'AssetKey', path: Array<string> } }>, outputDefinitions: Array<{ __typename: 'OutputDefinition', name: string, description: string | null, isDynamic: boolean | null, type: { __typename: 'ListDagsterType', name: string | null, displayName: string, description: string | null } | { __typename: 'NullableDagsterType', name: string | null, displayName: string, description: string | null } | { __typename: 'RegularDagsterType', name: string | null, displayName: string, description: string | null } }>, inputDefinitions: Array<{ __typename: 'InputDefinition', name: string, description: string | null, type: { __typename: 'ListDagsterType', name: string | null, displayName: string, description: string | null } | { __typename: 'NullableDagsterType', name: string | null, displayName: string, description: string | null } | { __typename: 'RegularDagsterType', name: string | null, displayName: string, description: string | null } }> }, inputs: Array<{ __typename: 'Input', isDynamicCollect: boolean, definition: { __typename: 'InputDefinition', name: string, description: string | null, type: { __typename: 'ListDagsterType', name: string | null, displayName: string, description: string | null } | { __typename: 'NullableDagsterType', name: string | null, displayName: string, description: string | null } | { __typename: 'RegularDagsterType', name: string | null, displayName: string, description: string | null } }, dependsOn: Array<{ __typename: 'Output', definition: { __typename: 'OutputDefinition', name: string }, solid: { __typename: 'Solid', name: string } }> }>, outputs: Array<{ __typename: 'Output', definition: { __typename: 'OutputDefinition', name: string, description: string | null, isDynamic: boolean | null, type: { __typename: 'ListDagsterType', name: string | null, displayName: string, description: string | null } | { __typename: 'NullableDagsterType', name: string | null, displayName: string, description: string | null } | { __typename: 'RegularDagsterType', name: string | null, displayName: string, description: string | null } }, dependedBy: Array<{ __typename: 'Input', definition: { __typename: 'InputDefinition', name: string }, solid: { __typename: 'Solid', name: string } }> }> } } | null };

type SidebarOpFragment_PipelineSnapshot_Fragment = { __typename: 'PipelineSnapshot', id: string, name: string, solidHandle: { __typename: 'SolidHandle', solid: { __typename: 'Solid', name: string, definition: { __typename: 'CompositeSolidDefinition', id: string, name: string, description: string | null, inputMappings: Array<{ __typename: 'InputMapping', definition: { __typename: 'InputDefinition', name: string }, mappedInput: { __typename: 'Input', definition: { __typename: 'InputDefinition', name: string }, solid: { __typename: 'Solid', name: string } } }>, outputMappings: Array<{ __typename: 'OutputMapping', definition: { __typename: 'OutputDefinition', name: string }, mappedOutput: { __typename: 'Output', definition: { __typename: 'OutputDefinition', name: string }, solid: { __typename: 'Solid', name: string } } }>, metadata: Array<{ __typename: 'MetadataItemDefinition', key: string, value: string }>, assetNodes: Array<{ __typename: 'AssetNode', id: string, assetKey: { __typename: 'AssetKey', path: Array<string> } }>, outputDefinitions: Array<{ __typename: 'OutputDefinition', name: string, description: string | null, isDynamic: boolean | null, type: { __typename: 'ListDagsterType', name: string | null, displayName: string, description: string | null } | { __typename: 'NullableDagsterType', name: string | null, displayName: string, description: string | null } | { __typename: 'RegularDagsterType', name: string | null, displayName: string, description: string | null } }>, inputDefinitions: Array<{ __typename: 'InputDefinition', name: string, description: string | null, type: { __typename: 'ListDagsterType', name: string | null, displayName: string, description: string | null } | { __typename: 'NullableDagsterType', name: string | null, displayName: string, description: string | null } | { __typename: 'RegularDagsterType', name: string | null, displayName: string, description: string | null } }> } | { __typename: 'SolidDefinition', name: string, description: string | null, requiredResources: Array<{ __typename: 'ResourceRequirement', resourceKey: string }>, configField: { __typename: 'ConfigTypeField', configType: { __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } } | null, metadata: Array<{ __typename: 'MetadataItemDefinition', key: string, value: string }>, assetNodes: Array<{ __typename: 'AssetNode', id: string, assetKey: { __typename: 'AssetKey', path: Array<string> } }>, outputDefinitions: Array<{ __typename: 'OutputDefinition', name: string, description: string | null, isDynamic: boolean | null, type: { __typename: 'ListDagsterType', name: string | null, displayName: string, description: string | null } | { __typename: 'NullableDagsterType', name: string | null, displayName: string, description: string | null } | { __typename: 'RegularDagsterType', name: string | null, displayName: string, description: string | null } }>, inputDefinitions: Array<{ __typename: 'InputDefinition', name: string, description: string | null, type: { __typename: 'ListDagsterType', name: string | null, displayName: string, description: string | null } | { __typename: 'NullableDagsterType', name: string | null, displayName: string, description: string | null } | { __typename: 'RegularDagsterType', name: string | null, displayName: string, description: string | null } }> }, inputs: Array<{ __typename: 'Input', isDynamicCollect: boolean, definition: { __typename: 'InputDefinition', name: string, description: string | null, type: { __typename: 'ListDagsterType', name: string | null, displayName: string, description: string | null } | { __typename: 'NullableDagsterType', name: string | null, displayName: string, description: string | null } | { __typename: 'RegularDagsterType', name: string | null, displayName: string, description: string | null } }, dependsOn: Array<{ __typename: 'Output', definition: { __typename: 'OutputDefinition', name: string }, solid: { __typename: 'Solid', name: string } }> }>, outputs: Array<{ __typename: 'Output', definition: { __typename: 'OutputDefinition', name: string, description: string | null, isDynamic: boolean | null, type: { __typename: 'ListDagsterType', name: string | null, displayName: string, description: string | null } | { __typename: 'NullableDagsterType', name: string | null, displayName: string, description: string | null } | { __typename: 'RegularDagsterType', name: string | null, displayName: string, description: string | null } }, dependedBy: Array<{ __typename: 'Input', definition: { __typename: 'InputDefinition', name: string }, solid: { __typename: 'Solid', name: string } }> }> } } | null };

export type SidebarOpFragmentFragment = SidebarOpFragment_CompositeSolidDefinition_Fragment | SidebarOpFragment_Graph_Fragment | SidebarOpFragment_Job_Fragment | SidebarOpFragment_Pipeline_Fragment | SidebarOpFragment_PipelineSnapshot_Fragment;

export type SidebarPipelineOpQueryQueryVariables = Exact<{
  selector: PipelineSelector;
  handleID: Scalars['String'];
}>;


export type SidebarPipelineOpQueryQuery = { __typename: 'DagitQuery', pipelineOrError: { __typename: 'InvalidSubsetError' } | { __typename: 'Pipeline', id: string, name: string, solidHandle: { __typename: 'SolidHandle', solid: { __typename: 'Solid', name: string, definition: { __typename: 'CompositeSolidDefinition', id: string, name: string, description: string | null, inputMappings: Array<{ __typename: 'InputMapping', definition: { __typename: 'InputDefinition', name: string }, mappedInput: { __typename: 'Input', definition: { __typename: 'InputDefinition', name: string }, solid: { __typename: 'Solid', name: string } } }>, outputMappings: Array<{ __typename: 'OutputMapping', definition: { __typename: 'OutputDefinition', name: string }, mappedOutput: { __typename: 'Output', definition: { __typename: 'OutputDefinition', name: string }, solid: { __typename: 'Solid', name: string } } }>, metadata: Array<{ __typename: 'MetadataItemDefinition', key: string, value: string }>, assetNodes: Array<{ __typename: 'AssetNode', id: string, assetKey: { __typename: 'AssetKey', path: Array<string> } }>, outputDefinitions: Array<{ __typename: 'OutputDefinition', name: string, description: string | null, isDynamic: boolean | null, type: { __typename: 'ListDagsterType', name: string | null, displayName: string, description: string | null } | { __typename: 'NullableDagsterType', name: string | null, displayName: string, description: string | null } | { __typename: 'RegularDagsterType', name: string | null, displayName: string, description: string | null } }>, inputDefinitions: Array<{ __typename: 'InputDefinition', name: string, description: string | null, type: { __typename: 'ListDagsterType', name: string | null, displayName: string, description: string | null } | { __typename: 'NullableDagsterType', name: string | null, displayName: string, description: string | null } | { __typename: 'RegularDagsterType', name: string | null, displayName: string, description: string | null } }> } | { __typename: 'SolidDefinition', name: string, description: string | null, requiredResources: Array<{ __typename: 'ResourceRequirement', resourceKey: string }>, configField: { __typename: 'ConfigTypeField', configType: { __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } } | null, metadata: Array<{ __typename: 'MetadataItemDefinition', key: string, value: string }>, assetNodes: Array<{ __typename: 'AssetNode', id: string, assetKey: { __typename: 'AssetKey', path: Array<string> } }>, outputDefinitions: Array<{ __typename: 'OutputDefinition', name: string, description: string | null, isDynamic: boolean | null, type: { __typename: 'ListDagsterType', name: string | null, displayName: string, description: string | null } | { __typename: 'NullableDagsterType', name: string | null, displayName: string, description: string | null } | { __typename: 'RegularDagsterType', name: string | null, displayName: string, description: string | null } }>, inputDefinitions: Array<{ __typename: 'InputDefinition', name: string, description: string | null, type: { __typename: 'ListDagsterType', name: string | null, displayName: string, description: string | null } | { __typename: 'NullableDagsterType', name: string | null, displayName: string, description: string | null } | { __typename: 'RegularDagsterType', name: string | null, displayName: string, description: string | null } }> }, inputs: Array<{ __typename: 'Input', isDynamicCollect: boolean, definition: { __typename: 'InputDefinition', name: string, description: string | null, type: { __typename: 'ListDagsterType', name: string | null, displayName: string, description: string | null } | { __typename: 'NullableDagsterType', name: string | null, displayName: string, description: string | null } | { __typename: 'RegularDagsterType', name: string | null, displayName: string, description: string | null } }, dependsOn: Array<{ __typename: 'Output', definition: { __typename: 'OutputDefinition', name: string }, solid: { __typename: 'Solid', name: string } }> }>, outputs: Array<{ __typename: 'Output', definition: { __typename: 'OutputDefinition', name: string, description: string | null, isDynamic: boolean | null, type: { __typename: 'ListDagsterType', name: string | null, displayName: string, description: string | null } | { __typename: 'NullableDagsterType', name: string | null, displayName: string, description: string | null } | { __typename: 'RegularDagsterType', name: string | null, displayName: string, description: string | null } }, dependedBy: Array<{ __typename: 'Input', definition: { __typename: 'InputDefinition', name: string }, solid: { __typename: 'Solid', name: string } }> }> } } | null } | { __typename: 'PipelineNotFoundError' } | { __typename: 'PythonError' } };

export type SidebarGraphOpQueryQueryVariables = Exact<{
  selector: GraphSelector;
  handleID: Scalars['String'];
}>;


export type SidebarGraphOpQueryQuery = { __typename: 'DagitQuery', graphOrError: { __typename: 'Graph', id: string, name: string, solidHandle: { __typename: 'SolidHandle', solid: { __typename: 'Solid', name: string, definition: { __typename: 'CompositeSolidDefinition', id: string, name: string, description: string | null, inputMappings: Array<{ __typename: 'InputMapping', definition: { __typename: 'InputDefinition', name: string }, mappedInput: { __typename: 'Input', definition: { __typename: 'InputDefinition', name: string }, solid: { __typename: 'Solid', name: string } } }>, outputMappings: Array<{ __typename: 'OutputMapping', definition: { __typename: 'OutputDefinition', name: string }, mappedOutput: { __typename: 'Output', definition: { __typename: 'OutputDefinition', name: string }, solid: { __typename: 'Solid', name: string } } }>, metadata: Array<{ __typename: 'MetadataItemDefinition', key: string, value: string }>, assetNodes: Array<{ __typename: 'AssetNode', id: string, assetKey: { __typename: 'AssetKey', path: Array<string> } }>, outputDefinitions: Array<{ __typename: 'OutputDefinition', name: string, description: string | null, isDynamic: boolean | null, type: { __typename: 'ListDagsterType', name: string | null, displayName: string, description: string | null } | { __typename: 'NullableDagsterType', name: string | null, displayName: string, description: string | null } | { __typename: 'RegularDagsterType', name: string | null, displayName: string, description: string | null } }>, inputDefinitions: Array<{ __typename: 'InputDefinition', name: string, description: string | null, type: { __typename: 'ListDagsterType', name: string | null, displayName: string, description: string | null } | { __typename: 'NullableDagsterType', name: string | null, displayName: string, description: string | null } | { __typename: 'RegularDagsterType', name: string | null, displayName: string, description: string | null } }> } | { __typename: 'SolidDefinition', name: string, description: string | null, requiredResources: Array<{ __typename: 'ResourceRequirement', resourceKey: string }>, configField: { __typename: 'ConfigTypeField', configType: { __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } } | null, metadata: Array<{ __typename: 'MetadataItemDefinition', key: string, value: string }>, assetNodes: Array<{ __typename: 'AssetNode', id: string, assetKey: { __typename: 'AssetKey', path: Array<string> } }>, outputDefinitions: Array<{ __typename: 'OutputDefinition', name: string, description: string | null, isDynamic: boolean | null, type: { __typename: 'ListDagsterType', name: string | null, displayName: string, description: string | null } | { __typename: 'NullableDagsterType', name: string | null, displayName: string, description: string | null } | { __typename: 'RegularDagsterType', name: string | null, displayName: string, description: string | null } }>, inputDefinitions: Array<{ __typename: 'InputDefinition', name: string, description: string | null, type: { __typename: 'ListDagsterType', name: string | null, displayName: string, description: string | null } | { __typename: 'NullableDagsterType', name: string | null, displayName: string, description: string | null } | { __typename: 'RegularDagsterType', name: string | null, displayName: string, description: string | null } }> }, inputs: Array<{ __typename: 'Input', isDynamicCollect: boolean, definition: { __typename: 'InputDefinition', name: string, description: string | null, type: { __typename: 'ListDagsterType', name: string | null, displayName: string, description: string | null } | { __typename: 'NullableDagsterType', name: string | null, displayName: string, description: string | null } | { __typename: 'RegularDagsterType', name: string | null, displayName: string, description: string | null } }, dependsOn: Array<{ __typename: 'Output', definition: { __typename: 'OutputDefinition', name: string }, solid: { __typename: 'Solid', name: string } }> }>, outputs: Array<{ __typename: 'Output', definition: { __typename: 'OutputDefinition', name: string, description: string | null, isDynamic: boolean | null, type: { __typename: 'ListDagsterType', name: string | null, displayName: string, description: string | null } | { __typename: 'NullableDagsterType', name: string | null, displayName: string, description: string | null } | { __typename: 'RegularDagsterType', name: string | null, displayName: string, description: string | null } }, dependedBy: Array<{ __typename: 'Input', definition: { __typename: 'InputDefinition', name: string }, solid: { __typename: 'Solid', name: string } }> }> } } | null } | { __typename: 'GraphNotFoundError' } | { __typename: 'PythonError' } };

type SidebarOpDefinitionFragment_CompositeSolidDefinition_Fragment = { __typename: 'CompositeSolidDefinition', id: string, name: string, description: string | null, inputMappings: Array<{ __typename: 'InputMapping', definition: { __typename: 'InputDefinition', name: string }, mappedInput: { __typename: 'Input', definition: { __typename: 'InputDefinition', name: string }, solid: { __typename: 'Solid', name: string } } }>, outputMappings: Array<{ __typename: 'OutputMapping', definition: { __typename: 'OutputDefinition', name: string }, mappedOutput: { __typename: 'Output', definition: { __typename: 'OutputDefinition', name: string }, solid: { __typename: 'Solid', name: string } } }>, metadata: Array<{ __typename: 'MetadataItemDefinition', key: string, value: string }>, assetNodes: Array<{ __typename: 'AssetNode', id: string, assetKey: { __typename: 'AssetKey', path: Array<string> } }>, outputDefinitions: Array<{ __typename: 'OutputDefinition', name: string, description: string | null, isDynamic: boolean | null, type: { __typename: 'ListDagsterType', name: string | null, displayName: string, description: string | null } | { __typename: 'NullableDagsterType', name: string | null, displayName: string, description: string | null } | { __typename: 'RegularDagsterType', name: string | null, displayName: string, description: string | null } }>, inputDefinitions: Array<{ __typename: 'InputDefinition', name: string, description: string | null, type: { __typename: 'ListDagsterType', name: string | null, displayName: string, description: string | null } | { __typename: 'NullableDagsterType', name: string | null, displayName: string, description: string | null } | { __typename: 'RegularDagsterType', name: string | null, displayName: string, description: string | null } }> };

type SidebarOpDefinitionFragment_SolidDefinition_Fragment = { __typename: 'SolidDefinition', name: string, description: string | null, requiredResources: Array<{ __typename: 'ResourceRequirement', resourceKey: string }>, configField: { __typename: 'ConfigTypeField', configType: { __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } } | null, metadata: Array<{ __typename: 'MetadataItemDefinition', key: string, value: string }>, assetNodes: Array<{ __typename: 'AssetNode', id: string, assetKey: { __typename: 'AssetKey', path: Array<string> } }>, outputDefinitions: Array<{ __typename: 'OutputDefinition', name: string, description: string | null, isDynamic: boolean | null, type: { __typename: 'ListDagsterType', name: string | null, displayName: string, description: string | null } | { __typename: 'NullableDagsterType', name: string | null, displayName: string, description: string | null } | { __typename: 'RegularDagsterType', name: string | null, displayName: string, description: string | null } }>, inputDefinitions: Array<{ __typename: 'InputDefinition', name: string, description: string | null, type: { __typename: 'ListDagsterType', name: string | null, displayName: string, description: string | null } | { __typename: 'NullableDagsterType', name: string | null, displayName: string, description: string | null } | { __typename: 'RegularDagsterType', name: string | null, displayName: string, description: string | null } }> };

export type SidebarOpDefinitionFragmentFragment = SidebarOpDefinitionFragment_CompositeSolidDefinition_Fragment | SidebarOpDefinitionFragment_SolidDefinition_Fragment;

export type SidebarOpGraphsQueryQueryVariables = Exact<{
  selector: PipelineSelector;
  handleID: Scalars['String'];
}>;


export type SidebarOpGraphsQueryQuery = { __typename: 'DagitQuery', pipelineOrError: { __typename: 'InvalidSubsetError' } | { __typename: 'Pipeline', id: string, name: string, solidHandle: { __typename: 'SolidHandle', stepStats: { __typename: 'SolidStepStatsConnection', nodes: Array<{ __typename: 'RunStepStats', runId: string, startTime: number | null, endTime: number | null, status: StepEventStatus | null }> } | { __typename: 'SolidStepStatusUnavailableError' } | null } | null } | { __typename: 'PipelineNotFoundError' } | { __typename: 'PythonError' } };

export type SidebarOpInvocationFragmentFragment = { __typename: 'Solid', name: string, inputs: Array<{ __typename: 'Input', isDynamicCollect: boolean, definition: { __typename: 'InputDefinition', name: string, description: string | null, type: { __typename: 'ListDagsterType', name: string | null, displayName: string, description: string | null } | { __typename: 'NullableDagsterType', name: string | null, displayName: string, description: string | null } | { __typename: 'RegularDagsterType', name: string | null, displayName: string, description: string | null } }, dependsOn: Array<{ __typename: 'Output', definition: { __typename: 'OutputDefinition', name: string }, solid: { __typename: 'Solid', name: string } }> }>, outputs: Array<{ __typename: 'Output', definition: { __typename: 'OutputDefinition', name: string, description: string | null, isDynamic: boolean | null, type: { __typename: 'ListDagsterType', name: string | null, displayName: string, description: string | null } | { __typename: 'NullableDagsterType', name: string | null, displayName: string, description: string | null } | { __typename: 'RegularDagsterType', name: string | null, displayName: string, description: string | null } }, dependedBy: Array<{ __typename: 'Input', definition: { __typename: 'InputDefinition', name: string }, solid: { __typename: 'Solid', name: string } }> }> };

export type SidebarResourcesSectionFragmentFragment = { __typename: 'Mode', id: string, name: string, description: string | null, resources: Array<{ __typename: 'Resource', name: string, description: string | null, configField: { __typename: 'ConfigTypeField', configType: { __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } } | null }>, loggers: Array<{ __typename: 'Logger', name: string, description: string | null, configField: { __typename: 'ConfigTypeField', configType: { __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } } | null }> };

export type PipelineRunLogsSubscriptionSubscriptionVariables = Exact<{
  runId: Scalars['ID'];
  cursor?: InputMaybe<Scalars['String']>;
}>;


export type PipelineRunLogsSubscriptionSubscription = { __typename: 'DagitSubscription', pipelineRunLogs: { __typename: 'PipelineRunLogsSubscriptionFailure', missingRunId: string | null, message: string } | { __typename: 'PipelineRunLogsSubscriptionSuccess', hasMorePastEvents: boolean, cursor: string, messages: Array<{ __typename: 'AlertFailureEvent', runId: string, message: string, timestamp: string, level: LogLevel, stepKey: string | null, eventType: DagsterEventType | null } | { __typename: 'AlertStartEvent', runId: string, message: string, timestamp: string, level: LogLevel, stepKey: string | null, eventType: DagsterEventType | null } | { __typename: 'AlertSuccessEvent', runId: string, message: string, timestamp: string, level: LogLevel, stepKey: string | null, eventType: DagsterEventType | null } | { __typename: 'AssetMaterializationPlannedEvent', runId: string, message: string, timestamp: string, level: LogLevel, stepKey: string | null, eventType: DagsterEventType | null } | { __typename: 'EngineEvent', runId: string, message: string, timestamp: string, level: LogLevel, stepKey: string | null, markerStart: string | null, markerEnd: string | null, eventType: DagsterEventType | null, label: string | null, description: string | null, metadataEntries: Array<{ __typename: 'AssetMetadataEntry', label: string, description: string | null, assetKey: { __typename: 'AssetKey', path: Array<string> } } | { __typename: 'BoolMetadataEntry', boolValue: boolean | null, label: string, description: string | null } | { __typename: 'FloatMetadataEntry', floatValue: number | null, label: string, description: string | null } | { __typename: 'IntMetadataEntry', intValue: number | null, intRepr: string, label: string, description: string | null } | { __typename: 'JsonMetadataEntry', jsonString: string, label: string, description: string | null } | { __typename: 'MarkdownMetadataEntry', mdStr: string, label: string, description: string | null } | { __typename: 'NotebookMetadataEntry', path: string, label: string, description: string | null } | { __typename: 'NullMetadataEntry', label: string, description: string | null } | { __typename: 'PathMetadataEntry', path: string, label: string, description: string | null } | { __typename: 'PipelineRunMetadataEntry', runId: string, label: string, description: string | null } | { __typename: 'PythonArtifactMetadataEntry', module: string, name: string, label: string, description: string | null } | { __typename: 'TableMetadataEntry', label: string, description: string | null, table: { __typename: 'Table', records: Array<string>, schema: { __typename: 'TableSchema', columns: Array<{ __typename: 'TableColumn', name: string, description: string | null, type: string, constraints: { __typename: 'TableColumnConstraints', nullable: boolean, unique: boolean, other: Array<string> } }>, constraints: { __typename: 'TableConstraints', other: Array<string> } | null } } } | { __typename: 'TableSchemaMetadataEntry', label: string, description: string | null, schema: { __typename: 'TableSchema', columns: Array<{ __typename: 'TableColumn', name: string, description: string | null, type: string, constraints: { __typename: 'TableColumnConstraints', nullable: boolean, unique: boolean, other: Array<string> } }>, constraints: { __typename: 'TableConstraints', other: Array<string> } | null } } | { __typename: 'TextMetadataEntry', text: string, label: string, description: string | null } | { __typename: 'UrlMetadataEntry', url: string, label: string, description: string | null }>, error: { __typename: 'PythonError', message: string, stack: Array<string>, errorChain: Array<{ __typename: 'ErrorChainLink', isExplicitLink: boolean, error: { __typename: 'PythonError', message: string, stack: Array<string> } }> } | null } | { __typename: 'ExecutionStepFailureEvent', runId: string, message: string, timestamp: string, level: LogLevel, stepKey: string | null, eventType: DagsterEventType | null, errorSource: ErrorSource | null, error: { __typename: 'PythonError', message: string, stack: Array<string>, errorChain: Array<{ __typename: 'ErrorChainLink', isExplicitLink: boolean, error: { __typename: 'PythonError', message: string, stack: Array<string> } }> } | null, failureMetadata: { __typename: 'FailureMetadata', metadataEntries: Array<{ __typename: 'AssetMetadataEntry', label: string, description: string | null, assetKey: { __typename: 'AssetKey', path: Array<string> } } | { __typename: 'BoolMetadataEntry', boolValue: boolean | null, label: string, description: string | null } | { __typename: 'FloatMetadataEntry', floatValue: number | null, label: string, description: string | null } | { __typename: 'IntMetadataEntry', intValue: number | null, intRepr: string, label: string, description: string | null } | { __typename: 'JsonMetadataEntry', jsonString: string, label: string, description: string | null } | { __typename: 'MarkdownMetadataEntry', mdStr: string, label: string, description: string | null } | { __typename: 'NotebookMetadataEntry', path: string, label: string, description: string | null } | { __typename: 'NullMetadataEntry', label: string, description: string | null } | { __typename: 'PathMetadataEntry', path: string, label: string, description: string | null } | { __typename: 'PipelineRunMetadataEntry', runId: string, label: string, description: string | null } | { __typename: 'PythonArtifactMetadataEntry', module: string, name: string, label: string, description: string | null } | { __typename: 'TableMetadataEntry', label: string, description: string | null, table: { __typename: 'Table', records: Array<string>, schema: { __typename: 'TableSchema', columns: Array<{ __typename: 'TableColumn', name: string, description: string | null, type: string, constraints: { __typename: 'TableColumnConstraints', nullable: boolean, unique: boolean, other: Array<string> } }>, constraints: { __typename: 'TableConstraints', other: Array<string> } | null } } } | { __typename: 'TableSchemaMetadataEntry', label: string, description: string | null, schema: { __typename: 'TableSchema', columns: Array<{ __typename: 'TableColumn', name: string, description: string | null, type: string, constraints: { __typename: 'TableColumnConstraints', nullable: boolean, unique: boolean, other: Array<string> } }>, constraints: { __typename: 'TableConstraints', other: Array<string> } | null } } | { __typename: 'TextMetadataEntry', text: string, label: string, description: string | null } | { __typename: 'UrlMetadataEntry', url: string, label: string, description: string | null }> } | null } | { __typename: 'ExecutionStepInputEvent', runId: string, message: string, timestamp: string, level: LogLevel, stepKey: string | null, eventType: DagsterEventType | null, inputName: string, typeCheck: { __typename: 'TypeCheck', label: string | null, description: string | null, success: boolean, metadataEntries: Array<{ __typename: 'AssetMetadataEntry', label: string, description: string | null, assetKey: { __typename: 'AssetKey', path: Array<string> } } | { __typename: 'BoolMetadataEntry', boolValue: boolean | null, label: string, description: string | null } | { __typename: 'FloatMetadataEntry', floatValue: number | null, label: string, description: string | null } | { __typename: 'IntMetadataEntry', intValue: number | null, intRepr: string, label: string, description: string | null } | { __typename: 'JsonMetadataEntry', jsonString: string, label: string, description: string | null } | { __typename: 'MarkdownMetadataEntry', mdStr: string, label: string, description: string | null } | { __typename: 'NotebookMetadataEntry', path: string, label: string, description: string | null } | { __typename: 'NullMetadataEntry', label: string, description: string | null } | { __typename: 'PathMetadataEntry', path: string, label: string, description: string | null } | { __typename: 'PipelineRunMetadataEntry', runId: string, label: string, description: string | null } | { __typename: 'PythonArtifactMetadataEntry', module: string, name: string, label: string, description: string | null } | { __typename: 'TableMetadataEntry', label: string, description: string | null, table: { __typename: 'Table', records: Array<string>, schema: { __typename: 'TableSchema', columns: Array<{ __typename: 'TableColumn', name: string, description: string | null, type: string, constraints: { __typename: 'TableColumnConstraints', nullable: boolean, unique: boolean, other: Array<string> } }>, constraints: { __typename: 'TableConstraints', other: Array<string> } | null } } } | { __typename: 'TableSchemaMetadataEntry', label: string, description: string | null, schema: { __typename: 'TableSchema', columns: Array<{ __typename: 'TableColumn', name: string, description: string | null, type: string, constraints: { __typename: 'TableColumnConstraints', nullable: boolean, unique: boolean, other: Array<string> } }>, constraints: { __typename: 'TableConstraints', other: Array<string> } | null } } | { __typename: 'TextMetadataEntry', text: string, label: string, description: string | null } | { __typename: 'UrlMetadataEntry', url: string, label: string, description: string | null }> } } | { __typename: 'ExecutionStepOutputEvent', runId: string, message: string, timestamp: string, level: LogLevel, stepKey: string | null, eventType: DagsterEventType | null, label: string | null, description: string | null, outputName: string, metadataEntries: Array<{ __typename: 'AssetMetadataEntry', label: string, description: string | null, assetKey: { __typename: 'AssetKey', path: Array<string> } } | { __typename: 'BoolMetadataEntry', boolValue: boolean | null, label: string, description: string | null } | { __typename: 'FloatMetadataEntry', floatValue: number | null, label: string, description: string | null } | { __typename: 'IntMetadataEntry', intValue: number | null, intRepr: string, label: string, description: string | null } | { __typename: 'JsonMetadataEntry', jsonString: string, label: string, description: string | null } | { __typename: 'MarkdownMetadataEntry', mdStr: string, label: string, description: string | null } | { __typename: 'NotebookMetadataEntry', path: string, label: string, description: string | null } | { __typename: 'NullMetadataEntry', label: string, description: string | null } | { __typename: 'PathMetadataEntry', path: string, label: string, description: string | null } | { __typename: 'PipelineRunMetadataEntry', runId: string, label: string, description: string | null } | { __typename: 'PythonArtifactMetadataEntry', module: string, name: string, label: string, description: string | null } | { __typename: 'TableMetadataEntry', label: string, description: string | null, table: { __typename: 'Table', records: Array<string>, schema: { __typename: 'TableSchema', columns: Array<{ __typename: 'TableColumn', name: string, description: string | null, type: string, constraints: { __typename: 'TableColumnConstraints', nullable: boolean, unique: boolean, other: Array<string> } }>, constraints: { __typename: 'TableConstraints', other: Array<string> } | null } } } | { __typename: 'TableSchemaMetadataEntry', label: string, description: string | null, schema: { __typename: 'TableSchema', columns: Array<{ __typename: 'TableColumn', name: string, description: string | null, type: string, constraints: { __typename: 'TableColumnConstraints', nullable: boolean, unique: boolean, other: Array<string> } }>, constraints: { __typename: 'TableConstraints', other: Array<string> } | null } } | { __typename: 'TextMetadataEntry', text: string, label: string, description: string | null } | { __typename: 'UrlMetadataEntry', url: string, label: string, description: string | null }>, typeCheck: { __typename: 'TypeCheck', label: string | null, description: string | null, success: boolean, metadataEntries: Array<{ __typename: 'AssetMetadataEntry', label: string, description: string | null, assetKey: { __typename: 'AssetKey', path: Array<string> } } | { __typename: 'BoolMetadataEntry', boolValue: boolean | null, label: string, description: string | null } | { __typename: 'FloatMetadataEntry', floatValue: number | null, label: string, description: string | null } | { __typename: 'IntMetadataEntry', intValue: number | null, intRepr: string, label: string, description: string | null } | { __typename: 'JsonMetadataEntry', jsonString: string, label: string, description: string | null } | { __typename: 'MarkdownMetadataEntry', mdStr: string, label: string, description: string | null } | { __typename: 'NotebookMetadataEntry', path: string, label: string, description: string | null } | { __typename: 'NullMetadataEntry', label: string, description: string | null } | { __typename: 'PathMetadataEntry', path: string, label: string, description: string | null } | { __typename: 'PipelineRunMetadataEntry', runId: string, label: string, description: string | null } | { __typename: 'PythonArtifactMetadataEntry', module: string, name: string, label: string, description: string | null } | { __typename: 'TableMetadataEntry', label: string, description: string | null, table: { __typename: 'Table', records: Array<string>, schema: { __typename: 'TableSchema', columns: Array<{ __typename: 'TableColumn', name: string, description: string | null, type: string, constraints: { __typename: 'TableColumnConstraints', nullable: boolean, unique: boolean, other: Array<string> } }>, constraints: { __typename: 'TableConstraints', other: Array<string> } | null } } } | { __typename: 'TableSchemaMetadataEntry', label: string, description: string | null, schema: { __typename: 'TableSchema', columns: Array<{ __typename: 'TableColumn', name: string, description: string | null, type: string, constraints: { __typename: 'TableColumnConstraints', nullable: boolean, unique: boolean, other: Array<string> } }>, constraints: { __typename: 'TableConstraints', other: Array<string> } | null } } | { __typename: 'TextMetadataEntry', text: string, label: string, description: string | null } | { __typename: 'UrlMetadataEntry', url: string, label: string, description: string | null }> } } | { __typename: 'ExecutionStepRestartEvent', runId: string, message: string, timestamp: string, level: LogLevel, stepKey: string | null, eventType: DagsterEventType | null } | { __typename: 'ExecutionStepSkippedEvent', runId: string, message: string, timestamp: string, level: LogLevel, stepKey: string | null, eventType: DagsterEventType | null } | { __typename: 'ExecutionStepStartEvent', runId: string, message: string, timestamp: string, level: LogLevel, stepKey: string | null, eventType: DagsterEventType | null } | { __typename: 'ExecutionStepSuccessEvent', runId: string, message: string, timestamp: string, level: LogLevel, stepKey: string | null, eventType: DagsterEventType | null } | { __typename: 'ExecutionStepUpForRetryEvent', runId: string, message: string, timestamp: string, level: LogLevel, stepKey: string | null, eventType: DagsterEventType | null, error: { __typename: 'PythonError', message: string, stack: Array<string>, errorChain: Array<{ __typename: 'ErrorChainLink', isExplicitLink: boolean, error: { __typename: 'PythonError', message: string, stack: Array<string> } }> } | null } | { __typename: 'HandledOutputEvent', runId: string, message: string, timestamp: string, level: LogLevel, stepKey: string | null, eventType: DagsterEventType | null, label: string | null, description: string | null, outputName: string, managerKey: string, metadataEntries: Array<{ __typename: 'AssetMetadataEntry', label: string, description: string | null, assetKey: { __typename: 'AssetKey', path: Array<string> } } | { __typename: 'BoolMetadataEntry', boolValue: boolean | null, label: string, description: string | null } | { __typename: 'FloatMetadataEntry', floatValue: number | null, label: string, description: string | null } | { __typename: 'IntMetadataEntry', intValue: number | null, intRepr: string, label: string, description: string | null } | { __typename: 'JsonMetadataEntry', jsonString: string, label: string, description: string | null } | { __typename: 'MarkdownMetadataEntry', mdStr: string, label: string, description: string | null } | { __typename: 'NotebookMetadataEntry', path: string, label: string, description: string | null } | { __typename: 'NullMetadataEntry', label: string, description: string | null } | { __typename: 'PathMetadataEntry', path: string, label: string, description: string | null } | { __typename: 'PipelineRunMetadataEntry', runId: string, label: string, description: string | null } | { __typename: 'PythonArtifactMetadataEntry', module: string, name: string, label: string, description: string | null } | { __typename: 'TableMetadataEntry', label: string, description: string | null, table: { __typename: 'Table', records: Array<string>, schema: { __typename: 'TableSchema', columns: Array<{ __typename: 'TableColumn', name: string, description: string | null, type: string, constraints: { __typename: 'TableColumnConstraints', nullable: boolean, unique: boolean, other: Array<string> } }>, constraints: { __typename: 'TableConstraints', other: Array<string> } | null } } } | { __typename: 'TableSchemaMetadataEntry', label: string, description: string | null, schema: { __typename: 'TableSchema', columns: Array<{ __typename: 'TableColumn', name: string, description: string | null, type: string, constraints: { __typename: 'TableColumnConstraints', nullable: boolean, unique: boolean, other: Array<string> } }>, constraints: { __typename: 'TableConstraints', other: Array<string> } | null } } | { __typename: 'TextMetadataEntry', text: string, label: string, description: string | null } | { __typename: 'UrlMetadataEntry', url: string, label: string, description: string | null }> } | { __typename: 'HookCompletedEvent', runId: string, message: string, timestamp: string, level: LogLevel, stepKey: string | null, eventType: DagsterEventType | null } | { __typename: 'HookErroredEvent', runId: string, message: string, timestamp: string, level: LogLevel, stepKey: string | null, eventType: DagsterEventType | null, error: { __typename: 'PythonError', message: string, stack: Array<string>, errorChain: Array<{ __typename: 'ErrorChainLink', isExplicitLink: boolean, error: { __typename: 'PythonError', message: string, stack: Array<string> } }> } | null } | { __typename: 'HookSkippedEvent', runId: string, message: string, timestamp: string, level: LogLevel, stepKey: string | null, eventType: DagsterEventType | null } | { __typename: 'LoadedInputEvent', runId: string, message: string, timestamp: string, level: LogLevel, stepKey: string | null, eventType: DagsterEventType | null, label: string | null, description: string | null, inputName: string, managerKey: string, upstreamOutputName: string | null, upstreamStepKey: string | null, metadataEntries: Array<{ __typename: 'AssetMetadataEntry', label: string, description: string | null, assetKey: { __typename: 'AssetKey', path: Array<string> } } | { __typename: 'BoolMetadataEntry', boolValue: boolean | null, label: string, description: string | null } | { __typename: 'FloatMetadataEntry', floatValue: number | null, label: string, description: string | null } | { __typename: 'IntMetadataEntry', intValue: number | null, intRepr: string, label: string, description: string | null } | { __typename: 'JsonMetadataEntry', jsonString: string, label: string, description: string | null } | { __typename: 'MarkdownMetadataEntry', mdStr: string, label: string, description: string | null } | { __typename: 'NotebookMetadataEntry', path: string, label: string, description: string | null } | { __typename: 'NullMetadataEntry', label: string, description: string | null } | { __typename: 'PathMetadataEntry', path: string, label: string, description: string | null } | { __typename: 'PipelineRunMetadataEntry', runId: string, label: string, description: string | null } | { __typename: 'PythonArtifactMetadataEntry', module: string, name: string, label: string, description: string | null } | { __typename: 'TableMetadataEntry', label: string, description: string | null, table: { __typename: 'Table', records: Array<string>, schema: { __typename: 'TableSchema', columns: Array<{ __typename: 'TableColumn', name: string, description: string | null, type: string, constraints: { __typename: 'TableColumnConstraints', nullable: boolean, unique: boolean, other: Array<string> } }>, constraints: { __typename: 'TableConstraints', other: Array<string> } | null } } } | { __typename: 'TableSchemaMetadataEntry', label: string, description: string | null, schema: { __typename: 'TableSchema', columns: Array<{ __typename: 'TableColumn', name: string, description: string | null, type: string, constraints: { __typename: 'TableColumnConstraints', nullable: boolean, unique: boolean, other: Array<string> } }>, constraints: { __typename: 'TableConstraints', other: Array<string> } | null } } | { __typename: 'TextMetadataEntry', text: string, label: string, description: string | null } | { __typename: 'UrlMetadataEntry', url: string, label: string, description: string | null }> } | { __typename: 'LogMessageEvent', runId: string, message: string, timestamp: string, level: LogLevel, stepKey: string | null, eventType: DagsterEventType | null } | { __typename: 'LogsCapturedEvent', runId: string, message: string, timestamp: string, level: LogLevel, stepKey: string | null, fileKey: string, stepKeys: Array<string> | null, pid: number | null, externalUrl: string | null, eventType: DagsterEventType | null } | { __typename: 'MaterializationEvent', runId: string, message: string, timestamp: string, level: LogLevel, stepKey: string | null, eventType: DagsterEventType | null, label: string | null, description: string | null, metadataEntries: Array<{ __typename: 'AssetMetadataEntry', label: string, description: string | null, assetKey: { __typename: 'AssetKey', path: Array<string> } } | { __typename: 'BoolMetadataEntry', boolValue: boolean | null, label: string, description: string | null } | { __typename: 'FloatMetadataEntry', floatValue: number | null, label: string, description: string | null } | { __typename: 'IntMetadataEntry', intValue: number | null, intRepr: string, label: string, description: string | null } | { __typename: 'JsonMetadataEntry', jsonString: string, label: string, description: string | null } | { __typename: 'MarkdownMetadataEntry', mdStr: string, label: string, description: string | null } | { __typename: 'NotebookMetadataEntry', path: string, label: string, description: string | null } | { __typename: 'NullMetadataEntry', label: string, description: string | null } | { __typename: 'PathMetadataEntry', path: string, label: string, description: string | null } | { __typename: 'PipelineRunMetadataEntry', runId: string, label: string, description: string | null } | { __typename: 'PythonArtifactMetadataEntry', module: string, name: string, label: string, description: string | null } | { __typename: 'TableMetadataEntry', label: string, description: string | null, table: { __typename: 'Table', records: Array<string>, schema: { __typename: 'TableSchema', columns: Array<{ __typename: 'TableColumn', name: string, description: string | null, type: string, constraints: { __typename: 'TableColumnConstraints', nullable: boolean, unique: boolean, other: Array<string> } }>, constraints: { __typename: 'TableConstraints', other: Array<string> } | null } } } | { __typename: 'TableSchemaMetadataEntry', label: string, description: string | null, schema: { __typename: 'TableSchema', columns: Array<{ __typename: 'TableColumn', name: string, description: string | null, type: string, constraints: { __typename: 'TableColumnConstraints', nullable: boolean, unique: boolean, other: Array<string> } }>, constraints: { __typename: 'TableConstraints', other: Array<string> } | null } } | { __typename: 'TextMetadataEntry', text: string, label: string, description: string | null } | { __typename: 'UrlMetadataEntry', url: string, label: string, description: string | null }>, assetKey: { __typename: 'AssetKey', path: Array<string> } | null } | { __typename: 'ObjectStoreOperationEvent', runId: string, message: string, timestamp: string, level: LogLevel, stepKey: string | null, eventType: DagsterEventType | null, operationResult: { __typename: 'ObjectStoreOperationResult', op: ObjectStoreOperationType, metadataEntries: Array<{ __typename: 'AssetMetadataEntry', label: string, description: string | null, assetKey: { __typename: 'AssetKey', path: Array<string> } } | { __typename: 'BoolMetadataEntry', boolValue: boolean | null, label: string, description: string | null } | { __typename: 'FloatMetadataEntry', floatValue: number | null, label: string, description: string | null } | { __typename: 'IntMetadataEntry', intValue: number | null, intRepr: string, label: string, description: string | null } | { __typename: 'JsonMetadataEntry', jsonString: string, label: string, description: string | null } | { __typename: 'MarkdownMetadataEntry', mdStr: string, label: string, description: string | null } | { __typename: 'NotebookMetadataEntry', path: string, label: string, description: string | null } | { __typename: 'NullMetadataEntry', label: string, description: string | null } | { __typename: 'PathMetadataEntry', path: string, label: string, description: string | null } | { __typename: 'PipelineRunMetadataEntry', runId: string, label: string, description: string | null } | { __typename: 'PythonArtifactMetadataEntry', module: string, name: string, label: string, description: string | null } | { __typename: 'TableMetadataEntry', label: string, description: string | null, table: { __typename: 'Table', records: Array<string>, schema: { __typename: 'TableSchema', columns: Array<{ __typename: 'TableColumn', name: string, description: string | null, type: string, constraints: { __typename: 'TableColumnConstraints', nullable: boolean, unique: boolean, other: Array<string> } }>, constraints: { __typename: 'TableConstraints', other: Array<string> } | null } } } | { __typename: 'TableSchemaMetadataEntry', label: string, description: string | null, schema: { __typename: 'TableSchema', columns: Array<{ __typename: 'TableColumn', name: string, description: string | null, type: string, constraints: { __typename: 'TableColumnConstraints', nullable: boolean, unique: boolean, other: Array<string> } }>, constraints: { __typename: 'TableConstraints', other: Array<string> } | null } } | { __typename: 'TextMetadataEntry', text: string, label: string, description: string | null } | { __typename: 'UrlMetadataEntry', url: string, label: string, description: string | null }> } } | { __typename: 'ObservationEvent', runId: string, message: string, timestamp: string, level: LogLevel, stepKey: string | null, eventType: DagsterEventType | null, label: string | null, description: string | null, metadataEntries: Array<{ __typename: 'AssetMetadataEntry', label: string, description: string | null, assetKey: { __typename: 'AssetKey', path: Array<string> } } | { __typename: 'BoolMetadataEntry', boolValue: boolean | null, label: string, description: string | null } | { __typename: 'FloatMetadataEntry', floatValue: number | null, label: string, description: string | null } | { __typename: 'IntMetadataEntry', intValue: number | null, intRepr: string, label: string, description: string | null } | { __typename: 'JsonMetadataEntry', jsonString: string, label: string, description: string | null } | { __typename: 'MarkdownMetadataEntry', mdStr: string, label: string, description: string | null } | { __typename: 'NotebookMetadataEntry', path: string, label: string, description: string | null } | { __typename: 'NullMetadataEntry', label: string, description: string | null } | { __typename: 'PathMetadataEntry', path: string, label: string, description: string | null } | { __typename: 'PipelineRunMetadataEntry', runId: string, label: string, description: string | null } | { __typename: 'PythonArtifactMetadataEntry', module: string, name: string, label: string, description: string | null } | { __typename: 'TableMetadataEntry', label: string, description: string | null, table: { __typename: 'Table', records: Array<string>, schema: { __typename: 'TableSchema', columns: Array<{ __typename: 'TableColumn', name: string, description: string | null, type: string, constraints: { __typename: 'TableColumnConstraints', nullable: boolean, unique: boolean, other: Array<string> } }>, constraints: { __typename: 'TableConstraints', other: Array<string> } | null } } } | { __typename: 'TableSchemaMetadataEntry', label: string, description: string | null, schema: { __typename: 'TableSchema', columns: Array<{ __typename: 'TableColumn', name: string, description: string | null, type: string, constraints: { __typename: 'TableColumnConstraints', nullable: boolean, unique: boolean, other: Array<string> } }>, constraints: { __typename: 'TableConstraints', other: Array<string> } | null } } | { __typename: 'TextMetadataEntry', text: string, label: string, description: string | null } | { __typename: 'UrlMetadataEntry', url: string, label: string, description: string | null }>, assetKey: { __typename: 'AssetKey', path: Array<string> } | null } | { __typename: 'ResourceInitFailureEvent', runId: string, message: string, timestamp: string, level: LogLevel, stepKey: string | null, markerStart: string | null, markerEnd: string | null, eventType: DagsterEventType | null, label: string | null, description: string | null, metadataEntries: Array<{ __typename: 'AssetMetadataEntry', label: string, description: string | null, assetKey: { __typename: 'AssetKey', path: Array<string> } } | { __typename: 'BoolMetadataEntry', boolValue: boolean | null, label: string, description: string | null } | { __typename: 'FloatMetadataEntry', floatValue: number | null, label: string, description: string | null } | { __typename: 'IntMetadataEntry', intValue: number | null, intRepr: string, label: string, description: string | null } | { __typename: 'JsonMetadataEntry', jsonString: string, label: string, description: string | null } | { __typename: 'MarkdownMetadataEntry', mdStr: string, label: string, description: string | null } | { __typename: 'NotebookMetadataEntry', path: string, label: string, description: string | null } | { __typename: 'NullMetadataEntry', label: string, description: string | null } | { __typename: 'PathMetadataEntry', path: string, label: string, description: string | null } | { __typename: 'PipelineRunMetadataEntry', runId: string, label: string, description: string | null } | { __typename: 'PythonArtifactMetadataEntry', module: string, name: string, label: string, description: string | null } | { __typename: 'TableMetadataEntry', label: string, description: string | null, table: { __typename: 'Table', records: Array<string>, schema: { __typename: 'TableSchema', columns: Array<{ __typename: 'TableColumn', name: string, description: string | null, type: string, constraints: { __typename: 'TableColumnConstraints', nullable: boolean, unique: boolean, other: Array<string> } }>, constraints: { __typename: 'TableConstraints', other: Array<string> } | null } } } | { __typename: 'TableSchemaMetadataEntry', label: string, description: string | null, schema: { __typename: 'TableSchema', columns: Array<{ __typename: 'TableColumn', name: string, description: string | null, type: string, constraints: { __typename: 'TableColumnConstraints', nullable: boolean, unique: boolean, other: Array<string> } }>, constraints: { __typename: 'TableConstraints', other: Array<string> } | null } } | { __typename: 'TextMetadataEntry', text: string, label: string, description: string | null } | { __typename: 'UrlMetadataEntry', url: string, label: string, description: string | null }>, error: { __typename: 'PythonError', message: string, stack: Array<string>, errorChain: Array<{ __typename: 'ErrorChainLink', isExplicitLink: boolean, error: { __typename: 'PythonError', message: string, stack: Array<string> } }> } | null } | { __typename: 'ResourceInitStartedEvent', runId: string, message: string, timestamp: string, level: LogLevel, stepKey: string | null, markerStart: string | null, markerEnd: string | null, eventType: DagsterEventType | null, label: string | null, description: string | null, metadataEntries: Array<{ __typename: 'AssetMetadataEntry', label: string, description: string | null, assetKey: { __typename: 'AssetKey', path: Array<string> } } | { __typename: 'BoolMetadataEntry', boolValue: boolean | null, label: string, description: string | null } | { __typename: 'FloatMetadataEntry', floatValue: number | null, label: string, description: string | null } | { __typename: 'IntMetadataEntry', intValue: number | null, intRepr: string, label: string, description: string | null } | { __typename: 'JsonMetadataEntry', jsonString: string, label: string, description: string | null } | { __typename: 'MarkdownMetadataEntry', mdStr: string, label: string, description: string | null } | { __typename: 'NotebookMetadataEntry', path: string, label: string, description: string | null } | { __typename: 'NullMetadataEntry', label: string, description: string | null } | { __typename: 'PathMetadataEntry', path: string, label: string, description: string | null } | { __typename: 'PipelineRunMetadataEntry', runId: string, label: string, description: string | null } | { __typename: 'PythonArtifactMetadataEntry', module: string, name: string, label: string, description: string | null } | { __typename: 'TableMetadataEntry', label: string, description: string | null, table: { __typename: 'Table', records: Array<string>, schema: { __typename: 'TableSchema', columns: Array<{ __typename: 'TableColumn', name: string, description: string | null, type: string, constraints: { __typename: 'TableColumnConstraints', nullable: boolean, unique: boolean, other: Array<string> } }>, constraints: { __typename: 'TableConstraints', other: Array<string> } | null } } } | { __typename: 'TableSchemaMetadataEntry', label: string, description: string | null, schema: { __typename: 'TableSchema', columns: Array<{ __typename: 'TableColumn', name: string, description: string | null, type: string, constraints: { __typename: 'TableColumnConstraints', nullable: boolean, unique: boolean, other: Array<string> } }>, constraints: { __typename: 'TableConstraints', other: Array<string> } | null } } | { __typename: 'TextMetadataEntry', text: string, label: string, description: string | null } | { __typename: 'UrlMetadataEntry', url: string, label: string, description: string | null }> } | { __typename: 'ResourceInitSuccessEvent', runId: string, message: string, timestamp: string, level: LogLevel, stepKey: string | null, markerStart: string | null, markerEnd: string | null, eventType: DagsterEventType | null, label: string | null, description: string | null, metadataEntries: Array<{ __typename: 'AssetMetadataEntry', label: string, description: string | null, assetKey: { __typename: 'AssetKey', path: Array<string> } } | { __typename: 'BoolMetadataEntry', boolValue: boolean | null, label: string, description: string | null } | { __typename: 'FloatMetadataEntry', floatValue: number | null, label: string, description: string | null } | { __typename: 'IntMetadataEntry', intValue: number | null, intRepr: string, label: string, description: string | null } | { __typename: 'JsonMetadataEntry', jsonString: string, label: string, description: string | null } | { __typename: 'MarkdownMetadataEntry', mdStr: string, label: string, description: string | null } | { __typename: 'NotebookMetadataEntry', path: string, label: string, description: string | null } | { __typename: 'NullMetadataEntry', label: string, description: string | null } | { __typename: 'PathMetadataEntry', path: string, label: string, description: string | null } | { __typename: 'PipelineRunMetadataEntry', runId: string, label: string, description: string | null } | { __typename: 'PythonArtifactMetadataEntry', module: string, name: string, label: string, description: string | null } | { __typename: 'TableMetadataEntry', label: string, description: string | null, table: { __typename: 'Table', records: Array<string>, schema: { __typename: 'TableSchema', columns: Array<{ __typename: 'TableColumn', name: string, description: string | null, type: string, constraints: { __typename: 'TableColumnConstraints', nullable: boolean, unique: boolean, other: Array<string> } }>, constraints: { __typename: 'TableConstraints', other: Array<string> } | null } } } | { __typename: 'TableSchemaMetadataEntry', label: string, description: string | null, schema: { __typename: 'TableSchema', columns: Array<{ __typename: 'TableColumn', name: string, description: string | null, type: string, constraints: { __typename: 'TableColumnConstraints', nullable: boolean, unique: boolean, other: Array<string> } }>, constraints: { __typename: 'TableConstraints', other: Array<string> } | null } } | { __typename: 'TextMetadataEntry', text: string, label: string, description: string | null } | { __typename: 'UrlMetadataEntry', url: string, label: string, description: string | null }> } | { __typename: 'RunCanceledEvent', runId: string, message: string, timestamp: string, level: LogLevel, stepKey: string | null, eventType: DagsterEventType | null } | { __typename: 'RunCancelingEvent', runId: string, message: string, timestamp: string, level: LogLevel, stepKey: string | null, eventType: DagsterEventType | null } | { __typename: 'RunDequeuedEvent', runId: string, message: string, timestamp: string, level: LogLevel, stepKey: string | null, eventType: DagsterEventType | null } | { __typename: 'RunEnqueuedEvent', runId: string, message: string, timestamp: string, level: LogLevel, stepKey: string | null, eventType: DagsterEventType | null } | { __typename: 'RunFailureEvent', runId: string, message: string, timestamp: string, level: LogLevel, stepKey: string | null, eventType: DagsterEventType | null, error: { __typename: 'PythonError', message: string, stack: Array<string>, errorChain: Array<{ __typename: 'ErrorChainLink', isExplicitLink: boolean, error: { __typename: 'PythonError', message: string, stack: Array<string> } }> } | null } | { __typename: 'RunStartEvent', runId: string, message: string, timestamp: string, level: LogLevel, stepKey: string | null, eventType: DagsterEventType | null } | { __typename: 'RunStartingEvent', runId: string, message: string, timestamp: string, level: LogLevel, stepKey: string | null, eventType: DagsterEventType | null } | { __typename: 'RunSuccessEvent', runId: string, message: string, timestamp: string, level: LogLevel, stepKey: string | null, eventType: DagsterEventType | null } | { __typename: 'StepExpectationResultEvent', runId: string, message: string, timestamp: string, level: LogLevel, stepKey: string | null, eventType: DagsterEventType | null, expectationResult: { __typename: 'ExpectationResult', success: boolean, label: string | null, description: string | null, metadataEntries: Array<{ __typename: 'AssetMetadataEntry', label: string, description: string | null, assetKey: { __typename: 'AssetKey', path: Array<string> } } | { __typename: 'BoolMetadataEntry', boolValue: boolean | null, label: string, description: string | null } | { __typename: 'FloatMetadataEntry', floatValue: number | null, label: string, description: string | null } | { __typename: 'IntMetadataEntry', intValue: number | null, intRepr: string, label: string, description: string | null } | { __typename: 'JsonMetadataEntry', jsonString: string, label: string, description: string | null } | { __typename: 'MarkdownMetadataEntry', mdStr: string, label: string, description: string | null } | { __typename: 'NotebookMetadataEntry', path: string, label: string, description: string | null } | { __typename: 'NullMetadataEntry', label: string, description: string | null } | { __typename: 'PathMetadataEntry', path: string, label: string, description: string | null } | { __typename: 'PipelineRunMetadataEntry', runId: string, label: string, description: string | null } | { __typename: 'PythonArtifactMetadataEntry', module: string, name: string, label: string, description: string | null } | { __typename: 'TableMetadataEntry', label: string, description: string | null, table: { __typename: 'Table', records: Array<string>, schema: { __typename: 'TableSchema', columns: Array<{ __typename: 'TableColumn', name: string, description: string | null, type: string, constraints: { __typename: 'TableColumnConstraints', nullable: boolean, unique: boolean, other: Array<string> } }>, constraints: { __typename: 'TableConstraints', other: Array<string> } | null } } } | { __typename: 'TableSchemaMetadataEntry', label: string, description: string | null, schema: { __typename: 'TableSchema', columns: Array<{ __typename: 'TableColumn', name: string, description: string | null, type: string, constraints: { __typename: 'TableColumnConstraints', nullable: boolean, unique: boolean, other: Array<string> } }>, constraints: { __typename: 'TableConstraints', other: Array<string> } | null } } | { __typename: 'TextMetadataEntry', text: string, label: string, description: string | null } | { __typename: 'UrlMetadataEntry', url: string, label: string, description: string | null }> } } | { __typename: 'StepWorkerStartedEvent', runId: string, message: string, timestamp: string, level: LogLevel, stepKey: string | null, markerStart: string | null, markerEnd: string | null, eventType: DagsterEventType | null, label: string | null, description: string | null, metadataEntries: Array<{ __typename: 'AssetMetadataEntry', label: string, description: string | null, assetKey: { __typename: 'AssetKey', path: Array<string> } } | { __typename: 'BoolMetadataEntry', boolValue: boolean | null, label: string, description: string | null } | { __typename: 'FloatMetadataEntry', floatValue: number | null, label: string, description: string | null } | { __typename: 'IntMetadataEntry', intValue: number | null, intRepr: string, label: string, description: string | null } | { __typename: 'JsonMetadataEntry', jsonString: string, label: string, description: string | null } | { __typename: 'MarkdownMetadataEntry', mdStr: string, label: string, description: string | null } | { __typename: 'NotebookMetadataEntry', path: string, label: string, description: string | null } | { __typename: 'NullMetadataEntry', label: string, description: string | null } | { __typename: 'PathMetadataEntry', path: string, label: string, description: string | null } | { __typename: 'PipelineRunMetadataEntry', runId: string, label: string, description: string | null } | { __typename: 'PythonArtifactMetadataEntry', module: string, name: string, label: string, description: string | null } | { __typename: 'TableMetadataEntry', label: string, description: string | null, table: { __typename: 'Table', records: Array<string>, schema: { __typename: 'TableSchema', columns: Array<{ __typename: 'TableColumn', name: string, description: string | null, type: string, constraints: { __typename: 'TableColumnConstraints', nullable: boolean, unique: boolean, other: Array<string> } }>, constraints: { __typename: 'TableConstraints', other: Array<string> } | null } } } | { __typename: 'TableSchemaMetadataEntry', label: string, description: string | null, schema: { __typename: 'TableSchema', columns: Array<{ __typename: 'TableColumn', name: string, description: string | null, type: string, constraints: { __typename: 'TableColumnConstraints', nullable: boolean, unique: boolean, other: Array<string> } }>, constraints: { __typename: 'TableConstraints', other: Array<string> } | null } } | { __typename: 'TextMetadataEntry', text: string, label: string, description: string | null } | { __typename: 'UrlMetadataEntry', url: string, label: string, description: string | null }> } | { __typename: 'StepWorkerStartingEvent', runId: string, message: string, timestamp: string, level: LogLevel, stepKey: string | null, markerStart: string | null, markerEnd: string | null, eventType: DagsterEventType | null, label: string | null, description: string | null, metadataEntries: Array<{ __typename: 'AssetMetadataEntry', label: string, description: string | null, assetKey: { __typename: 'AssetKey', path: Array<string> } } | { __typename: 'BoolMetadataEntry', boolValue: boolean | null, label: string, description: string | null } | { __typename: 'FloatMetadataEntry', floatValue: number | null, label: string, description: string | null } | { __typename: 'IntMetadataEntry', intValue: number | null, intRepr: string, label: string, description: string | null } | { __typename: 'JsonMetadataEntry', jsonString: string, label: string, description: string | null } | { __typename: 'MarkdownMetadataEntry', mdStr: string, label: string, description: string | null } | { __typename: 'NotebookMetadataEntry', path: string, label: string, description: string | null } | { __typename: 'NullMetadataEntry', label: string, description: string | null } | { __typename: 'PathMetadataEntry', path: string, label: string, description: string | null } | { __typename: 'PipelineRunMetadataEntry', runId: string, label: string, description: string | null } | { __typename: 'PythonArtifactMetadataEntry', module: string, name: string, label: string, description: string | null } | { __typename: 'TableMetadataEntry', label: string, description: string | null, table: { __typename: 'Table', records: Array<string>, schema: { __typename: 'TableSchema', columns: Array<{ __typename: 'TableColumn', name: string, description: string | null, type: string, constraints: { __typename: 'TableColumnConstraints', nullable: boolean, unique: boolean, other: Array<string> } }>, constraints: { __typename: 'TableConstraints', other: Array<string> } | null } } } | { __typename: 'TableSchemaMetadataEntry', label: string, description: string | null, schema: { __typename: 'TableSchema', columns: Array<{ __typename: 'TableColumn', name: string, description: string | null, type: string, constraints: { __typename: 'TableColumnConstraints', nullable: boolean, unique: boolean, other: Array<string> } }>, constraints: { __typename: 'TableConstraints', other: Array<string> } | null } } | { __typename: 'TextMetadataEntry', text: string, label: string, description: string | null } | { __typename: 'UrlMetadataEntry', url: string, label: string, description: string | null }> }> } };

export type RunLogsSubscriptionSuccessFragment = { __typename: 'PipelineRunLogsSubscriptionSuccess', hasMorePastEvents: boolean, cursor: string, messages: Array<{ __typename: 'AlertFailureEvent', runId: string, message: string, timestamp: string, level: LogLevel, stepKey: string | null, eventType: DagsterEventType | null } | { __typename: 'AlertStartEvent', runId: string, message: string, timestamp: string, level: LogLevel, stepKey: string | null, eventType: DagsterEventType | null } | { __typename: 'AlertSuccessEvent', runId: string, message: string, timestamp: string, level: LogLevel, stepKey: string | null, eventType: DagsterEventType | null } | { __typename: 'AssetMaterializationPlannedEvent', runId: string, message: string, timestamp: string, level: LogLevel, stepKey: string | null, eventType: DagsterEventType | null } | { __typename: 'EngineEvent', runId: string, message: string, timestamp: string, level: LogLevel, stepKey: string | null, markerStart: string | null, markerEnd: string | null, eventType: DagsterEventType | null, label: string | null, description: string | null, metadataEntries: Array<{ __typename: 'AssetMetadataEntry', label: string, description: string | null, assetKey: { __typename: 'AssetKey', path: Array<string> } } | { __typename: 'BoolMetadataEntry', boolValue: boolean | null, label: string, description: string | null } | { __typename: 'FloatMetadataEntry', floatValue: number | null, label: string, description: string | null } | { __typename: 'IntMetadataEntry', intValue: number | null, intRepr: string, label: string, description: string | null } | { __typename: 'JsonMetadataEntry', jsonString: string, label: string, description: string | null } | { __typename: 'MarkdownMetadataEntry', mdStr: string, label: string, description: string | null } | { __typename: 'NotebookMetadataEntry', path: string, label: string, description: string | null } | { __typename: 'NullMetadataEntry', label: string, description: string | null } | { __typename: 'PathMetadataEntry', path: string, label: string, description: string | null } | { __typename: 'PipelineRunMetadataEntry', runId: string, label: string, description: string | null } | { __typename: 'PythonArtifactMetadataEntry', module: string, name: string, label: string, description: string | null } | { __typename: 'TableMetadataEntry', label: string, description: string | null, table: { __typename: 'Table', records: Array<string>, schema: { __typename: 'TableSchema', columns: Array<{ __typename: 'TableColumn', name: string, description: string | null, type: string, constraints: { __typename: 'TableColumnConstraints', nullable: boolean, unique: boolean, other: Array<string> } }>, constraints: { __typename: 'TableConstraints', other: Array<string> } | null } } } | { __typename: 'TableSchemaMetadataEntry', label: string, description: string | null, schema: { __typename: 'TableSchema', columns: Array<{ __typename: 'TableColumn', name: string, description: string | null, type: string, constraints: { __typename: 'TableColumnConstraints', nullable: boolean, unique: boolean, other: Array<string> } }>, constraints: { __typename: 'TableConstraints', other: Array<string> } | null } } | { __typename: 'TextMetadataEntry', text: string, label: string, description: string | null } | { __typename: 'UrlMetadataEntry', url: string, label: string, description: string | null }>, error: { __typename: 'PythonError', message: string, stack: Array<string>, errorChain: Array<{ __typename: 'ErrorChainLink', isExplicitLink: boolean, error: { __typename: 'PythonError', message: string, stack: Array<string> } }> } | null } | { __typename: 'ExecutionStepFailureEvent', runId: string, message: string, timestamp: string, level: LogLevel, stepKey: string | null, eventType: DagsterEventType | null, errorSource: ErrorSource | null, error: { __typename: 'PythonError', message: string, stack: Array<string>, errorChain: Array<{ __typename: 'ErrorChainLink', isExplicitLink: boolean, error: { __typename: 'PythonError', message: string, stack: Array<string> } }> } | null, failureMetadata: { __typename: 'FailureMetadata', metadataEntries: Array<{ __typename: 'AssetMetadataEntry', label: string, description: string | null, assetKey: { __typename: 'AssetKey', path: Array<string> } } | { __typename: 'BoolMetadataEntry', boolValue: boolean | null, label: string, description: string | null } | { __typename: 'FloatMetadataEntry', floatValue: number | null, label: string, description: string | null } | { __typename: 'IntMetadataEntry', intValue: number | null, intRepr: string, label: string, description: string | null } | { __typename: 'JsonMetadataEntry', jsonString: string, label: string, description: string | null } | { __typename: 'MarkdownMetadataEntry', mdStr: string, label: string, description: string | null } | { __typename: 'NotebookMetadataEntry', path: string, label: string, description: string | null } | { __typename: 'NullMetadataEntry', label: string, description: string | null } | { __typename: 'PathMetadataEntry', path: string, label: string, description: string | null } | { __typename: 'PipelineRunMetadataEntry', runId: string, label: string, description: string | null } | { __typename: 'PythonArtifactMetadataEntry', module: string, name: string, label: string, description: string | null } | { __typename: 'TableMetadataEntry', label: string, description: string | null, table: { __typename: 'Table', records: Array<string>, schema: { __typename: 'TableSchema', columns: Array<{ __typename: 'TableColumn', name: string, description: string | null, type: string, constraints: { __typename: 'TableColumnConstraints', nullable: boolean, unique: boolean, other: Array<string> } }>, constraints: { __typename: 'TableConstraints', other: Array<string> } | null } } } | { __typename: 'TableSchemaMetadataEntry', label: string, description: string | null, schema: { __typename: 'TableSchema', columns: Array<{ __typename: 'TableColumn', name: string, description: string | null, type: string, constraints: { __typename: 'TableColumnConstraints', nullable: boolean, unique: boolean, other: Array<string> } }>, constraints: { __typename: 'TableConstraints', other: Array<string> } | null } } | { __typename: 'TextMetadataEntry', text: string, label: string, description: string | null } | { __typename: 'UrlMetadataEntry', url: string, label: string, description: string | null }> } | null } | { __typename: 'ExecutionStepInputEvent', runId: string, message: string, timestamp: string, level: LogLevel, stepKey: string | null, eventType: DagsterEventType | null, inputName: string, typeCheck: { __typename: 'TypeCheck', label: string | null, description: string | null, success: boolean, metadataEntries: Array<{ __typename: 'AssetMetadataEntry', label: string, description: string | null, assetKey: { __typename: 'AssetKey', path: Array<string> } } | { __typename: 'BoolMetadataEntry', boolValue: boolean | null, label: string, description: string | null } | { __typename: 'FloatMetadataEntry', floatValue: number | null, label: string, description: string | null } | { __typename: 'IntMetadataEntry', intValue: number | null, intRepr: string, label: string, description: string | null } | { __typename: 'JsonMetadataEntry', jsonString: string, label: string, description: string | null } | { __typename: 'MarkdownMetadataEntry', mdStr: string, label: string, description: string | null } | { __typename: 'NotebookMetadataEntry', path: string, label: string, description: string | null } | { __typename: 'NullMetadataEntry', label: string, description: string | null } | { __typename: 'PathMetadataEntry', path: string, label: string, description: string | null } | { __typename: 'PipelineRunMetadataEntry', runId: string, label: string, description: string | null } | { __typename: 'PythonArtifactMetadataEntry', module: string, name: string, label: string, description: string | null } | { __typename: 'TableMetadataEntry', label: string, description: string | null, table: { __typename: 'Table', records: Array<string>, schema: { __typename: 'TableSchema', columns: Array<{ __typename: 'TableColumn', name: string, description: string | null, type: string, constraints: { __typename: 'TableColumnConstraints', nullable: boolean, unique: boolean, other: Array<string> } }>, constraints: { __typename: 'TableConstraints', other: Array<string> } | null } } } | { __typename: 'TableSchemaMetadataEntry', label: string, description: string | null, schema: { __typename: 'TableSchema', columns: Array<{ __typename: 'TableColumn', name: string, description: string | null, type: string, constraints: { __typename: 'TableColumnConstraints', nullable: boolean, unique: boolean, other: Array<string> } }>, constraints: { __typename: 'TableConstraints', other: Array<string> } | null } } | { __typename: 'TextMetadataEntry', text: string, label: string, description: string | null } | { __typename: 'UrlMetadataEntry', url: string, label: string, description: string | null }> } } | { __typename: 'ExecutionStepOutputEvent', runId: string, message: string, timestamp: string, level: LogLevel, stepKey: string | null, eventType: DagsterEventType | null, label: string | null, description: string | null, outputName: string, metadataEntries: Array<{ __typename: 'AssetMetadataEntry', label: string, description: string | null, assetKey: { __typename: 'AssetKey', path: Array<string> } } | { __typename: 'BoolMetadataEntry', boolValue: boolean | null, label: string, description: string | null } | { __typename: 'FloatMetadataEntry', floatValue: number | null, label: string, description: string | null } | { __typename: 'IntMetadataEntry', intValue: number | null, intRepr: string, label: string, description: string | null } | { __typename: 'JsonMetadataEntry', jsonString: string, label: string, description: string | null } | { __typename: 'MarkdownMetadataEntry', mdStr: string, label: string, description: string | null } | { __typename: 'NotebookMetadataEntry', path: string, label: string, description: string | null } | { __typename: 'NullMetadataEntry', label: string, description: string | null } | { __typename: 'PathMetadataEntry', path: string, label: string, description: string | null } | { __typename: 'PipelineRunMetadataEntry', runId: string, label: string, description: string | null } | { __typename: 'PythonArtifactMetadataEntry', module: string, name: string, label: string, description: string | null } | { __typename: 'TableMetadataEntry', label: string, description: string | null, table: { __typename: 'Table', records: Array<string>, schema: { __typename: 'TableSchema', columns: Array<{ __typename: 'TableColumn', name: string, description: string | null, type: string, constraints: { __typename: 'TableColumnConstraints', nullable: boolean, unique: boolean, other: Array<string> } }>, constraints: { __typename: 'TableConstraints', other: Array<string> } | null } } } | { __typename: 'TableSchemaMetadataEntry', label: string, description: string | null, schema: { __typename: 'TableSchema', columns: Array<{ __typename: 'TableColumn', name: string, description: string | null, type: string, constraints: { __typename: 'TableColumnConstraints', nullable: boolean, unique: boolean, other: Array<string> } }>, constraints: { __typename: 'TableConstraints', other: Array<string> } | null } } | { __typename: 'TextMetadataEntry', text: string, label: string, description: string | null } | { __typename: 'UrlMetadataEntry', url: string, label: string, description: string | null }>, typeCheck: { __typename: 'TypeCheck', label: string | null, description: string | null, success: boolean, metadataEntries: Array<{ __typename: 'AssetMetadataEntry', label: string, description: string | null, assetKey: { __typename: 'AssetKey', path: Array<string> } } | { __typename: 'BoolMetadataEntry', boolValue: boolean | null, label: string, description: string | null } | { __typename: 'FloatMetadataEntry', floatValue: number | null, label: string, description: string | null } | { __typename: 'IntMetadataEntry', intValue: number | null, intRepr: string, label: string, description: string | null } | { __typename: 'JsonMetadataEntry', jsonString: string, label: string, description: string | null } | { __typename: 'MarkdownMetadataEntry', mdStr: string, label: string, description: string | null } | { __typename: 'NotebookMetadataEntry', path: string, label: string, description: string | null } | { __typename: 'NullMetadataEntry', label: string, description: string | null } | { __typename: 'PathMetadataEntry', path: string, label: string, description: string | null } | { __typename: 'PipelineRunMetadataEntry', runId: string, label: string, description: string | null } | { __typename: 'PythonArtifactMetadataEntry', module: string, name: string, label: string, description: string | null } | { __typename: 'TableMetadataEntry', label: string, description: string | null, table: { __typename: 'Table', records: Array<string>, schema: { __typename: 'TableSchema', columns: Array<{ __typename: 'TableColumn', name: string, description: string | null, type: string, constraints: { __typename: 'TableColumnConstraints', nullable: boolean, unique: boolean, other: Array<string> } }>, constraints: { __typename: 'TableConstraints', other: Array<string> } | null } } } | { __typename: 'TableSchemaMetadataEntry', label: string, description: string | null, schema: { __typename: 'TableSchema', columns: Array<{ __typename: 'TableColumn', name: string, description: string | null, type: string, constraints: { __typename: 'TableColumnConstraints', nullable: boolean, unique: boolean, other: Array<string> } }>, constraints: { __typename: 'TableConstraints', other: Array<string> } | null } } | { __typename: 'TextMetadataEntry', text: string, label: string, description: string | null } | { __typename: 'UrlMetadataEntry', url: string, label: string, description: string | null }> } } | { __typename: 'ExecutionStepRestartEvent', runId: string, message: string, timestamp: string, level: LogLevel, stepKey: string | null, eventType: DagsterEventType | null } | { __typename: 'ExecutionStepSkippedEvent', runId: string, message: string, timestamp: string, level: LogLevel, stepKey: string | null, eventType: DagsterEventType | null } | { __typename: 'ExecutionStepStartEvent', runId: string, message: string, timestamp: string, level: LogLevel, stepKey: string | null, eventType: DagsterEventType | null } | { __typename: 'ExecutionStepSuccessEvent', runId: string, message: string, timestamp: string, level: LogLevel, stepKey: string | null, eventType: DagsterEventType | null } | { __typename: 'ExecutionStepUpForRetryEvent', runId: string, message: string, timestamp: string, level: LogLevel, stepKey: string | null, eventType: DagsterEventType | null, error: { __typename: 'PythonError', message: string, stack: Array<string>, errorChain: Array<{ __typename: 'ErrorChainLink', isExplicitLink: boolean, error: { __typename: 'PythonError', message: string, stack: Array<string> } }> } | null } | { __typename: 'HandledOutputEvent', runId: string, message: string, timestamp: string, level: LogLevel, stepKey: string | null, eventType: DagsterEventType | null, label: string | null, description: string | null, outputName: string, managerKey: string, metadataEntries: Array<{ __typename: 'AssetMetadataEntry', label: string, description: string | null, assetKey: { __typename: 'AssetKey', path: Array<string> } } | { __typename: 'BoolMetadataEntry', boolValue: boolean | null, label: string, description: string | null } | { __typename: 'FloatMetadataEntry', floatValue: number | null, label: string, description: string | null } | { __typename: 'IntMetadataEntry', intValue: number | null, intRepr: string, label: string, description: string | null } | { __typename: 'JsonMetadataEntry', jsonString: string, label: string, description: string | null } | { __typename: 'MarkdownMetadataEntry', mdStr: string, label: string, description: string | null } | { __typename: 'NotebookMetadataEntry', path: string, label: string, description: string | null } | { __typename: 'NullMetadataEntry', label: string, description: string | null } | { __typename: 'PathMetadataEntry', path: string, label: string, description: string | null } | { __typename: 'PipelineRunMetadataEntry', runId: string, label: string, description: string | null } | { __typename: 'PythonArtifactMetadataEntry', module: string, name: string, label: string, description: string | null } | { __typename: 'TableMetadataEntry', label: string, description: string | null, table: { __typename: 'Table', records: Array<string>, schema: { __typename: 'TableSchema', columns: Array<{ __typename: 'TableColumn', name: string, description: string | null, type: string, constraints: { __typename: 'TableColumnConstraints', nullable: boolean, unique: boolean, other: Array<string> } }>, constraints: { __typename: 'TableConstraints', other: Array<string> } | null } } } | { __typename: 'TableSchemaMetadataEntry', label: string, description: string | null, schema: { __typename: 'TableSchema', columns: Array<{ __typename: 'TableColumn', name: string, description: string | null, type: string, constraints: { __typename: 'TableColumnConstraints', nullable: boolean, unique: boolean, other: Array<string> } }>, constraints: { __typename: 'TableConstraints', other: Array<string> } | null } } | { __typename: 'TextMetadataEntry', text: string, label: string, description: string | null } | { __typename: 'UrlMetadataEntry', url: string, label: string, description: string | null }> } | { __typename: 'HookCompletedEvent', runId: string, message: string, timestamp: string, level: LogLevel, stepKey: string | null, eventType: DagsterEventType | null } | { __typename: 'HookErroredEvent', runId: string, message: string, timestamp: string, level: LogLevel, stepKey: string | null, eventType: DagsterEventType | null, error: { __typename: 'PythonError', message: string, stack: Array<string>, errorChain: Array<{ __typename: 'ErrorChainLink', isExplicitLink: boolean, error: { __typename: 'PythonError', message: string, stack: Array<string> } }> } | null } | { __typename: 'HookSkippedEvent', runId: string, message: string, timestamp: string, level: LogLevel, stepKey: string | null, eventType: DagsterEventType | null } | { __typename: 'LoadedInputEvent', runId: string, message: string, timestamp: string, level: LogLevel, stepKey: string | null, eventType: DagsterEventType | null, label: string | null, description: string | null, inputName: string, managerKey: string, upstreamOutputName: string | null, upstreamStepKey: string | null, metadataEntries: Array<{ __typename: 'AssetMetadataEntry', label: string, description: string | null, assetKey: { __typename: 'AssetKey', path: Array<string> } } | { __typename: 'BoolMetadataEntry', boolValue: boolean | null, label: string, description: string | null } | { __typename: 'FloatMetadataEntry', floatValue: number | null, label: string, description: string | null } | { __typename: 'IntMetadataEntry', intValue: number | null, intRepr: string, label: string, description: string | null } | { __typename: 'JsonMetadataEntry', jsonString: string, label: string, description: string | null } | { __typename: 'MarkdownMetadataEntry', mdStr: string, label: string, description: string | null } | { __typename: 'NotebookMetadataEntry', path: string, label: string, description: string | null } | { __typename: 'NullMetadataEntry', label: string, description: string | null } | { __typename: 'PathMetadataEntry', path: string, label: string, description: string | null } | { __typename: 'PipelineRunMetadataEntry', runId: string, label: string, description: string | null } | { __typename: 'PythonArtifactMetadataEntry', module: string, name: string, label: string, description: string | null } | { __typename: 'TableMetadataEntry', label: string, description: string | null, table: { __typename: 'Table', records: Array<string>, schema: { __typename: 'TableSchema', columns: Array<{ __typename: 'TableColumn', name: string, description: string | null, type: string, constraints: { __typename: 'TableColumnConstraints', nullable: boolean, unique: boolean, other: Array<string> } }>, constraints: { __typename: 'TableConstraints', other: Array<string> } | null } } } | { __typename: 'TableSchemaMetadataEntry', label: string, description: string | null, schema: { __typename: 'TableSchema', columns: Array<{ __typename: 'TableColumn', name: string, description: string | null, type: string, constraints: { __typename: 'TableColumnConstraints', nullable: boolean, unique: boolean, other: Array<string> } }>, constraints: { __typename: 'TableConstraints', other: Array<string> } | null } } | { __typename: 'TextMetadataEntry', text: string, label: string, description: string | null } | { __typename: 'UrlMetadataEntry', url: string, label: string, description: string | null }> } | { __typename: 'LogMessageEvent', runId: string, message: string, timestamp: string, level: LogLevel, stepKey: string | null, eventType: DagsterEventType | null } | { __typename: 'LogsCapturedEvent', runId: string, message: string, timestamp: string, level: LogLevel, stepKey: string | null, fileKey: string, stepKeys: Array<string> | null, pid: number | null, externalUrl: string | null, eventType: DagsterEventType | null } | { __typename: 'MaterializationEvent', runId: string, message: string, timestamp: string, level: LogLevel, stepKey: string | null, eventType: DagsterEventType | null, label: string | null, description: string | null, metadataEntries: Array<{ __typename: 'AssetMetadataEntry', label: string, description: string | null, assetKey: { __typename: 'AssetKey', path: Array<string> } } | { __typename: 'BoolMetadataEntry', boolValue: boolean | null, label: string, description: string | null } | { __typename: 'FloatMetadataEntry', floatValue: number | null, label: string, description: string | null } | { __typename: 'IntMetadataEntry', intValue: number | null, intRepr: string, label: string, description: string | null } | { __typename: 'JsonMetadataEntry', jsonString: string, label: string, description: string | null } | { __typename: 'MarkdownMetadataEntry', mdStr: string, label: string, description: string | null } | { __typename: 'NotebookMetadataEntry', path: string, label: string, description: string | null } | { __typename: 'NullMetadataEntry', label: string, description: string | null } | { __typename: 'PathMetadataEntry', path: string, label: string, description: string | null } | { __typename: 'PipelineRunMetadataEntry', runId: string, label: string, description: string | null } | { __typename: 'PythonArtifactMetadataEntry', module: string, name: string, label: string, description: string | null } | { __typename: 'TableMetadataEntry', label: string, description: string | null, table: { __typename: 'Table', records: Array<string>, schema: { __typename: 'TableSchema', columns: Array<{ __typename: 'TableColumn', name: string, description: string | null, type: string, constraints: { __typename: 'TableColumnConstraints', nullable: boolean, unique: boolean, other: Array<string> } }>, constraints: { __typename: 'TableConstraints', other: Array<string> } | null } } } | { __typename: 'TableSchemaMetadataEntry', label: string, description: string | null, schema: { __typename: 'TableSchema', columns: Array<{ __typename: 'TableColumn', name: string, description: string | null, type: string, constraints: { __typename: 'TableColumnConstraints', nullable: boolean, unique: boolean, other: Array<string> } }>, constraints: { __typename: 'TableConstraints', other: Array<string> } | null } } | { __typename: 'TextMetadataEntry', text: string, label: string, description: string | null } | { __typename: 'UrlMetadataEntry', url: string, label: string, description: string | null }>, assetKey: { __typename: 'AssetKey', path: Array<string> } | null } | { __typename: 'ObjectStoreOperationEvent', runId: string, message: string, timestamp: string, level: LogLevel, stepKey: string | null, eventType: DagsterEventType | null, operationResult: { __typename: 'ObjectStoreOperationResult', op: ObjectStoreOperationType, metadataEntries: Array<{ __typename: 'AssetMetadataEntry', label: string, description: string | null, assetKey: { __typename: 'AssetKey', path: Array<string> } } | { __typename: 'BoolMetadataEntry', boolValue: boolean | null, label: string, description: string | null } | { __typename: 'FloatMetadataEntry', floatValue: number | null, label: string, description: string | null } | { __typename: 'IntMetadataEntry', intValue: number | null, intRepr: string, label: string, description: string | null } | { __typename: 'JsonMetadataEntry', jsonString: string, label: string, description: string | null } | { __typename: 'MarkdownMetadataEntry', mdStr: string, label: string, description: string | null } | { __typename: 'NotebookMetadataEntry', path: string, label: string, description: string | null } | { __typename: 'NullMetadataEntry', label: string, description: string | null } | { __typename: 'PathMetadataEntry', path: string, label: string, description: string | null } | { __typename: 'PipelineRunMetadataEntry', runId: string, label: string, description: string | null } | { __typename: 'PythonArtifactMetadataEntry', module: string, name: string, label: string, description: string | null } | { __typename: 'TableMetadataEntry', label: string, description: string | null, table: { __typename: 'Table', records: Array<string>, schema: { __typename: 'TableSchema', columns: Array<{ __typename: 'TableColumn', name: string, description: string | null, type: string, constraints: { __typename: 'TableColumnConstraints', nullable: boolean, unique: boolean, other: Array<string> } }>, constraints: { __typename: 'TableConstraints', other: Array<string> } | null } } } | { __typename: 'TableSchemaMetadataEntry', label: string, description: string | null, schema: { __typename: 'TableSchema', columns: Array<{ __typename: 'TableColumn', name: string, description: string | null, type: string, constraints: { __typename: 'TableColumnConstraints', nullable: boolean, unique: boolean, other: Array<string> } }>, constraints: { __typename: 'TableConstraints', other: Array<string> } | null } } | { __typename: 'TextMetadataEntry', text: string, label: string, description: string | null } | { __typename: 'UrlMetadataEntry', url: string, label: string, description: string | null }> } } | { __typename: 'ObservationEvent', runId: string, message: string, timestamp: string, level: LogLevel, stepKey: string | null, eventType: DagsterEventType | null, label: string | null, description: string | null, metadataEntries: Array<{ __typename: 'AssetMetadataEntry', label: string, description: string | null, assetKey: { __typename: 'AssetKey', path: Array<string> } } | { __typename: 'BoolMetadataEntry', boolValue: boolean | null, label: string, description: string | null } | { __typename: 'FloatMetadataEntry', floatValue: number | null, label: string, description: string | null } | { __typename: 'IntMetadataEntry', intValue: number | null, intRepr: string, label: string, description: string | null } | { __typename: 'JsonMetadataEntry', jsonString: string, label: string, description: string | null } | { __typename: 'MarkdownMetadataEntry', mdStr: string, label: string, description: string | null } | { __typename: 'NotebookMetadataEntry', path: string, label: string, description: string | null } | { __typename: 'NullMetadataEntry', label: string, description: string | null } | { __typename: 'PathMetadataEntry', path: string, label: string, description: string | null } | { __typename: 'PipelineRunMetadataEntry', runId: string, label: string, description: string | null } | { __typename: 'PythonArtifactMetadataEntry', module: string, name: string, label: string, description: string | null } | { __typename: 'TableMetadataEntry', label: string, description: string | null, table: { __typename: 'Table', records: Array<string>, schema: { __typename: 'TableSchema', columns: Array<{ __typename: 'TableColumn', name: string, description: string | null, type: string, constraints: { __typename: 'TableColumnConstraints', nullable: boolean, unique: boolean, other: Array<string> } }>, constraints: { __typename: 'TableConstraints', other: Array<string> } | null } } } | { __typename: 'TableSchemaMetadataEntry', label: string, description: string | null, schema: { __typename: 'TableSchema', columns: Array<{ __typename: 'TableColumn', name: string, description: string | null, type: string, constraints: { __typename: 'TableColumnConstraints', nullable: boolean, unique: boolean, other: Array<string> } }>, constraints: { __typename: 'TableConstraints', other: Array<string> } | null } } | { __typename: 'TextMetadataEntry', text: string, label: string, description: string | null } | { __typename: 'UrlMetadataEntry', url: string, label: string, description: string | null }>, assetKey: { __typename: 'AssetKey', path: Array<string> } | null } | { __typename: 'ResourceInitFailureEvent', runId: string, message: string, timestamp: string, level: LogLevel, stepKey: string | null, markerStart: string | null, markerEnd: string | null, eventType: DagsterEventType | null, label: string | null, description: string | null, metadataEntries: Array<{ __typename: 'AssetMetadataEntry', label: string, description: string | null, assetKey: { __typename: 'AssetKey', path: Array<string> } } | { __typename: 'BoolMetadataEntry', boolValue: boolean | null, label: string, description: string | null } | { __typename: 'FloatMetadataEntry', floatValue: number | null, label: string, description: string | null } | { __typename: 'IntMetadataEntry', intValue: number | null, intRepr: string, label: string, description: string | null } | { __typename: 'JsonMetadataEntry', jsonString: string, label: string, description: string | null } | { __typename: 'MarkdownMetadataEntry', mdStr: string, label: string, description: string | null } | { __typename: 'NotebookMetadataEntry', path: string, label: string, description: string | null } | { __typename: 'NullMetadataEntry', label: string, description: string | null } | { __typename: 'PathMetadataEntry', path: string, label: string, description: string | null } | { __typename: 'PipelineRunMetadataEntry', runId: string, label: string, description: string | null } | { __typename: 'PythonArtifactMetadataEntry', module: string, name: string, label: string, description: string | null } | { __typename: 'TableMetadataEntry', label: string, description: string | null, table: { __typename: 'Table', records: Array<string>, schema: { __typename: 'TableSchema', columns: Array<{ __typename: 'TableColumn', name: string, description: string | null, type: string, constraints: { __typename: 'TableColumnConstraints', nullable: boolean, unique: boolean, other: Array<string> } }>, constraints: { __typename: 'TableConstraints', other: Array<string> } | null } } } | { __typename: 'TableSchemaMetadataEntry', label: string, description: string | null, schema: { __typename: 'TableSchema', columns: Array<{ __typename: 'TableColumn', name: string, description: string | null, type: string, constraints: { __typename: 'TableColumnConstraints', nullable: boolean, unique: boolean, other: Array<string> } }>, constraints: { __typename: 'TableConstraints', other: Array<string> } | null } } | { __typename: 'TextMetadataEntry', text: string, label: string, description: string | null } | { __typename: 'UrlMetadataEntry', url: string, label: string, description: string | null }>, error: { __typename: 'PythonError', message: string, stack: Array<string>, errorChain: Array<{ __typename: 'ErrorChainLink', isExplicitLink: boolean, error: { __typename: 'PythonError', message: string, stack: Array<string> } }> } | null } | { __typename: 'ResourceInitStartedEvent', runId: string, message: string, timestamp: string, level: LogLevel, stepKey: string | null, markerStart: string | null, markerEnd: string | null, eventType: DagsterEventType | null, label: string | null, description: string | null, metadataEntries: Array<{ __typename: 'AssetMetadataEntry', label: string, description: string | null, assetKey: { __typename: 'AssetKey', path: Array<string> } } | { __typename: 'BoolMetadataEntry', boolValue: boolean | null, label: string, description: string | null } | { __typename: 'FloatMetadataEntry', floatValue: number | null, label: string, description: string | null } | { __typename: 'IntMetadataEntry', intValue: number | null, intRepr: string, label: string, description: string | null } | { __typename: 'JsonMetadataEntry', jsonString: string, label: string, description: string | null } | { __typename: 'MarkdownMetadataEntry', mdStr: string, label: string, description: string | null } | { __typename: 'NotebookMetadataEntry', path: string, label: string, description: string | null } | { __typename: 'NullMetadataEntry', label: string, description: string | null } | { __typename: 'PathMetadataEntry', path: string, label: string, description: string | null } | { __typename: 'PipelineRunMetadataEntry', runId: string, label: string, description: string | null } | { __typename: 'PythonArtifactMetadataEntry', module: string, name: string, label: string, description: string | null } | { __typename: 'TableMetadataEntry', label: string, description: string | null, table: { __typename: 'Table', records: Array<string>, schema: { __typename: 'TableSchema', columns: Array<{ __typename: 'TableColumn', name: string, description: string | null, type: string, constraints: { __typename: 'TableColumnConstraints', nullable: boolean, unique: boolean, other: Array<string> } }>, constraints: { __typename: 'TableConstraints', other: Array<string> } | null } } } | { __typename: 'TableSchemaMetadataEntry', label: string, description: string | null, schema: { __typename: 'TableSchema', columns: Array<{ __typename: 'TableColumn', name: string, description: string | null, type: string, constraints: { __typename: 'TableColumnConstraints', nullable: boolean, unique: boolean, other: Array<string> } }>, constraints: { __typename: 'TableConstraints', other: Array<string> } | null } } | { __typename: 'TextMetadataEntry', text: string, label: string, description: string | null } | { __typename: 'UrlMetadataEntry', url: string, label: string, description: string | null }> } | { __typename: 'ResourceInitSuccessEvent', runId: string, message: string, timestamp: string, level: LogLevel, stepKey: string | null, markerStart: string | null, markerEnd: string | null, eventType: DagsterEventType | null, label: string | null, description: string | null, metadataEntries: Array<{ __typename: 'AssetMetadataEntry', label: string, description: string | null, assetKey: { __typename: 'AssetKey', path: Array<string> } } | { __typename: 'BoolMetadataEntry', boolValue: boolean | null, label: string, description: string | null } | { __typename: 'FloatMetadataEntry', floatValue: number | null, label: string, description: string | null } | { __typename: 'IntMetadataEntry', intValue: number | null, intRepr: string, label: string, description: string | null } | { __typename: 'JsonMetadataEntry', jsonString: string, label: string, description: string | null } | { __typename: 'MarkdownMetadataEntry', mdStr: string, label: string, description: string | null } | { __typename: 'NotebookMetadataEntry', path: string, label: string, description: string | null } | { __typename: 'NullMetadataEntry', label: string, description: string | null } | { __typename: 'PathMetadataEntry', path: string, label: string, description: string | null } | { __typename: 'PipelineRunMetadataEntry', runId: string, label: string, description: string | null } | { __typename: 'PythonArtifactMetadataEntry', module: string, name: string, label: string, description: string | null } | { __typename: 'TableMetadataEntry', label: string, description: string | null, table: { __typename: 'Table', records: Array<string>, schema: { __typename: 'TableSchema', columns: Array<{ __typename: 'TableColumn', name: string, description: string | null, type: string, constraints: { __typename: 'TableColumnConstraints', nullable: boolean, unique: boolean, other: Array<string> } }>, constraints: { __typename: 'TableConstraints', other: Array<string> } | null } } } | { __typename: 'TableSchemaMetadataEntry', label: string, description: string | null, schema: { __typename: 'TableSchema', columns: Array<{ __typename: 'TableColumn', name: string, description: string | null, type: string, constraints: { __typename: 'TableColumnConstraints', nullable: boolean, unique: boolean, other: Array<string> } }>, constraints: { __typename: 'TableConstraints', other: Array<string> } | null } } | { __typename: 'TextMetadataEntry', text: string, label: string, description: string | null } | { __typename: 'UrlMetadataEntry', url: string, label: string, description: string | null }> } | { __typename: 'RunCanceledEvent', runId: string, message: string, timestamp: string, level: LogLevel, stepKey: string | null, eventType: DagsterEventType | null } | { __typename: 'RunCancelingEvent', runId: string, message: string, timestamp: string, level: LogLevel, stepKey: string | null, eventType: DagsterEventType | null } | { __typename: 'RunDequeuedEvent', runId: string, message: string, timestamp: string, level: LogLevel, stepKey: string | null, eventType: DagsterEventType | null } | { __typename: 'RunEnqueuedEvent', runId: string, message: string, timestamp: string, level: LogLevel, stepKey: string | null, eventType: DagsterEventType | null } | { __typename: 'RunFailureEvent', runId: string, message: string, timestamp: string, level: LogLevel, stepKey: string | null, eventType: DagsterEventType | null, error: { __typename: 'PythonError', message: string, stack: Array<string>, errorChain: Array<{ __typename: 'ErrorChainLink', isExplicitLink: boolean, error: { __typename: 'PythonError', message: string, stack: Array<string> } }> } | null } | { __typename: 'RunStartEvent', runId: string, message: string, timestamp: string, level: LogLevel, stepKey: string | null, eventType: DagsterEventType | null } | { __typename: 'RunStartingEvent', runId: string, message: string, timestamp: string, level: LogLevel, stepKey: string | null, eventType: DagsterEventType | null } | { __typename: 'RunSuccessEvent', runId: string, message: string, timestamp: string, level: LogLevel, stepKey: string | null, eventType: DagsterEventType | null } | { __typename: 'StepExpectationResultEvent', runId: string, message: string, timestamp: string, level: LogLevel, stepKey: string | null, eventType: DagsterEventType | null, expectationResult: { __typename: 'ExpectationResult', success: boolean, label: string | null, description: string | null, metadataEntries: Array<{ __typename: 'AssetMetadataEntry', label: string, description: string | null, assetKey: { __typename: 'AssetKey', path: Array<string> } } | { __typename: 'BoolMetadataEntry', boolValue: boolean | null, label: string, description: string | null } | { __typename: 'FloatMetadataEntry', floatValue: number | null, label: string, description: string | null } | { __typename: 'IntMetadataEntry', intValue: number | null, intRepr: string, label: string, description: string | null } | { __typename: 'JsonMetadataEntry', jsonString: string, label: string, description: string | null } | { __typename: 'MarkdownMetadataEntry', mdStr: string, label: string, description: string | null } | { __typename: 'NotebookMetadataEntry', path: string, label: string, description: string | null } | { __typename: 'NullMetadataEntry', label: string, description: string | null } | { __typename: 'PathMetadataEntry', path: string, label: string, description: string | null } | { __typename: 'PipelineRunMetadataEntry', runId: string, label: string, description: string | null } | { __typename: 'PythonArtifactMetadataEntry', module: string, name: string, label: string, description: string | null } | { __typename: 'TableMetadataEntry', label: string, description: string | null, table: { __typename: 'Table', records: Array<string>, schema: { __typename: 'TableSchema', columns: Array<{ __typename: 'TableColumn', name: string, description: string | null, type: string, constraints: { __typename: 'TableColumnConstraints', nullable: boolean, unique: boolean, other: Array<string> } }>, constraints: { __typename: 'TableConstraints', other: Array<string> } | null } } } | { __typename: 'TableSchemaMetadataEntry', label: string, description: string | null, schema: { __typename: 'TableSchema', columns: Array<{ __typename: 'TableColumn', name: string, description: string | null, type: string, constraints: { __typename: 'TableColumnConstraints', nullable: boolean, unique: boolean, other: Array<string> } }>, constraints: { __typename: 'TableConstraints', other: Array<string> } | null } } | { __typename: 'TextMetadataEntry', text: string, label: string, description: string | null } | { __typename: 'UrlMetadataEntry', url: string, label: string, description: string | null }> } } | { __typename: 'StepWorkerStartedEvent', runId: string, message: string, timestamp: string, level: LogLevel, stepKey: string | null, markerStart: string | null, markerEnd: string | null, eventType: DagsterEventType | null, label: string | null, description: string | null, metadataEntries: Array<{ __typename: 'AssetMetadataEntry', label: string, description: string | null, assetKey: { __typename: 'AssetKey', path: Array<string> } } | { __typename: 'BoolMetadataEntry', boolValue: boolean | null, label: string, description: string | null } | { __typename: 'FloatMetadataEntry', floatValue: number | null, label: string, description: string | null } | { __typename: 'IntMetadataEntry', intValue: number | null, intRepr: string, label: string, description: string | null } | { __typename: 'JsonMetadataEntry', jsonString: string, label: string, description: string | null } | { __typename: 'MarkdownMetadataEntry', mdStr: string, label: string, description: string | null } | { __typename: 'NotebookMetadataEntry', path: string, label: string, description: string | null } | { __typename: 'NullMetadataEntry', label: string, description: string | null } | { __typename: 'PathMetadataEntry', path: string, label: string, description: string | null } | { __typename: 'PipelineRunMetadataEntry', runId: string, label: string, description: string | null } | { __typename: 'PythonArtifactMetadataEntry', module: string, name: string, label: string, description: string | null } | { __typename: 'TableMetadataEntry', label: string, description: string | null, table: { __typename: 'Table', records: Array<string>, schema: { __typename: 'TableSchema', columns: Array<{ __typename: 'TableColumn', name: string, description: string | null, type: string, constraints: { __typename: 'TableColumnConstraints', nullable: boolean, unique: boolean, other: Array<string> } }>, constraints: { __typename: 'TableConstraints', other: Array<string> } | null } } } | { __typename: 'TableSchemaMetadataEntry', label: string, description: string | null, schema: { __typename: 'TableSchema', columns: Array<{ __typename: 'TableColumn', name: string, description: string | null, type: string, constraints: { __typename: 'TableColumnConstraints', nullable: boolean, unique: boolean, other: Array<string> } }>, constraints: { __typename: 'TableConstraints', other: Array<string> } | null } } | { __typename: 'TextMetadataEntry', text: string, label: string, description: string | null } | { __typename: 'UrlMetadataEntry', url: string, label: string, description: string | null }> } | { __typename: 'StepWorkerStartingEvent', runId: string, message: string, timestamp: string, level: LogLevel, stepKey: string | null, markerStart: string | null, markerEnd: string | null, eventType: DagsterEventType | null, label: string | null, description: string | null, metadataEntries: Array<{ __typename: 'AssetMetadataEntry', label: string, description: string | null, assetKey: { __typename: 'AssetKey', path: Array<string> } } | { __typename: 'BoolMetadataEntry', boolValue: boolean | null, label: string, description: string | null } | { __typename: 'FloatMetadataEntry', floatValue: number | null, label: string, description: string | null } | { __typename: 'IntMetadataEntry', intValue: number | null, intRepr: string, label: string, description: string | null } | { __typename: 'JsonMetadataEntry', jsonString: string, label: string, description: string | null } | { __typename: 'MarkdownMetadataEntry', mdStr: string, label: string, description: string | null } | { __typename: 'NotebookMetadataEntry', path: string, label: string, description: string | null } | { __typename: 'NullMetadataEntry', label: string, description: string | null } | { __typename: 'PathMetadataEntry', path: string, label: string, description: string | null } | { __typename: 'PipelineRunMetadataEntry', runId: string, label: string, description: string | null } | { __typename: 'PythonArtifactMetadataEntry', module: string, name: string, label: string, description: string | null } | { __typename: 'TableMetadataEntry', label: string, description: string | null, table: { __typename: 'Table', records: Array<string>, schema: { __typename: 'TableSchema', columns: Array<{ __typename: 'TableColumn', name: string, description: string | null, type: string, constraints: { __typename: 'TableColumnConstraints', nullable: boolean, unique: boolean, other: Array<string> } }>, constraints: { __typename: 'TableConstraints', other: Array<string> } | null } } } | { __typename: 'TableSchemaMetadataEntry', label: string, description: string | null, schema: { __typename: 'TableSchema', columns: Array<{ __typename: 'TableColumn', name: string, description: string | null, type: string, constraints: { __typename: 'TableColumnConstraints', nullable: boolean, unique: boolean, other: Array<string> } }>, constraints: { __typename: 'TableConstraints', other: Array<string> } | null } } | { __typename: 'TextMetadataEntry', text: string, label: string, description: string | null } | { __typename: 'UrlMetadataEntry', url: string, label: string, description: string | null }> }> };

export type PipelineRunLogsSubscriptionStatusFragmentFragment = { __typename: 'Run', id: string, runId: string, status: RunStatus, canTerminate: boolean };

export type RunLogsQueryQueryVariables = Exact<{
  runId: Scalars['ID'];
  cursor?: InputMaybe<Scalars['String']>;
  limit?: InputMaybe<Scalars['Int']>;
}>;


export type RunLogsQueryQuery = { __typename: 'DagitQuery', pipelineRunOrError: { __typename: 'PythonError' } | { __typename: 'Run', id: string, runId: string, status: RunStatus, canTerminate: boolean } | { __typename: 'RunNotFoundError' }, logsForRun: { __typename: 'EventConnection', cursor: string, events: Array<{ __typename: 'AlertFailureEvent', runId: string, message: string, timestamp: string, level: LogLevel, stepKey: string | null, eventType: DagsterEventType | null } | { __typename: 'AlertStartEvent', runId: string, message: string, timestamp: string, level: LogLevel, stepKey: string | null, eventType: DagsterEventType | null } | { __typename: 'AlertSuccessEvent', runId: string, message: string, timestamp: string, level: LogLevel, stepKey: string | null, eventType: DagsterEventType | null } | { __typename: 'AssetMaterializationPlannedEvent', runId: string, message: string, timestamp: string, level: LogLevel, stepKey: string | null, eventType: DagsterEventType | null } | { __typename: 'EngineEvent', runId: string, message: string, timestamp: string, level: LogLevel, stepKey: string | null, markerStart: string | null, markerEnd: string | null, eventType: DagsterEventType | null, label: string | null, description: string | null, metadataEntries: Array<{ __typename: 'AssetMetadataEntry', label: string, description: string | null, assetKey: { __typename: 'AssetKey', path: Array<string> } } | { __typename: 'BoolMetadataEntry', boolValue: boolean | null, label: string, description: string | null } | { __typename: 'FloatMetadataEntry', floatValue: number | null, label: string, description: string | null } | { __typename: 'IntMetadataEntry', intValue: number | null, intRepr: string, label: string, description: string | null } | { __typename: 'JsonMetadataEntry', jsonString: string, label: string, description: string | null } | { __typename: 'MarkdownMetadataEntry', mdStr: string, label: string, description: string | null } | { __typename: 'NotebookMetadataEntry', path: string, label: string, description: string | null } | { __typename: 'NullMetadataEntry', label: string, description: string | null } | { __typename: 'PathMetadataEntry', path: string, label: string, description: string | null } | { __typename: 'PipelineRunMetadataEntry', runId: string, label: string, description: string | null } | { __typename: 'PythonArtifactMetadataEntry', module: string, name: string, label: string, description: string | null } | { __typename: 'TableMetadataEntry', label: string, description: string | null, table: { __typename: 'Table', records: Array<string>, schema: { __typename: 'TableSchema', columns: Array<{ __typename: 'TableColumn', name: string, description: string | null, type: string, constraints: { __typename: 'TableColumnConstraints', nullable: boolean, unique: boolean, other: Array<string> } }>, constraints: { __typename: 'TableConstraints', other: Array<string> } | null } } } | { __typename: 'TableSchemaMetadataEntry', label: string, description: string | null, schema: { __typename: 'TableSchema', columns: Array<{ __typename: 'TableColumn', name: string, description: string | null, type: string, constraints: { __typename: 'TableColumnConstraints', nullable: boolean, unique: boolean, other: Array<string> } }>, constraints: { __typename: 'TableConstraints', other: Array<string> } | null } } | { __typename: 'TextMetadataEntry', text: string, label: string, description: string | null } | { __typename: 'UrlMetadataEntry', url: string, label: string, description: string | null }>, error: { __typename: 'PythonError', message: string, stack: Array<string>, errorChain: Array<{ __typename: 'ErrorChainLink', isExplicitLink: boolean, error: { __typename: 'PythonError', message: string, stack: Array<string> } }> } | null } | { __typename: 'ExecutionStepFailureEvent', runId: string, message: string, timestamp: string, level: LogLevel, stepKey: string | null, eventType: DagsterEventType | null, errorSource: ErrorSource | null, error: { __typename: 'PythonError', message: string, stack: Array<string>, errorChain: Array<{ __typename: 'ErrorChainLink', isExplicitLink: boolean, error: { __typename: 'PythonError', message: string, stack: Array<string> } }> } | null, failureMetadata: { __typename: 'FailureMetadata', metadataEntries: Array<{ __typename: 'AssetMetadataEntry', label: string, description: string | null, assetKey: { __typename: 'AssetKey', path: Array<string> } } | { __typename: 'BoolMetadataEntry', boolValue: boolean | null, label: string, description: string | null } | { __typename: 'FloatMetadataEntry', floatValue: number | null, label: string, description: string | null } | { __typename: 'IntMetadataEntry', intValue: number | null, intRepr: string, label: string, description: string | null } | { __typename: 'JsonMetadataEntry', jsonString: string, label: string, description: string | null } | { __typename: 'MarkdownMetadataEntry', mdStr: string, label: string, description: string | null } | { __typename: 'NotebookMetadataEntry', path: string, label: string, description: string | null } | { __typename: 'NullMetadataEntry', label: string, description: string | null } | { __typename: 'PathMetadataEntry', path: string, label: string, description: string | null } | { __typename: 'PipelineRunMetadataEntry', runId: string, label: string, description: string | null } | { __typename: 'PythonArtifactMetadataEntry', module: string, name: string, label: string, description: string | null } | { __typename: 'TableMetadataEntry', label: string, description: string | null, table: { __typename: 'Table', records: Array<string>, schema: { __typename: 'TableSchema', columns: Array<{ __typename: 'TableColumn', name: string, description: string | null, type: string, constraints: { __typename: 'TableColumnConstraints', nullable: boolean, unique: boolean, other: Array<string> } }>, constraints: { __typename: 'TableConstraints', other: Array<string> } | null } } } | { __typename: 'TableSchemaMetadataEntry', label: string, description: string | null, schema: { __typename: 'TableSchema', columns: Array<{ __typename: 'TableColumn', name: string, description: string | null, type: string, constraints: { __typename: 'TableColumnConstraints', nullable: boolean, unique: boolean, other: Array<string> } }>, constraints: { __typename: 'TableConstraints', other: Array<string> } | null } } | { __typename: 'TextMetadataEntry', text: string, label: string, description: string | null } | { __typename: 'UrlMetadataEntry', url: string, label: string, description: string | null }> } | null } | { __typename: 'ExecutionStepInputEvent', runId: string, message: string, timestamp: string, level: LogLevel, stepKey: string | null, eventType: DagsterEventType | null, inputName: string, typeCheck: { __typename: 'TypeCheck', label: string | null, description: string | null, success: boolean, metadataEntries: Array<{ __typename: 'AssetMetadataEntry', label: string, description: string | null, assetKey: { __typename: 'AssetKey', path: Array<string> } } | { __typename: 'BoolMetadataEntry', boolValue: boolean | null, label: string, description: string | null } | { __typename: 'FloatMetadataEntry', floatValue: number | null, label: string, description: string | null } | { __typename: 'IntMetadataEntry', intValue: number | null, intRepr: string, label: string, description: string | null } | { __typename: 'JsonMetadataEntry', jsonString: string, label: string, description: string | null } | { __typename: 'MarkdownMetadataEntry', mdStr: string, label: string, description: string | null } | { __typename: 'NotebookMetadataEntry', path: string, label: string, description: string | null } | { __typename: 'NullMetadataEntry', label: string, description: string | null } | { __typename: 'PathMetadataEntry', path: string, label: string, description: string | null } | { __typename: 'PipelineRunMetadataEntry', runId: string, label: string, description: string | null } | { __typename: 'PythonArtifactMetadataEntry', module: string, name: string, label: string, description: string | null } | { __typename: 'TableMetadataEntry', label: string, description: string | null, table: { __typename: 'Table', records: Array<string>, schema: { __typename: 'TableSchema', columns: Array<{ __typename: 'TableColumn', name: string, description: string | null, type: string, constraints: { __typename: 'TableColumnConstraints', nullable: boolean, unique: boolean, other: Array<string> } }>, constraints: { __typename: 'TableConstraints', other: Array<string> } | null } } } | { __typename: 'TableSchemaMetadataEntry', label: string, description: string | null, schema: { __typename: 'TableSchema', columns: Array<{ __typename: 'TableColumn', name: string, description: string | null, type: string, constraints: { __typename: 'TableColumnConstraints', nullable: boolean, unique: boolean, other: Array<string> } }>, constraints: { __typename: 'TableConstraints', other: Array<string> } | null } } | { __typename: 'TextMetadataEntry', text: string, label: string, description: string | null } | { __typename: 'UrlMetadataEntry', url: string, label: string, description: string | null }> } } | { __typename: 'ExecutionStepOutputEvent', runId: string, message: string, timestamp: string, level: LogLevel, stepKey: string | null, eventType: DagsterEventType | null, label: string | null, description: string | null, outputName: string, metadataEntries: Array<{ __typename: 'AssetMetadataEntry', label: string, description: string | null, assetKey: { __typename: 'AssetKey', path: Array<string> } } | { __typename: 'BoolMetadataEntry', boolValue: boolean | null, label: string, description: string | null } | { __typename: 'FloatMetadataEntry', floatValue: number | null, label: string, description: string | null } | { __typename: 'IntMetadataEntry', intValue: number | null, intRepr: string, label: string, description: string | null } | { __typename: 'JsonMetadataEntry', jsonString: string, label: string, description: string | null } | { __typename: 'MarkdownMetadataEntry', mdStr: string, label: string, description: string | null } | { __typename: 'NotebookMetadataEntry', path: string, label: string, description: string | null } | { __typename: 'NullMetadataEntry', label: string, description: string | null } | { __typename: 'PathMetadataEntry', path: string, label: string, description: string | null } | { __typename: 'PipelineRunMetadataEntry', runId: string, label: string, description: string | null } | { __typename: 'PythonArtifactMetadataEntry', module: string, name: string, label: string, description: string | null } | { __typename: 'TableMetadataEntry', label: string, description: string | null, table: { __typename: 'Table', records: Array<string>, schema: { __typename: 'TableSchema', columns: Array<{ __typename: 'TableColumn', name: string, description: string | null, type: string, constraints: { __typename: 'TableColumnConstraints', nullable: boolean, unique: boolean, other: Array<string> } }>, constraints: { __typename: 'TableConstraints', other: Array<string> } | null } } } | { __typename: 'TableSchemaMetadataEntry', label: string, description: string | null, schema: { __typename: 'TableSchema', columns: Array<{ __typename: 'TableColumn', name: string, description: string | null, type: string, constraints: { __typename: 'TableColumnConstraints', nullable: boolean, unique: boolean, other: Array<string> } }>, constraints: { __typename: 'TableConstraints', other: Array<string> } | null } } | { __typename: 'TextMetadataEntry', text: string, label: string, description: string | null } | { __typename: 'UrlMetadataEntry', url: string, label: string, description: string | null }>, typeCheck: { __typename: 'TypeCheck', label: string | null, description: string | null, success: boolean, metadataEntries: Array<{ __typename: 'AssetMetadataEntry', label: string, description: string | null, assetKey: { __typename: 'AssetKey', path: Array<string> } } | { __typename: 'BoolMetadataEntry', boolValue: boolean | null, label: string, description: string | null } | { __typename: 'FloatMetadataEntry', floatValue: number | null, label: string, description: string | null } | { __typename: 'IntMetadataEntry', intValue: number | null, intRepr: string, label: string, description: string | null } | { __typename: 'JsonMetadataEntry', jsonString: string, label: string, description: string | null } | { __typename: 'MarkdownMetadataEntry', mdStr: string, label: string, description: string | null } | { __typename: 'NotebookMetadataEntry', path: string, label: string, description: string | null } | { __typename: 'NullMetadataEntry', label: string, description: string | null } | { __typename: 'PathMetadataEntry', path: string, label: string, description: string | null } | { __typename: 'PipelineRunMetadataEntry', runId: string, label: string, description: string | null } | { __typename: 'PythonArtifactMetadataEntry', module: string, name: string, label: string, description: string | null } | { __typename: 'TableMetadataEntry', label: string, description: string | null, table: { __typename: 'Table', records: Array<string>, schema: { __typename: 'TableSchema', columns: Array<{ __typename: 'TableColumn', name: string, description: string | null, type: string, constraints: { __typename: 'TableColumnConstraints', nullable: boolean, unique: boolean, other: Array<string> } }>, constraints: { __typename: 'TableConstraints', other: Array<string> } | null } } } | { __typename: 'TableSchemaMetadataEntry', label: string, description: string | null, schema: { __typename: 'TableSchema', columns: Array<{ __typename: 'TableColumn', name: string, description: string | null, type: string, constraints: { __typename: 'TableColumnConstraints', nullable: boolean, unique: boolean, other: Array<string> } }>, constraints: { __typename: 'TableConstraints', other: Array<string> } | null } } | { __typename: 'TextMetadataEntry', text: string, label: string, description: string | null } | { __typename: 'UrlMetadataEntry', url: string, label: string, description: string | null }> } } | { __typename: 'ExecutionStepRestartEvent', runId: string, message: string, timestamp: string, level: LogLevel, stepKey: string | null, eventType: DagsterEventType | null } | { __typename: 'ExecutionStepSkippedEvent', runId: string, message: string, timestamp: string, level: LogLevel, stepKey: string | null, eventType: DagsterEventType | null } | { __typename: 'ExecutionStepStartEvent', runId: string, message: string, timestamp: string, level: LogLevel, stepKey: string | null, eventType: DagsterEventType | null } | { __typename: 'ExecutionStepSuccessEvent', runId: string, message: string, timestamp: string, level: LogLevel, stepKey: string | null, eventType: DagsterEventType | null } | { __typename: 'ExecutionStepUpForRetryEvent', runId: string, message: string, timestamp: string, level: LogLevel, stepKey: string | null, eventType: DagsterEventType | null, error: { __typename: 'PythonError', message: string, stack: Array<string>, errorChain: Array<{ __typename: 'ErrorChainLink', isExplicitLink: boolean, error: { __typename: 'PythonError', message: string, stack: Array<string> } }> } | null } | { __typename: 'HandledOutputEvent', runId: string, message: string, timestamp: string, level: LogLevel, stepKey: string | null, eventType: DagsterEventType | null, label: string | null, description: string | null, outputName: string, managerKey: string, metadataEntries: Array<{ __typename: 'AssetMetadataEntry', label: string, description: string | null, assetKey: { __typename: 'AssetKey', path: Array<string> } } | { __typename: 'BoolMetadataEntry', boolValue: boolean | null, label: string, description: string | null } | { __typename: 'FloatMetadataEntry', floatValue: number | null, label: string, description: string | null } | { __typename: 'IntMetadataEntry', intValue: number | null, intRepr: string, label: string, description: string | null } | { __typename: 'JsonMetadataEntry', jsonString: string, label: string, description: string | null } | { __typename: 'MarkdownMetadataEntry', mdStr: string, label: string, description: string | null } | { __typename: 'NotebookMetadataEntry', path: string, label: string, description: string | null } | { __typename: 'NullMetadataEntry', label: string, description: string | null } | { __typename: 'PathMetadataEntry', path: string, label: string, description: string | null } | { __typename: 'PipelineRunMetadataEntry', runId: string, label: string, description: string | null } | { __typename: 'PythonArtifactMetadataEntry', module: string, name: string, label: string, description: string | null } | { __typename: 'TableMetadataEntry', label: string, description: string | null, table: { __typename: 'Table', records: Array<string>, schema: { __typename: 'TableSchema', columns: Array<{ __typename: 'TableColumn', name: string, description: string | null, type: string, constraints: { __typename: 'TableColumnConstraints', nullable: boolean, unique: boolean, other: Array<string> } }>, constraints: { __typename: 'TableConstraints', other: Array<string> } | null } } } | { __typename: 'TableSchemaMetadataEntry', label: string, description: string | null, schema: { __typename: 'TableSchema', columns: Array<{ __typename: 'TableColumn', name: string, description: string | null, type: string, constraints: { __typename: 'TableColumnConstraints', nullable: boolean, unique: boolean, other: Array<string> } }>, constraints: { __typename: 'TableConstraints', other: Array<string> } | null } } | { __typename: 'TextMetadataEntry', text: string, label: string, description: string | null } | { __typename: 'UrlMetadataEntry', url: string, label: string, description: string | null }> } | { __typename: 'HookCompletedEvent', runId: string, message: string, timestamp: string, level: LogLevel, stepKey: string | null, eventType: DagsterEventType | null } | { __typename: 'HookErroredEvent', runId: string, message: string, timestamp: string, level: LogLevel, stepKey: string | null, eventType: DagsterEventType | null, error: { __typename: 'PythonError', message: string, stack: Array<string>, errorChain: Array<{ __typename: 'ErrorChainLink', isExplicitLink: boolean, error: { __typename: 'PythonError', message: string, stack: Array<string> } }> } | null } | { __typename: 'HookSkippedEvent', runId: string, message: string, timestamp: string, level: LogLevel, stepKey: string | null, eventType: DagsterEventType | null } | { __typename: 'LoadedInputEvent', runId: string, message: string, timestamp: string, level: LogLevel, stepKey: string | null, eventType: DagsterEventType | null, label: string | null, description: string | null, inputName: string, managerKey: string, upstreamOutputName: string | null, upstreamStepKey: string | null, metadataEntries: Array<{ __typename: 'AssetMetadataEntry', label: string, description: string | null, assetKey: { __typename: 'AssetKey', path: Array<string> } } | { __typename: 'BoolMetadataEntry', boolValue: boolean | null, label: string, description: string | null } | { __typename: 'FloatMetadataEntry', floatValue: number | null, label: string, description: string | null } | { __typename: 'IntMetadataEntry', intValue: number | null, intRepr: string, label: string, description: string | null } | { __typename: 'JsonMetadataEntry', jsonString: string, label: string, description: string | null } | { __typename: 'MarkdownMetadataEntry', mdStr: string, label: string, description: string | null } | { __typename: 'NotebookMetadataEntry', path: string, label: string, description: string | null } | { __typename: 'NullMetadataEntry', label: string, description: string | null } | { __typename: 'PathMetadataEntry', path: string, label: string, description: string | null } | { __typename: 'PipelineRunMetadataEntry', runId: string, label: string, description: string | null } | { __typename: 'PythonArtifactMetadataEntry', module: string, name: string, label: string, description: string | null } | { __typename: 'TableMetadataEntry', label: string, description: string | null, table: { __typename: 'Table', records: Array<string>, schema: { __typename: 'TableSchema', columns: Array<{ __typename: 'TableColumn', name: string, description: string | null, type: string, constraints: { __typename: 'TableColumnConstraints', nullable: boolean, unique: boolean, other: Array<string> } }>, constraints: { __typename: 'TableConstraints', other: Array<string> } | null } } } | { __typename: 'TableSchemaMetadataEntry', label: string, description: string | null, schema: { __typename: 'TableSchema', columns: Array<{ __typename: 'TableColumn', name: string, description: string | null, type: string, constraints: { __typename: 'TableColumnConstraints', nullable: boolean, unique: boolean, other: Array<string> } }>, constraints: { __typename: 'TableConstraints', other: Array<string> } | null } } | { __typename: 'TextMetadataEntry', text: string, label: string, description: string | null } | { __typename: 'UrlMetadataEntry', url: string, label: string, description: string | null }> } | { __typename: 'LogMessageEvent', runId: string, message: string, timestamp: string, level: LogLevel, stepKey: string | null, eventType: DagsterEventType | null } | { __typename: 'LogsCapturedEvent', runId: string, message: string, timestamp: string, level: LogLevel, stepKey: string | null, fileKey: string, stepKeys: Array<string> | null, pid: number | null, externalUrl: string | null, eventType: DagsterEventType | null } | { __typename: 'MaterializationEvent', runId: string, message: string, timestamp: string, level: LogLevel, stepKey: string | null, eventType: DagsterEventType | null, label: string | null, description: string | null, metadataEntries: Array<{ __typename: 'AssetMetadataEntry', label: string, description: string | null, assetKey: { __typename: 'AssetKey', path: Array<string> } } | { __typename: 'BoolMetadataEntry', boolValue: boolean | null, label: string, description: string | null } | { __typename: 'FloatMetadataEntry', floatValue: number | null, label: string, description: string | null } | { __typename: 'IntMetadataEntry', intValue: number | null, intRepr: string, label: string, description: string | null } | { __typename: 'JsonMetadataEntry', jsonString: string, label: string, description: string | null } | { __typename: 'MarkdownMetadataEntry', mdStr: string, label: string, description: string | null } | { __typename: 'NotebookMetadataEntry', path: string, label: string, description: string | null } | { __typename: 'NullMetadataEntry', label: string, description: string | null } | { __typename: 'PathMetadataEntry', path: string, label: string, description: string | null } | { __typename: 'PipelineRunMetadataEntry', runId: string, label: string, description: string | null } | { __typename: 'PythonArtifactMetadataEntry', module: string, name: string, label: string, description: string | null } | { __typename: 'TableMetadataEntry', label: string, description: string | null, table: { __typename: 'Table', records: Array<string>, schema: { __typename: 'TableSchema', columns: Array<{ __typename: 'TableColumn', name: string, description: string | null, type: string, constraints: { __typename: 'TableColumnConstraints', nullable: boolean, unique: boolean, other: Array<string> } }>, constraints: { __typename: 'TableConstraints', other: Array<string> } | null } } } | { __typename: 'TableSchemaMetadataEntry', label: string, description: string | null, schema: { __typename: 'TableSchema', columns: Array<{ __typename: 'TableColumn', name: string, description: string | null, type: string, constraints: { __typename: 'TableColumnConstraints', nullable: boolean, unique: boolean, other: Array<string> } }>, constraints: { __typename: 'TableConstraints', other: Array<string> } | null } } | { __typename: 'TextMetadataEntry', text: string, label: string, description: string | null } | { __typename: 'UrlMetadataEntry', url: string, label: string, description: string | null }>, assetKey: { __typename: 'AssetKey', path: Array<string> } | null } | { __typename: 'ObjectStoreOperationEvent', runId: string, message: string, timestamp: string, level: LogLevel, stepKey: string | null, eventType: DagsterEventType | null, operationResult: { __typename: 'ObjectStoreOperationResult', op: ObjectStoreOperationType, metadataEntries: Array<{ __typename: 'AssetMetadataEntry', label: string, description: string | null, assetKey: { __typename: 'AssetKey', path: Array<string> } } | { __typename: 'BoolMetadataEntry', boolValue: boolean | null, label: string, description: string | null } | { __typename: 'FloatMetadataEntry', floatValue: number | null, label: string, description: string | null } | { __typename: 'IntMetadataEntry', intValue: number | null, intRepr: string, label: string, description: string | null } | { __typename: 'JsonMetadataEntry', jsonString: string, label: string, description: string | null } | { __typename: 'MarkdownMetadataEntry', mdStr: string, label: string, description: string | null } | { __typename: 'NotebookMetadataEntry', path: string, label: string, description: string | null } | { __typename: 'NullMetadataEntry', label: string, description: string | null } | { __typename: 'PathMetadataEntry', path: string, label: string, description: string | null } | { __typename: 'PipelineRunMetadataEntry', runId: string, label: string, description: string | null } | { __typename: 'PythonArtifactMetadataEntry', module: string, name: string, label: string, description: string | null } | { __typename: 'TableMetadataEntry', label: string, description: string | null, table: { __typename: 'Table', records: Array<string>, schema: { __typename: 'TableSchema', columns: Array<{ __typename: 'TableColumn', name: string, description: string | null, type: string, constraints: { __typename: 'TableColumnConstraints', nullable: boolean, unique: boolean, other: Array<string> } }>, constraints: { __typename: 'TableConstraints', other: Array<string> } | null } } } | { __typename: 'TableSchemaMetadataEntry', label: string, description: string | null, schema: { __typename: 'TableSchema', columns: Array<{ __typename: 'TableColumn', name: string, description: string | null, type: string, constraints: { __typename: 'TableColumnConstraints', nullable: boolean, unique: boolean, other: Array<string> } }>, constraints: { __typename: 'TableConstraints', other: Array<string> } | null } } | { __typename: 'TextMetadataEntry', text: string, label: string, description: string | null } | { __typename: 'UrlMetadataEntry', url: string, label: string, description: string | null }> } } | { __typename: 'ObservationEvent', runId: string, message: string, timestamp: string, level: LogLevel, stepKey: string | null, eventType: DagsterEventType | null, label: string | null, description: string | null, metadataEntries: Array<{ __typename: 'AssetMetadataEntry', label: string, description: string | null, assetKey: { __typename: 'AssetKey', path: Array<string> } } | { __typename: 'BoolMetadataEntry', boolValue: boolean | null, label: string, description: string | null } | { __typename: 'FloatMetadataEntry', floatValue: number | null, label: string, description: string | null } | { __typename: 'IntMetadataEntry', intValue: number | null, intRepr: string, label: string, description: string | null } | { __typename: 'JsonMetadataEntry', jsonString: string, label: string, description: string | null } | { __typename: 'MarkdownMetadataEntry', mdStr: string, label: string, description: string | null } | { __typename: 'NotebookMetadataEntry', path: string, label: string, description: string | null } | { __typename: 'NullMetadataEntry', label: string, description: string | null } | { __typename: 'PathMetadataEntry', path: string, label: string, description: string | null } | { __typename: 'PipelineRunMetadataEntry', runId: string, label: string, description: string | null } | { __typename: 'PythonArtifactMetadataEntry', module: string, name: string, label: string, description: string | null } | { __typename: 'TableMetadataEntry', label: string, description: string | null, table: { __typename: 'Table', records: Array<string>, schema: { __typename: 'TableSchema', columns: Array<{ __typename: 'TableColumn', name: string, description: string | null, type: string, constraints: { __typename: 'TableColumnConstraints', nullable: boolean, unique: boolean, other: Array<string> } }>, constraints: { __typename: 'TableConstraints', other: Array<string> } | null } } } | { __typename: 'TableSchemaMetadataEntry', label: string, description: string | null, schema: { __typename: 'TableSchema', columns: Array<{ __typename: 'TableColumn', name: string, description: string | null, type: string, constraints: { __typename: 'TableColumnConstraints', nullable: boolean, unique: boolean, other: Array<string> } }>, constraints: { __typename: 'TableConstraints', other: Array<string> } | null } } | { __typename: 'TextMetadataEntry', text: string, label: string, description: string | null } | { __typename: 'UrlMetadataEntry', url: string, label: string, description: string | null }>, assetKey: { __typename: 'AssetKey', path: Array<string> } | null } | { __typename: 'ResourceInitFailureEvent', runId: string, message: string, timestamp: string, level: LogLevel, stepKey: string | null, markerStart: string | null, markerEnd: string | null, eventType: DagsterEventType | null, label: string | null, description: string | null, metadataEntries: Array<{ __typename: 'AssetMetadataEntry', label: string, description: string | null, assetKey: { __typename: 'AssetKey', path: Array<string> } } | { __typename: 'BoolMetadataEntry', boolValue: boolean | null, label: string, description: string | null } | { __typename: 'FloatMetadataEntry', floatValue: number | null, label: string, description: string | null } | { __typename: 'IntMetadataEntry', intValue: number | null, intRepr: string, label: string, description: string | null } | { __typename: 'JsonMetadataEntry', jsonString: string, label: string, description: string | null } | { __typename: 'MarkdownMetadataEntry', mdStr: string, label: string, description: string | null } | { __typename: 'NotebookMetadataEntry', path: string, label: string, description: string | null } | { __typename: 'NullMetadataEntry', label: string, description: string | null } | { __typename: 'PathMetadataEntry', path: string, label: string, description: string | null } | { __typename: 'PipelineRunMetadataEntry', runId: string, label: string, description: string | null } | { __typename: 'PythonArtifactMetadataEntry', module: string, name: string, label: string, description: string | null } | { __typename: 'TableMetadataEntry', label: string, description: string | null, table: { __typename: 'Table', records: Array<string>, schema: { __typename: 'TableSchema', columns: Array<{ __typename: 'TableColumn', name: string, description: string | null, type: string, constraints: { __typename: 'TableColumnConstraints', nullable: boolean, unique: boolean, other: Array<string> } }>, constraints: { __typename: 'TableConstraints', other: Array<string> } | null } } } | { __typename: 'TableSchemaMetadataEntry', label: string, description: string | null, schema: { __typename: 'TableSchema', columns: Array<{ __typename: 'TableColumn', name: string, description: string | null, type: string, constraints: { __typename: 'TableColumnConstraints', nullable: boolean, unique: boolean, other: Array<string> } }>, constraints: { __typename: 'TableConstraints', other: Array<string> } | null } } | { __typename: 'TextMetadataEntry', text: string, label: string, description: string | null } | { __typename: 'UrlMetadataEntry', url: string, label: string, description: string | null }>, error: { __typename: 'PythonError', message: string, stack: Array<string>, errorChain: Array<{ __typename: 'ErrorChainLink', isExplicitLink: boolean, error: { __typename: 'PythonError', message: string, stack: Array<string> } }> } | null } | { __typename: 'ResourceInitStartedEvent', runId: string, message: string, timestamp: string, level: LogLevel, stepKey: string | null, markerStart: string | null, markerEnd: string | null, eventType: DagsterEventType | null, label: string | null, description: string | null, metadataEntries: Array<{ __typename: 'AssetMetadataEntry', label: string, description: string | null, assetKey: { __typename: 'AssetKey', path: Array<string> } } | { __typename: 'BoolMetadataEntry', boolValue: boolean | null, label: string, description: string | null } | { __typename: 'FloatMetadataEntry', floatValue: number | null, label: string, description: string | null } | { __typename: 'IntMetadataEntry', intValue: number | null, intRepr: string, label: string, description: string | null } | { __typename: 'JsonMetadataEntry', jsonString: string, label: string, description: string | null } | { __typename: 'MarkdownMetadataEntry', mdStr: string, label: string, description: string | null } | { __typename: 'NotebookMetadataEntry', path: string, label: string, description: string | null } | { __typename: 'NullMetadataEntry', label: string, description: string | null } | { __typename: 'PathMetadataEntry', path: string, label: string, description: string | null } | { __typename: 'PipelineRunMetadataEntry', runId: string, label: string, description: string | null } | { __typename: 'PythonArtifactMetadataEntry', module: string, name: string, label: string, description: string | null } | { __typename: 'TableMetadataEntry', label: string, description: string | null, table: { __typename: 'Table', records: Array<string>, schema: { __typename: 'TableSchema', columns: Array<{ __typename: 'TableColumn', name: string, description: string | null, type: string, constraints: { __typename: 'TableColumnConstraints', nullable: boolean, unique: boolean, other: Array<string> } }>, constraints: { __typename: 'TableConstraints', other: Array<string> } | null } } } | { __typename: 'TableSchemaMetadataEntry', label: string, description: string | null, schema: { __typename: 'TableSchema', columns: Array<{ __typename: 'TableColumn', name: string, description: string | null, type: string, constraints: { __typename: 'TableColumnConstraints', nullable: boolean, unique: boolean, other: Array<string> } }>, constraints: { __typename: 'TableConstraints', other: Array<string> } | null } } | { __typename: 'TextMetadataEntry', text: string, label: string, description: string | null } | { __typename: 'UrlMetadataEntry', url: string, label: string, description: string | null }> } | { __typename: 'ResourceInitSuccessEvent', runId: string, message: string, timestamp: string, level: LogLevel, stepKey: string | null, markerStart: string | null, markerEnd: string | null, eventType: DagsterEventType | null, label: string | null, description: string | null, metadataEntries: Array<{ __typename: 'AssetMetadataEntry', label: string, description: string | null, assetKey: { __typename: 'AssetKey', path: Array<string> } } | { __typename: 'BoolMetadataEntry', boolValue: boolean | null, label: string, description: string | null } | { __typename: 'FloatMetadataEntry', floatValue: number | null, label: string, description: string | null } | { __typename: 'IntMetadataEntry', intValue: number | null, intRepr: string, label: string, description: string | null } | { __typename: 'JsonMetadataEntry', jsonString: string, label: string, description: string | null } | { __typename: 'MarkdownMetadataEntry', mdStr: string, label: string, description: string | null } | { __typename: 'NotebookMetadataEntry', path: string, label: string, description: string | null } | { __typename: 'NullMetadataEntry', label: string, description: string | null } | { __typename: 'PathMetadataEntry', path: string, label: string, description: string | null } | { __typename: 'PipelineRunMetadataEntry', runId: string, label: string, description: string | null } | { __typename: 'PythonArtifactMetadataEntry', module: string, name: string, label: string, description: string | null } | { __typename: 'TableMetadataEntry', label: string, description: string | null, table: { __typename: 'Table', records: Array<string>, schema: { __typename: 'TableSchema', columns: Array<{ __typename: 'TableColumn', name: string, description: string | null, type: string, constraints: { __typename: 'TableColumnConstraints', nullable: boolean, unique: boolean, other: Array<string> } }>, constraints: { __typename: 'TableConstraints', other: Array<string> } | null } } } | { __typename: 'TableSchemaMetadataEntry', label: string, description: string | null, schema: { __typename: 'TableSchema', columns: Array<{ __typename: 'TableColumn', name: string, description: string | null, type: string, constraints: { __typename: 'TableColumnConstraints', nullable: boolean, unique: boolean, other: Array<string> } }>, constraints: { __typename: 'TableConstraints', other: Array<string> } | null } } | { __typename: 'TextMetadataEntry', text: string, label: string, description: string | null } | { __typename: 'UrlMetadataEntry', url: string, label: string, description: string | null }> } | { __typename: 'RunCanceledEvent', runId: string, message: string, timestamp: string, level: LogLevel, stepKey: string | null, eventType: DagsterEventType | null } | { __typename: 'RunCancelingEvent', runId: string, message: string, timestamp: string, level: LogLevel, stepKey: string | null, eventType: DagsterEventType | null } | { __typename: 'RunDequeuedEvent', runId: string, message: string, timestamp: string, level: LogLevel, stepKey: string | null, eventType: DagsterEventType | null } | { __typename: 'RunEnqueuedEvent', runId: string, message: string, timestamp: string, level: LogLevel, stepKey: string | null, eventType: DagsterEventType | null } | { __typename: 'RunFailureEvent', runId: string, message: string, timestamp: string, level: LogLevel, stepKey: string | null, eventType: DagsterEventType | null, error: { __typename: 'PythonError', message: string, stack: Array<string>, errorChain: Array<{ __typename: 'ErrorChainLink', isExplicitLink: boolean, error: { __typename: 'PythonError', message: string, stack: Array<string> } }> } | null } | { __typename: 'RunStartEvent', runId: string, message: string, timestamp: string, level: LogLevel, stepKey: string | null, eventType: DagsterEventType | null } | { __typename: 'RunStartingEvent', runId: string, message: string, timestamp: string, level: LogLevel, stepKey: string | null, eventType: DagsterEventType | null } | { __typename: 'RunSuccessEvent', runId: string, message: string, timestamp: string, level: LogLevel, stepKey: string | null, eventType: DagsterEventType | null } | { __typename: 'StepExpectationResultEvent', runId: string, message: string, timestamp: string, level: LogLevel, stepKey: string | null, eventType: DagsterEventType | null, expectationResult: { __typename: 'ExpectationResult', success: boolean, label: string | null, description: string | null, metadataEntries: Array<{ __typename: 'AssetMetadataEntry', label: string, description: string | null, assetKey: { __typename: 'AssetKey', path: Array<string> } } | { __typename: 'BoolMetadataEntry', boolValue: boolean | null, label: string, description: string | null } | { __typename: 'FloatMetadataEntry', floatValue: number | null, label: string, description: string | null } | { __typename: 'IntMetadataEntry', intValue: number | null, intRepr: string, label: string, description: string | null } | { __typename: 'JsonMetadataEntry', jsonString: string, label: string, description: string | null } | { __typename: 'MarkdownMetadataEntry', mdStr: string, label: string, description: string | null } | { __typename: 'NotebookMetadataEntry', path: string, label: string, description: string | null } | { __typename: 'NullMetadataEntry', label: string, description: string | null } | { __typename: 'PathMetadataEntry', path: string, label: string, description: string | null } | { __typename: 'PipelineRunMetadataEntry', runId: string, label: string, description: string | null } | { __typename: 'PythonArtifactMetadataEntry', module: string, name: string, label: string, description: string | null } | { __typename: 'TableMetadataEntry', label: string, description: string | null, table: { __typename: 'Table', records: Array<string>, schema: { __typename: 'TableSchema', columns: Array<{ __typename: 'TableColumn', name: string, description: string | null, type: string, constraints: { __typename: 'TableColumnConstraints', nullable: boolean, unique: boolean, other: Array<string> } }>, constraints: { __typename: 'TableConstraints', other: Array<string> } | null } } } | { __typename: 'TableSchemaMetadataEntry', label: string, description: string | null, schema: { __typename: 'TableSchema', columns: Array<{ __typename: 'TableColumn', name: string, description: string | null, type: string, constraints: { __typename: 'TableColumnConstraints', nullable: boolean, unique: boolean, other: Array<string> } }>, constraints: { __typename: 'TableConstraints', other: Array<string> } | null } } | { __typename: 'TextMetadataEntry', text: string, label: string, description: string | null } | { __typename: 'UrlMetadataEntry', url: string, label: string, description: string | null }> } } | { __typename: 'StepWorkerStartedEvent', runId: string, message: string, timestamp: string, level: LogLevel, stepKey: string | null, markerStart: string | null, markerEnd: string | null, eventType: DagsterEventType | null, label: string | null, description: string | null, metadataEntries: Array<{ __typename: 'AssetMetadataEntry', label: string, description: string | null, assetKey: { __typename: 'AssetKey', path: Array<string> } } | { __typename: 'BoolMetadataEntry', boolValue: boolean | null, label: string, description: string | null } | { __typename: 'FloatMetadataEntry', floatValue: number | null, label: string, description: string | null } | { __typename: 'IntMetadataEntry', intValue: number | null, intRepr: string, label: string, description: string | null } | { __typename: 'JsonMetadataEntry', jsonString: string, label: string, description: string | null } | { __typename: 'MarkdownMetadataEntry', mdStr: string, label: string, description: string | null } | { __typename: 'NotebookMetadataEntry', path: string, label: string, description: string | null } | { __typename: 'NullMetadataEntry', label: string, description: string | null } | { __typename: 'PathMetadataEntry', path: string, label: string, description: string | null } | { __typename: 'PipelineRunMetadataEntry', runId: string, label: string, description: string | null } | { __typename: 'PythonArtifactMetadataEntry', module: string, name: string, label: string, description: string | null } | { __typename: 'TableMetadataEntry', label: string, description: string | null, table: { __typename: 'Table', records: Array<string>, schema: { __typename: 'TableSchema', columns: Array<{ __typename: 'TableColumn', name: string, description: string | null, type: string, constraints: { __typename: 'TableColumnConstraints', nullable: boolean, unique: boolean, other: Array<string> } }>, constraints: { __typename: 'TableConstraints', other: Array<string> } | null } } } | { __typename: 'TableSchemaMetadataEntry', label: string, description: string | null, schema: { __typename: 'TableSchema', columns: Array<{ __typename: 'TableColumn', name: string, description: string | null, type: string, constraints: { __typename: 'TableColumnConstraints', nullable: boolean, unique: boolean, other: Array<string> } }>, constraints: { __typename: 'TableConstraints', other: Array<string> } | null } } | { __typename: 'TextMetadataEntry', text: string, label: string, description: string | null } | { __typename: 'UrlMetadataEntry', url: string, label: string, description: string | null }> } | { __typename: 'StepWorkerStartingEvent', runId: string, message: string, timestamp: string, level: LogLevel, stepKey: string | null, markerStart: string | null, markerEnd: string | null, eventType: DagsterEventType | null, label: string | null, description: string | null, metadataEntries: Array<{ __typename: 'AssetMetadataEntry', label: string, description: string | null, assetKey: { __typename: 'AssetKey', path: Array<string> } } | { __typename: 'BoolMetadataEntry', boolValue: boolean | null, label: string, description: string | null } | { __typename: 'FloatMetadataEntry', floatValue: number | null, label: string, description: string | null } | { __typename: 'IntMetadataEntry', intValue: number | null, intRepr: string, label: string, description: string | null } | { __typename: 'JsonMetadataEntry', jsonString: string, label: string, description: string | null } | { __typename: 'MarkdownMetadataEntry', mdStr: string, label: string, description: string | null } | { __typename: 'NotebookMetadataEntry', path: string, label: string, description: string | null } | { __typename: 'NullMetadataEntry', label: string, description: string | null } | { __typename: 'PathMetadataEntry', path: string, label: string, description: string | null } | { __typename: 'PipelineRunMetadataEntry', runId: string, label: string, description: string | null } | { __typename: 'PythonArtifactMetadataEntry', module: string, name: string, label: string, description: string | null } | { __typename: 'TableMetadataEntry', label: string, description: string | null, table: { __typename: 'Table', records: Array<string>, schema: { __typename: 'TableSchema', columns: Array<{ __typename: 'TableColumn', name: string, description: string | null, type: string, constraints: { __typename: 'TableColumnConstraints', nullable: boolean, unique: boolean, other: Array<string> } }>, constraints: { __typename: 'TableConstraints', other: Array<string> } | null } } } | { __typename: 'TableSchemaMetadataEntry', label: string, description: string | null, schema: { __typename: 'TableSchema', columns: Array<{ __typename: 'TableColumn', name: string, description: string | null, type: string, constraints: { __typename: 'TableColumnConstraints', nullable: boolean, unique: boolean, other: Array<string> } }>, constraints: { __typename: 'TableConstraints', other: Array<string> } | null } } | { __typename: 'TextMetadataEntry', text: string, label: string, description: string | null } | { __typename: 'UrlMetadataEntry', url: string, label: string, description: string | null }> }> } | { __typename: 'PythonError', message: string, stack: Array<string> } | { __typename: 'RunNotFoundError' } };

type LogsRowStructuredFragment_AlertFailureEvent_Fragment = { __typename: 'AlertFailureEvent', message: string, eventType: DagsterEventType | null, timestamp: string, level: LogLevel, stepKey: string | null };

type LogsRowStructuredFragment_AlertStartEvent_Fragment = { __typename: 'AlertStartEvent', message: string, eventType: DagsterEventType | null, timestamp: string, level: LogLevel, stepKey: string | null };

type LogsRowStructuredFragment_AlertSuccessEvent_Fragment = { __typename: 'AlertSuccessEvent', message: string, eventType: DagsterEventType | null, timestamp: string, level: LogLevel, stepKey: string | null };

type LogsRowStructuredFragment_AssetMaterializationPlannedEvent_Fragment = { __typename: 'AssetMaterializationPlannedEvent', message: string, eventType: DagsterEventType | null, timestamp: string, level: LogLevel, stepKey: string | null };

type LogsRowStructuredFragment_EngineEvent_Fragment = { __typename: 'EngineEvent', message: string, eventType: DagsterEventType | null, timestamp: string, level: LogLevel, stepKey: string | null, label: string | null, description: string | null, markerStart: string | null, markerEnd: string | null, metadataEntries: Array<{ __typename: 'AssetMetadataEntry', label: string, description: string | null, assetKey: { __typename: 'AssetKey', path: Array<string> } } | { __typename: 'BoolMetadataEntry', boolValue: boolean | null, label: string, description: string | null } | { __typename: 'FloatMetadataEntry', floatValue: number | null, label: string, description: string | null } | { __typename: 'IntMetadataEntry', intValue: number | null, intRepr: string, label: string, description: string | null } | { __typename: 'JsonMetadataEntry', jsonString: string, label: string, description: string | null } | { __typename: 'MarkdownMetadataEntry', mdStr: string, label: string, description: string | null } | { __typename: 'NotebookMetadataEntry', path: string, label: string, description: string | null } | { __typename: 'NullMetadataEntry', label: string, description: string | null } | { __typename: 'PathMetadataEntry', path: string, label: string, description: string | null } | { __typename: 'PipelineRunMetadataEntry', runId: string, label: string, description: string | null } | { __typename: 'PythonArtifactMetadataEntry', module: string, name: string, label: string, description: string | null } | { __typename: 'TableMetadataEntry', label: string, description: string | null, table: { __typename: 'Table', records: Array<string>, schema: { __typename: 'TableSchema', columns: Array<{ __typename: 'TableColumn', name: string, description: string | null, type: string, constraints: { __typename: 'TableColumnConstraints', nullable: boolean, unique: boolean, other: Array<string> } }>, constraints: { __typename: 'TableConstraints', other: Array<string> } | null } } } | { __typename: 'TableSchemaMetadataEntry', label: string, description: string | null, schema: { __typename: 'TableSchema', columns: Array<{ __typename: 'TableColumn', name: string, description: string | null, type: string, constraints: { __typename: 'TableColumnConstraints', nullable: boolean, unique: boolean, other: Array<string> } }>, constraints: { __typename: 'TableConstraints', other: Array<string> } | null } } | { __typename: 'TextMetadataEntry', text: string, label: string, description: string | null } | { __typename: 'UrlMetadataEntry', url: string, label: string, description: string | null }>, error: { __typename: 'PythonError', message: string, stack: Array<string>, errorChain: Array<{ __typename: 'ErrorChainLink', isExplicitLink: boolean, error: { __typename: 'PythonError', message: string, stack: Array<string> } }> } | null };

type LogsRowStructuredFragment_ExecutionStepFailureEvent_Fragment = { __typename: 'ExecutionStepFailureEvent', message: string, eventType: DagsterEventType | null, timestamp: string, level: LogLevel, stepKey: string | null, errorSource: ErrorSource | null, error: { __typename: 'PythonError', message: string, stack: Array<string>, errorChain: Array<{ __typename: 'ErrorChainLink', isExplicitLink: boolean, error: { __typename: 'PythonError', message: string, stack: Array<string> } }> } | null, failureMetadata: { __typename: 'FailureMetadata', metadataEntries: Array<{ __typename: 'AssetMetadataEntry', label: string, description: string | null, assetKey: { __typename: 'AssetKey', path: Array<string> } } | { __typename: 'BoolMetadataEntry', boolValue: boolean | null, label: string, description: string | null } | { __typename: 'FloatMetadataEntry', floatValue: number | null, label: string, description: string | null } | { __typename: 'IntMetadataEntry', intValue: number | null, intRepr: string, label: string, description: string | null } | { __typename: 'JsonMetadataEntry', jsonString: string, label: string, description: string | null } | { __typename: 'MarkdownMetadataEntry', mdStr: string, label: string, description: string | null } | { __typename: 'NotebookMetadataEntry', path: string, label: string, description: string | null } | { __typename: 'NullMetadataEntry', label: string, description: string | null } | { __typename: 'PathMetadataEntry', path: string, label: string, description: string | null } | { __typename: 'PipelineRunMetadataEntry', runId: string, label: string, description: string | null } | { __typename: 'PythonArtifactMetadataEntry', module: string, name: string, label: string, description: string | null } | { __typename: 'TableMetadataEntry', label: string, description: string | null, table: { __typename: 'Table', records: Array<string>, schema: { __typename: 'TableSchema', columns: Array<{ __typename: 'TableColumn', name: string, description: string | null, type: string, constraints: { __typename: 'TableColumnConstraints', nullable: boolean, unique: boolean, other: Array<string> } }>, constraints: { __typename: 'TableConstraints', other: Array<string> } | null } } } | { __typename: 'TableSchemaMetadataEntry', label: string, description: string | null, schema: { __typename: 'TableSchema', columns: Array<{ __typename: 'TableColumn', name: string, description: string | null, type: string, constraints: { __typename: 'TableColumnConstraints', nullable: boolean, unique: boolean, other: Array<string> } }>, constraints: { __typename: 'TableConstraints', other: Array<string> } | null } } | { __typename: 'TextMetadataEntry', text: string, label: string, description: string | null } | { __typename: 'UrlMetadataEntry', url: string, label: string, description: string | null }> } | null };

type LogsRowStructuredFragment_ExecutionStepInputEvent_Fragment = { __typename: 'ExecutionStepInputEvent', message: string, eventType: DagsterEventType | null, timestamp: string, level: LogLevel, stepKey: string | null, inputName: string, typeCheck: { __typename: 'TypeCheck', label: string | null, description: string | null, success: boolean, metadataEntries: Array<{ __typename: 'AssetMetadataEntry', label: string, description: string | null, assetKey: { __typename: 'AssetKey', path: Array<string> } } | { __typename: 'BoolMetadataEntry', boolValue: boolean | null, label: string, description: string | null } | { __typename: 'FloatMetadataEntry', floatValue: number | null, label: string, description: string | null } | { __typename: 'IntMetadataEntry', intValue: number | null, intRepr: string, label: string, description: string | null } | { __typename: 'JsonMetadataEntry', jsonString: string, label: string, description: string | null } | { __typename: 'MarkdownMetadataEntry', mdStr: string, label: string, description: string | null } | { __typename: 'NotebookMetadataEntry', path: string, label: string, description: string | null } | { __typename: 'NullMetadataEntry', label: string, description: string | null } | { __typename: 'PathMetadataEntry', path: string, label: string, description: string | null } | { __typename: 'PipelineRunMetadataEntry', runId: string, label: string, description: string | null } | { __typename: 'PythonArtifactMetadataEntry', module: string, name: string, label: string, description: string | null } | { __typename: 'TableMetadataEntry', label: string, description: string | null, table: { __typename: 'Table', records: Array<string>, schema: { __typename: 'TableSchema', columns: Array<{ __typename: 'TableColumn', name: string, description: string | null, type: string, constraints: { __typename: 'TableColumnConstraints', nullable: boolean, unique: boolean, other: Array<string> } }>, constraints: { __typename: 'TableConstraints', other: Array<string> } | null } } } | { __typename: 'TableSchemaMetadataEntry', label: string, description: string | null, schema: { __typename: 'TableSchema', columns: Array<{ __typename: 'TableColumn', name: string, description: string | null, type: string, constraints: { __typename: 'TableColumnConstraints', nullable: boolean, unique: boolean, other: Array<string> } }>, constraints: { __typename: 'TableConstraints', other: Array<string> } | null } } | { __typename: 'TextMetadataEntry', text: string, label: string, description: string | null } | { __typename: 'UrlMetadataEntry', url: string, label: string, description: string | null }> } };

type LogsRowStructuredFragment_ExecutionStepOutputEvent_Fragment = { __typename: 'ExecutionStepOutputEvent', message: string, eventType: DagsterEventType | null, timestamp: string, level: LogLevel, stepKey: string | null, label: string | null, description: string | null, outputName: string, metadataEntries: Array<{ __typename: 'AssetMetadataEntry', label: string, description: string | null, assetKey: { __typename: 'AssetKey', path: Array<string> } } | { __typename: 'BoolMetadataEntry', boolValue: boolean | null, label: string, description: string | null } | { __typename: 'FloatMetadataEntry', floatValue: number | null, label: string, description: string | null } | { __typename: 'IntMetadataEntry', intValue: number | null, intRepr: string, label: string, description: string | null } | { __typename: 'JsonMetadataEntry', jsonString: string, label: string, description: string | null } | { __typename: 'MarkdownMetadataEntry', mdStr: string, label: string, description: string | null } | { __typename: 'NotebookMetadataEntry', path: string, label: string, description: string | null } | { __typename: 'NullMetadataEntry', label: string, description: string | null } | { __typename: 'PathMetadataEntry', path: string, label: string, description: string | null } | { __typename: 'PipelineRunMetadataEntry', runId: string, label: string, description: string | null } | { __typename: 'PythonArtifactMetadataEntry', module: string, name: string, label: string, description: string | null } | { __typename: 'TableMetadataEntry', label: string, description: string | null, table: { __typename: 'Table', records: Array<string>, schema: { __typename: 'TableSchema', columns: Array<{ __typename: 'TableColumn', name: string, description: string | null, type: string, constraints: { __typename: 'TableColumnConstraints', nullable: boolean, unique: boolean, other: Array<string> } }>, constraints: { __typename: 'TableConstraints', other: Array<string> } | null } } } | { __typename: 'TableSchemaMetadataEntry', label: string, description: string | null, schema: { __typename: 'TableSchema', columns: Array<{ __typename: 'TableColumn', name: string, description: string | null, type: string, constraints: { __typename: 'TableColumnConstraints', nullable: boolean, unique: boolean, other: Array<string> } }>, constraints: { __typename: 'TableConstraints', other: Array<string> } | null } } | { __typename: 'TextMetadataEntry', text: string, label: string, description: string | null } | { __typename: 'UrlMetadataEntry', url: string, label: string, description: string | null }>, typeCheck: { __typename: 'TypeCheck', label: string | null, description: string | null, success: boolean, metadataEntries: Array<{ __typename: 'AssetMetadataEntry', label: string, description: string | null, assetKey: { __typename: 'AssetKey', path: Array<string> } } | { __typename: 'BoolMetadataEntry', boolValue: boolean | null, label: string, description: string | null } | { __typename: 'FloatMetadataEntry', floatValue: number | null, label: string, description: string | null } | { __typename: 'IntMetadataEntry', intValue: number | null, intRepr: string, label: string, description: string | null } | { __typename: 'JsonMetadataEntry', jsonString: string, label: string, description: string | null } | { __typename: 'MarkdownMetadataEntry', mdStr: string, label: string, description: string | null } | { __typename: 'NotebookMetadataEntry', path: string, label: string, description: string | null } | { __typename: 'NullMetadataEntry', label: string, description: string | null } | { __typename: 'PathMetadataEntry', path: string, label: string, description: string | null } | { __typename: 'PipelineRunMetadataEntry', runId: string, label: string, description: string | null } | { __typename: 'PythonArtifactMetadataEntry', module: string, name: string, label: string, description: string | null } | { __typename: 'TableMetadataEntry', label: string, description: string | null, table: { __typename: 'Table', records: Array<string>, schema: { __typename: 'TableSchema', columns: Array<{ __typename: 'TableColumn', name: string, description: string | null, type: string, constraints: { __typename: 'TableColumnConstraints', nullable: boolean, unique: boolean, other: Array<string> } }>, constraints: { __typename: 'TableConstraints', other: Array<string> } | null } } } | { __typename: 'TableSchemaMetadataEntry', label: string, description: string | null, schema: { __typename: 'TableSchema', columns: Array<{ __typename: 'TableColumn', name: string, description: string | null, type: string, constraints: { __typename: 'TableColumnConstraints', nullable: boolean, unique: boolean, other: Array<string> } }>, constraints: { __typename: 'TableConstraints', other: Array<string> } | null } } | { __typename: 'TextMetadataEntry', text: string, label: string, description: string | null } | { __typename: 'UrlMetadataEntry', url: string, label: string, description: string | null }> } };

type LogsRowStructuredFragment_ExecutionStepRestartEvent_Fragment = { __typename: 'ExecutionStepRestartEvent', message: string, eventType: DagsterEventType | null, timestamp: string, level: LogLevel, stepKey: string | null };

type LogsRowStructuredFragment_ExecutionStepSkippedEvent_Fragment = { __typename: 'ExecutionStepSkippedEvent', message: string, eventType: DagsterEventType | null, timestamp: string, level: LogLevel, stepKey: string | null };

type LogsRowStructuredFragment_ExecutionStepStartEvent_Fragment = { __typename: 'ExecutionStepStartEvent', message: string, eventType: DagsterEventType | null, timestamp: string, level: LogLevel, stepKey: string | null };

type LogsRowStructuredFragment_ExecutionStepSuccessEvent_Fragment = { __typename: 'ExecutionStepSuccessEvent', message: string, eventType: DagsterEventType | null, timestamp: string, level: LogLevel, stepKey: string | null };

type LogsRowStructuredFragment_ExecutionStepUpForRetryEvent_Fragment = { __typename: 'ExecutionStepUpForRetryEvent', message: string, eventType: DagsterEventType | null, timestamp: string, level: LogLevel, stepKey: string | null, error: { __typename: 'PythonError', message: string, stack: Array<string>, errorChain: Array<{ __typename: 'ErrorChainLink', isExplicitLink: boolean, error: { __typename: 'PythonError', message: string, stack: Array<string> } }> } | null };

type LogsRowStructuredFragment_HandledOutputEvent_Fragment = { __typename: 'HandledOutputEvent', message: string, eventType: DagsterEventType | null, timestamp: string, level: LogLevel, stepKey: string | null, label: string | null, description: string | null, outputName: string, managerKey: string, metadataEntries: Array<{ __typename: 'AssetMetadataEntry', label: string, description: string | null, assetKey: { __typename: 'AssetKey', path: Array<string> } } | { __typename: 'BoolMetadataEntry', boolValue: boolean | null, label: string, description: string | null } | { __typename: 'FloatMetadataEntry', floatValue: number | null, label: string, description: string | null } | { __typename: 'IntMetadataEntry', intValue: number | null, intRepr: string, label: string, description: string | null } | { __typename: 'JsonMetadataEntry', jsonString: string, label: string, description: string | null } | { __typename: 'MarkdownMetadataEntry', mdStr: string, label: string, description: string | null } | { __typename: 'NotebookMetadataEntry', path: string, label: string, description: string | null } | { __typename: 'NullMetadataEntry', label: string, description: string | null } | { __typename: 'PathMetadataEntry', path: string, label: string, description: string | null } | { __typename: 'PipelineRunMetadataEntry', runId: string, label: string, description: string | null } | { __typename: 'PythonArtifactMetadataEntry', module: string, name: string, label: string, description: string | null } | { __typename: 'TableMetadataEntry', label: string, description: string | null, table: { __typename: 'Table', records: Array<string>, schema: { __typename: 'TableSchema', columns: Array<{ __typename: 'TableColumn', name: string, description: string | null, type: string, constraints: { __typename: 'TableColumnConstraints', nullable: boolean, unique: boolean, other: Array<string> } }>, constraints: { __typename: 'TableConstraints', other: Array<string> } | null } } } | { __typename: 'TableSchemaMetadataEntry', label: string, description: string | null, schema: { __typename: 'TableSchema', columns: Array<{ __typename: 'TableColumn', name: string, description: string | null, type: string, constraints: { __typename: 'TableColumnConstraints', nullable: boolean, unique: boolean, other: Array<string> } }>, constraints: { __typename: 'TableConstraints', other: Array<string> } | null } } | { __typename: 'TextMetadataEntry', text: string, label: string, description: string | null } | { __typename: 'UrlMetadataEntry', url: string, label: string, description: string | null }> };

type LogsRowStructuredFragment_HookCompletedEvent_Fragment = { __typename: 'HookCompletedEvent', message: string, eventType: DagsterEventType | null, timestamp: string, level: LogLevel, stepKey: string | null };

type LogsRowStructuredFragment_HookErroredEvent_Fragment = { __typename: 'HookErroredEvent', message: string, eventType: DagsterEventType | null, timestamp: string, level: LogLevel, stepKey: string | null, error: { __typename: 'PythonError', message: string, stack: Array<string>, errorChain: Array<{ __typename: 'ErrorChainLink', isExplicitLink: boolean, error: { __typename: 'PythonError', message: string, stack: Array<string> } }> } | null };

type LogsRowStructuredFragment_HookSkippedEvent_Fragment = { __typename: 'HookSkippedEvent', message: string, eventType: DagsterEventType | null, timestamp: string, level: LogLevel, stepKey: string | null };

type LogsRowStructuredFragment_LoadedInputEvent_Fragment = { __typename: 'LoadedInputEvent', message: string, eventType: DagsterEventType | null, timestamp: string, level: LogLevel, stepKey: string | null, label: string | null, description: string | null, inputName: string, managerKey: string, upstreamOutputName: string | null, upstreamStepKey: string | null, metadataEntries: Array<{ __typename: 'AssetMetadataEntry', label: string, description: string | null, assetKey: { __typename: 'AssetKey', path: Array<string> } } | { __typename: 'BoolMetadataEntry', boolValue: boolean | null, label: string, description: string | null } | { __typename: 'FloatMetadataEntry', floatValue: number | null, label: string, description: string | null } | { __typename: 'IntMetadataEntry', intValue: number | null, intRepr: string, label: string, description: string | null } | { __typename: 'JsonMetadataEntry', jsonString: string, label: string, description: string | null } | { __typename: 'MarkdownMetadataEntry', mdStr: string, label: string, description: string | null } | { __typename: 'NotebookMetadataEntry', path: string, label: string, description: string | null } | { __typename: 'NullMetadataEntry', label: string, description: string | null } | { __typename: 'PathMetadataEntry', path: string, label: string, description: string | null } | { __typename: 'PipelineRunMetadataEntry', runId: string, label: string, description: string | null } | { __typename: 'PythonArtifactMetadataEntry', module: string, name: string, label: string, description: string | null } | { __typename: 'TableMetadataEntry', label: string, description: string | null, table: { __typename: 'Table', records: Array<string>, schema: { __typename: 'TableSchema', columns: Array<{ __typename: 'TableColumn', name: string, description: string | null, type: string, constraints: { __typename: 'TableColumnConstraints', nullable: boolean, unique: boolean, other: Array<string> } }>, constraints: { __typename: 'TableConstraints', other: Array<string> } | null } } } | { __typename: 'TableSchemaMetadataEntry', label: string, description: string | null, schema: { __typename: 'TableSchema', columns: Array<{ __typename: 'TableColumn', name: string, description: string | null, type: string, constraints: { __typename: 'TableColumnConstraints', nullable: boolean, unique: boolean, other: Array<string> } }>, constraints: { __typename: 'TableConstraints', other: Array<string> } | null } } | { __typename: 'TextMetadataEntry', text: string, label: string, description: string | null } | { __typename: 'UrlMetadataEntry', url: string, label: string, description: string | null }> };

type LogsRowStructuredFragment_LogMessageEvent_Fragment = { __typename: 'LogMessageEvent', message: string, eventType: DagsterEventType | null, timestamp: string, level: LogLevel, stepKey: string | null };

type LogsRowStructuredFragment_LogsCapturedEvent_Fragment = { __typename: 'LogsCapturedEvent', message: string, eventType: DagsterEventType | null, timestamp: string, level: LogLevel, stepKey: string | null, fileKey: string, stepKeys: Array<string> | null, externalUrl: string | null };

type LogsRowStructuredFragment_MaterializationEvent_Fragment = { __typename: 'MaterializationEvent', message: string, eventType: DagsterEventType | null, timestamp: string, level: LogLevel, stepKey: string | null, label: string | null, description: string | null, metadataEntries: Array<{ __typename: 'AssetMetadataEntry', label: string, description: string | null, assetKey: { __typename: 'AssetKey', path: Array<string> } } | { __typename: 'BoolMetadataEntry', boolValue: boolean | null, label: string, description: string | null } | { __typename: 'FloatMetadataEntry', floatValue: number | null, label: string, description: string | null } | { __typename: 'IntMetadataEntry', intValue: number | null, intRepr: string, label: string, description: string | null } | { __typename: 'JsonMetadataEntry', jsonString: string, label: string, description: string | null } | { __typename: 'MarkdownMetadataEntry', mdStr: string, label: string, description: string | null } | { __typename: 'NotebookMetadataEntry', path: string, label: string, description: string | null } | { __typename: 'NullMetadataEntry', label: string, description: string | null } | { __typename: 'PathMetadataEntry', path: string, label: string, description: string | null } | { __typename: 'PipelineRunMetadataEntry', runId: string, label: string, description: string | null } | { __typename: 'PythonArtifactMetadataEntry', module: string, name: string, label: string, description: string | null } | { __typename: 'TableMetadataEntry', label: string, description: string | null, table: { __typename: 'Table', records: Array<string>, schema: { __typename: 'TableSchema', columns: Array<{ __typename: 'TableColumn', name: string, description: string | null, type: string, constraints: { __typename: 'TableColumnConstraints', nullable: boolean, unique: boolean, other: Array<string> } }>, constraints: { __typename: 'TableConstraints', other: Array<string> } | null } } } | { __typename: 'TableSchemaMetadataEntry', label: string, description: string | null, schema: { __typename: 'TableSchema', columns: Array<{ __typename: 'TableColumn', name: string, description: string | null, type: string, constraints: { __typename: 'TableColumnConstraints', nullable: boolean, unique: boolean, other: Array<string> } }>, constraints: { __typename: 'TableConstraints', other: Array<string> } | null } } | { __typename: 'TextMetadataEntry', text: string, label: string, description: string | null } | { __typename: 'UrlMetadataEntry', url: string, label: string, description: string | null }>, assetKey: { __typename: 'AssetKey', path: Array<string> } | null };

type LogsRowStructuredFragment_ObjectStoreOperationEvent_Fragment = { __typename: 'ObjectStoreOperationEvent', message: string, eventType: DagsterEventType | null, timestamp: string, level: LogLevel, stepKey: string | null, operationResult: { __typename: 'ObjectStoreOperationResult', op: ObjectStoreOperationType, metadataEntries: Array<{ __typename: 'AssetMetadataEntry', label: string, description: string | null, assetKey: { __typename: 'AssetKey', path: Array<string> } } | { __typename: 'BoolMetadataEntry', boolValue: boolean | null, label: string, description: string | null } | { __typename: 'FloatMetadataEntry', floatValue: number | null, label: string, description: string | null } | { __typename: 'IntMetadataEntry', intValue: number | null, intRepr: string, label: string, description: string | null } | { __typename: 'JsonMetadataEntry', jsonString: string, label: string, description: string | null } | { __typename: 'MarkdownMetadataEntry', mdStr: string, label: string, description: string | null } | { __typename: 'NotebookMetadataEntry', path: string, label: string, description: string | null } | { __typename: 'NullMetadataEntry', label: string, description: string | null } | { __typename: 'PathMetadataEntry', path: string, label: string, description: string | null } | { __typename: 'PipelineRunMetadataEntry', runId: string, label: string, description: string | null } | { __typename: 'PythonArtifactMetadataEntry', module: string, name: string, label: string, description: string | null } | { __typename: 'TableMetadataEntry', label: string, description: string | null, table: { __typename: 'Table', records: Array<string>, schema: { __typename: 'TableSchema', columns: Array<{ __typename: 'TableColumn', name: string, description: string | null, type: string, constraints: { __typename: 'TableColumnConstraints', nullable: boolean, unique: boolean, other: Array<string> } }>, constraints: { __typename: 'TableConstraints', other: Array<string> } | null } } } | { __typename: 'TableSchemaMetadataEntry', label: string, description: string | null, schema: { __typename: 'TableSchema', columns: Array<{ __typename: 'TableColumn', name: string, description: string | null, type: string, constraints: { __typename: 'TableColumnConstraints', nullable: boolean, unique: boolean, other: Array<string> } }>, constraints: { __typename: 'TableConstraints', other: Array<string> } | null } } | { __typename: 'TextMetadataEntry', text: string, label: string, description: string | null } | { __typename: 'UrlMetadataEntry', url: string, label: string, description: string | null }> } };

type LogsRowStructuredFragment_ObservationEvent_Fragment = { __typename: 'ObservationEvent', message: string, eventType: DagsterEventType | null, timestamp: string, level: LogLevel, stepKey: string | null, label: string | null, description: string | null, metadataEntries: Array<{ __typename: 'AssetMetadataEntry', label: string, description: string | null, assetKey: { __typename: 'AssetKey', path: Array<string> } } | { __typename: 'BoolMetadataEntry', boolValue: boolean | null, label: string, description: string | null } | { __typename: 'FloatMetadataEntry', floatValue: number | null, label: string, description: string | null } | { __typename: 'IntMetadataEntry', intValue: number | null, intRepr: string, label: string, description: string | null } | { __typename: 'JsonMetadataEntry', jsonString: string, label: string, description: string | null } | { __typename: 'MarkdownMetadataEntry', mdStr: string, label: string, description: string | null } | { __typename: 'NotebookMetadataEntry', path: string, label: string, description: string | null } | { __typename: 'NullMetadataEntry', label: string, description: string | null } | { __typename: 'PathMetadataEntry', path: string, label: string, description: string | null } | { __typename: 'PipelineRunMetadataEntry', runId: string, label: string, description: string | null } | { __typename: 'PythonArtifactMetadataEntry', module: string, name: string, label: string, description: string | null } | { __typename: 'TableMetadataEntry', label: string, description: string | null, table: { __typename: 'Table', records: Array<string>, schema: { __typename: 'TableSchema', columns: Array<{ __typename: 'TableColumn', name: string, description: string | null, type: string, constraints: { __typename: 'TableColumnConstraints', nullable: boolean, unique: boolean, other: Array<string> } }>, constraints: { __typename: 'TableConstraints', other: Array<string> } | null } } } | { __typename: 'TableSchemaMetadataEntry', label: string, description: string | null, schema: { __typename: 'TableSchema', columns: Array<{ __typename: 'TableColumn', name: string, description: string | null, type: string, constraints: { __typename: 'TableColumnConstraints', nullable: boolean, unique: boolean, other: Array<string> } }>, constraints: { __typename: 'TableConstraints', other: Array<string> } | null } } | { __typename: 'TextMetadataEntry', text: string, label: string, description: string | null } | { __typename: 'UrlMetadataEntry', url: string, label: string, description: string | null }>, assetKey: { __typename: 'AssetKey', path: Array<string> } | null };

type LogsRowStructuredFragment_ResourceInitFailureEvent_Fragment = { __typename: 'ResourceInitFailureEvent', message: string, eventType: DagsterEventType | null, timestamp: string, level: LogLevel, stepKey: string | null, label: string | null, description: string | null, markerStart: string | null, markerEnd: string | null, metadataEntries: Array<{ __typename: 'AssetMetadataEntry', label: string, description: string | null, assetKey: { __typename: 'AssetKey', path: Array<string> } } | { __typename: 'BoolMetadataEntry', boolValue: boolean | null, label: string, description: string | null } | { __typename: 'FloatMetadataEntry', floatValue: number | null, label: string, description: string | null } | { __typename: 'IntMetadataEntry', intValue: number | null, intRepr: string, label: string, description: string | null } | { __typename: 'JsonMetadataEntry', jsonString: string, label: string, description: string | null } | { __typename: 'MarkdownMetadataEntry', mdStr: string, label: string, description: string | null } | { __typename: 'NotebookMetadataEntry', path: string, label: string, description: string | null } | { __typename: 'NullMetadataEntry', label: string, description: string | null } | { __typename: 'PathMetadataEntry', path: string, label: string, description: string | null } | { __typename: 'PipelineRunMetadataEntry', runId: string, label: string, description: string | null } | { __typename: 'PythonArtifactMetadataEntry', module: string, name: string, label: string, description: string | null } | { __typename: 'TableMetadataEntry', label: string, description: string | null, table: { __typename: 'Table', records: Array<string>, schema: { __typename: 'TableSchema', columns: Array<{ __typename: 'TableColumn', name: string, description: string | null, type: string, constraints: { __typename: 'TableColumnConstraints', nullable: boolean, unique: boolean, other: Array<string> } }>, constraints: { __typename: 'TableConstraints', other: Array<string> } | null } } } | { __typename: 'TableSchemaMetadataEntry', label: string, description: string | null, schema: { __typename: 'TableSchema', columns: Array<{ __typename: 'TableColumn', name: string, description: string | null, type: string, constraints: { __typename: 'TableColumnConstraints', nullable: boolean, unique: boolean, other: Array<string> } }>, constraints: { __typename: 'TableConstraints', other: Array<string> } | null } } | { __typename: 'TextMetadataEntry', text: string, label: string, description: string | null } | { __typename: 'UrlMetadataEntry', url: string, label: string, description: string | null }>, error: { __typename: 'PythonError', message: string, stack: Array<string>, errorChain: Array<{ __typename: 'ErrorChainLink', isExplicitLink: boolean, error: { __typename: 'PythonError', message: string, stack: Array<string> } }> } | null };

type LogsRowStructuredFragment_ResourceInitStartedEvent_Fragment = { __typename: 'ResourceInitStartedEvent', message: string, eventType: DagsterEventType | null, timestamp: string, level: LogLevel, stepKey: string | null, label: string | null, description: string | null, markerStart: string | null, markerEnd: string | null, metadataEntries: Array<{ __typename: 'AssetMetadataEntry', label: string, description: string | null, assetKey: { __typename: 'AssetKey', path: Array<string> } } | { __typename: 'BoolMetadataEntry', boolValue: boolean | null, label: string, description: string | null } | { __typename: 'FloatMetadataEntry', floatValue: number | null, label: string, description: string | null } | { __typename: 'IntMetadataEntry', intValue: number | null, intRepr: string, label: string, description: string | null } | { __typename: 'JsonMetadataEntry', jsonString: string, label: string, description: string | null } | { __typename: 'MarkdownMetadataEntry', mdStr: string, label: string, description: string | null } | { __typename: 'NotebookMetadataEntry', path: string, label: string, description: string | null } | { __typename: 'NullMetadataEntry', label: string, description: string | null } | { __typename: 'PathMetadataEntry', path: string, label: string, description: string | null } | { __typename: 'PipelineRunMetadataEntry', runId: string, label: string, description: string | null } | { __typename: 'PythonArtifactMetadataEntry', module: string, name: string, label: string, description: string | null } | { __typename: 'TableMetadataEntry', label: string, description: string | null, table: { __typename: 'Table', records: Array<string>, schema: { __typename: 'TableSchema', columns: Array<{ __typename: 'TableColumn', name: string, description: string | null, type: string, constraints: { __typename: 'TableColumnConstraints', nullable: boolean, unique: boolean, other: Array<string> } }>, constraints: { __typename: 'TableConstraints', other: Array<string> } | null } } } | { __typename: 'TableSchemaMetadataEntry', label: string, description: string | null, schema: { __typename: 'TableSchema', columns: Array<{ __typename: 'TableColumn', name: string, description: string | null, type: string, constraints: { __typename: 'TableColumnConstraints', nullable: boolean, unique: boolean, other: Array<string> } }>, constraints: { __typename: 'TableConstraints', other: Array<string> } | null } } | { __typename: 'TextMetadataEntry', text: string, label: string, description: string | null } | { __typename: 'UrlMetadataEntry', url: string, label: string, description: string | null }> };

type LogsRowStructuredFragment_ResourceInitSuccessEvent_Fragment = { __typename: 'ResourceInitSuccessEvent', message: string, eventType: DagsterEventType | null, timestamp: string, level: LogLevel, stepKey: string | null, label: string | null, description: string | null, markerStart: string | null, markerEnd: string | null, metadataEntries: Array<{ __typename: 'AssetMetadataEntry', label: string, description: string | null, assetKey: { __typename: 'AssetKey', path: Array<string> } } | { __typename: 'BoolMetadataEntry', boolValue: boolean | null, label: string, description: string | null } | { __typename: 'FloatMetadataEntry', floatValue: number | null, label: string, description: string | null } | { __typename: 'IntMetadataEntry', intValue: number | null, intRepr: string, label: string, description: string | null } | { __typename: 'JsonMetadataEntry', jsonString: string, label: string, description: string | null } | { __typename: 'MarkdownMetadataEntry', mdStr: string, label: string, description: string | null } | { __typename: 'NotebookMetadataEntry', path: string, label: string, description: string | null } | { __typename: 'NullMetadataEntry', label: string, description: string | null } | { __typename: 'PathMetadataEntry', path: string, label: string, description: string | null } | { __typename: 'PipelineRunMetadataEntry', runId: string, label: string, description: string | null } | { __typename: 'PythonArtifactMetadataEntry', module: string, name: string, label: string, description: string | null } | { __typename: 'TableMetadataEntry', label: string, description: string | null, table: { __typename: 'Table', records: Array<string>, schema: { __typename: 'TableSchema', columns: Array<{ __typename: 'TableColumn', name: string, description: string | null, type: string, constraints: { __typename: 'TableColumnConstraints', nullable: boolean, unique: boolean, other: Array<string> } }>, constraints: { __typename: 'TableConstraints', other: Array<string> } | null } } } | { __typename: 'TableSchemaMetadataEntry', label: string, description: string | null, schema: { __typename: 'TableSchema', columns: Array<{ __typename: 'TableColumn', name: string, description: string | null, type: string, constraints: { __typename: 'TableColumnConstraints', nullable: boolean, unique: boolean, other: Array<string> } }>, constraints: { __typename: 'TableConstraints', other: Array<string> } | null } } | { __typename: 'TextMetadataEntry', text: string, label: string, description: string | null } | { __typename: 'UrlMetadataEntry', url: string, label: string, description: string | null }> };

type LogsRowStructuredFragment_RunCanceledEvent_Fragment = { __typename: 'RunCanceledEvent', message: string, eventType: DagsterEventType | null, timestamp: string, level: LogLevel, stepKey: string | null };

type LogsRowStructuredFragment_RunCancelingEvent_Fragment = { __typename: 'RunCancelingEvent', message: string, eventType: DagsterEventType | null, timestamp: string, level: LogLevel, stepKey: string | null };

type LogsRowStructuredFragment_RunDequeuedEvent_Fragment = { __typename: 'RunDequeuedEvent', message: string, eventType: DagsterEventType | null, timestamp: string, level: LogLevel, stepKey: string | null };

type LogsRowStructuredFragment_RunEnqueuedEvent_Fragment = { __typename: 'RunEnqueuedEvent', message: string, eventType: DagsterEventType | null, timestamp: string, level: LogLevel, stepKey: string | null };

type LogsRowStructuredFragment_RunFailureEvent_Fragment = { __typename: 'RunFailureEvent', message: string, eventType: DagsterEventType | null, timestamp: string, level: LogLevel, stepKey: string | null, error: { __typename: 'PythonError', message: string, stack: Array<string>, errorChain: Array<{ __typename: 'ErrorChainLink', isExplicitLink: boolean, error: { __typename: 'PythonError', message: string, stack: Array<string> } }> } | null };

type LogsRowStructuredFragment_RunStartEvent_Fragment = { __typename: 'RunStartEvent', message: string, eventType: DagsterEventType | null, timestamp: string, level: LogLevel, stepKey: string | null };

type LogsRowStructuredFragment_RunStartingEvent_Fragment = { __typename: 'RunStartingEvent', message: string, eventType: DagsterEventType | null, timestamp: string, level: LogLevel, stepKey: string | null };

type LogsRowStructuredFragment_RunSuccessEvent_Fragment = { __typename: 'RunSuccessEvent', message: string, eventType: DagsterEventType | null, timestamp: string, level: LogLevel, stepKey: string | null };

type LogsRowStructuredFragment_StepExpectationResultEvent_Fragment = { __typename: 'StepExpectationResultEvent', message: string, eventType: DagsterEventType | null, timestamp: string, level: LogLevel, stepKey: string | null, expectationResult: { __typename: 'ExpectationResult', success: boolean, label: string | null, description: string | null, metadataEntries: Array<{ __typename: 'AssetMetadataEntry', label: string, description: string | null, assetKey: { __typename: 'AssetKey', path: Array<string> } } | { __typename: 'BoolMetadataEntry', boolValue: boolean | null, label: string, description: string | null } | { __typename: 'FloatMetadataEntry', floatValue: number | null, label: string, description: string | null } | { __typename: 'IntMetadataEntry', intValue: number | null, intRepr: string, label: string, description: string | null } | { __typename: 'JsonMetadataEntry', jsonString: string, label: string, description: string | null } | { __typename: 'MarkdownMetadataEntry', mdStr: string, label: string, description: string | null } | { __typename: 'NotebookMetadataEntry', path: string, label: string, description: string | null } | { __typename: 'NullMetadataEntry', label: string, description: string | null } | { __typename: 'PathMetadataEntry', path: string, label: string, description: string | null } | { __typename: 'PipelineRunMetadataEntry', runId: string, label: string, description: string | null } | { __typename: 'PythonArtifactMetadataEntry', module: string, name: string, label: string, description: string | null } | { __typename: 'TableMetadataEntry', label: string, description: string | null, table: { __typename: 'Table', records: Array<string>, schema: { __typename: 'TableSchema', columns: Array<{ __typename: 'TableColumn', name: string, description: string | null, type: string, constraints: { __typename: 'TableColumnConstraints', nullable: boolean, unique: boolean, other: Array<string> } }>, constraints: { __typename: 'TableConstraints', other: Array<string> } | null } } } | { __typename: 'TableSchemaMetadataEntry', label: string, description: string | null, schema: { __typename: 'TableSchema', columns: Array<{ __typename: 'TableColumn', name: string, description: string | null, type: string, constraints: { __typename: 'TableColumnConstraints', nullable: boolean, unique: boolean, other: Array<string> } }>, constraints: { __typename: 'TableConstraints', other: Array<string> } | null } } | { __typename: 'TextMetadataEntry', text: string, label: string, description: string | null } | { __typename: 'UrlMetadataEntry', url: string, label: string, description: string | null }> } };

type LogsRowStructuredFragment_StepWorkerStartedEvent_Fragment = { __typename: 'StepWorkerStartedEvent', message: string, eventType: DagsterEventType | null, timestamp: string, level: LogLevel, stepKey: string | null, label: string | null, description: string | null, markerStart: string | null, markerEnd: string | null, metadataEntries: Array<{ __typename: 'AssetMetadataEntry', label: string, description: string | null, assetKey: { __typename: 'AssetKey', path: Array<string> } } | { __typename: 'BoolMetadataEntry', boolValue: boolean | null, label: string, description: string | null } | { __typename: 'FloatMetadataEntry', floatValue: number | null, label: string, description: string | null } | { __typename: 'IntMetadataEntry', intValue: number | null, intRepr: string, label: string, description: string | null } | { __typename: 'JsonMetadataEntry', jsonString: string, label: string, description: string | null } | { __typename: 'MarkdownMetadataEntry', mdStr: string, label: string, description: string | null } | { __typename: 'NotebookMetadataEntry', path: string, label: string, description: string | null } | { __typename: 'NullMetadataEntry', label: string, description: string | null } | { __typename: 'PathMetadataEntry', path: string, label: string, description: string | null } | { __typename: 'PipelineRunMetadataEntry', runId: string, label: string, description: string | null } | { __typename: 'PythonArtifactMetadataEntry', module: string, name: string, label: string, description: string | null } | { __typename: 'TableMetadataEntry', label: string, description: string | null, table: { __typename: 'Table', records: Array<string>, schema: { __typename: 'TableSchema', columns: Array<{ __typename: 'TableColumn', name: string, description: string | null, type: string, constraints: { __typename: 'TableColumnConstraints', nullable: boolean, unique: boolean, other: Array<string> } }>, constraints: { __typename: 'TableConstraints', other: Array<string> } | null } } } | { __typename: 'TableSchemaMetadataEntry', label: string, description: string | null, schema: { __typename: 'TableSchema', columns: Array<{ __typename: 'TableColumn', name: string, description: string | null, type: string, constraints: { __typename: 'TableColumnConstraints', nullable: boolean, unique: boolean, other: Array<string> } }>, constraints: { __typename: 'TableConstraints', other: Array<string> } | null } } | { __typename: 'TextMetadataEntry', text: string, label: string, description: string | null } | { __typename: 'UrlMetadataEntry', url: string, label: string, description: string | null }> };

type LogsRowStructuredFragment_StepWorkerStartingEvent_Fragment = { __typename: 'StepWorkerStartingEvent', message: string, eventType: DagsterEventType | null, timestamp: string, level: LogLevel, stepKey: string | null, label: string | null, description: string | null, markerStart: string | null, markerEnd: string | null, metadataEntries: Array<{ __typename: 'AssetMetadataEntry', label: string, description: string | null, assetKey: { __typename: 'AssetKey', path: Array<string> } } | { __typename: 'BoolMetadataEntry', boolValue: boolean | null, label: string, description: string | null } | { __typename: 'FloatMetadataEntry', floatValue: number | null, label: string, description: string | null } | { __typename: 'IntMetadataEntry', intValue: number | null, intRepr: string, label: string, description: string | null } | { __typename: 'JsonMetadataEntry', jsonString: string, label: string, description: string | null } | { __typename: 'MarkdownMetadataEntry', mdStr: string, label: string, description: string | null } | { __typename: 'NotebookMetadataEntry', path: string, label: string, description: string | null } | { __typename: 'NullMetadataEntry', label: string, description: string | null } | { __typename: 'PathMetadataEntry', path: string, label: string, description: string | null } | { __typename: 'PipelineRunMetadataEntry', runId: string, label: string, description: string | null } | { __typename: 'PythonArtifactMetadataEntry', module: string, name: string, label: string, description: string | null } | { __typename: 'TableMetadataEntry', label: string, description: string | null, table: { __typename: 'Table', records: Array<string>, schema: { __typename: 'TableSchema', columns: Array<{ __typename: 'TableColumn', name: string, description: string | null, type: string, constraints: { __typename: 'TableColumnConstraints', nullable: boolean, unique: boolean, other: Array<string> } }>, constraints: { __typename: 'TableConstraints', other: Array<string> } | null } } } | { __typename: 'TableSchemaMetadataEntry', label: string, description: string | null, schema: { __typename: 'TableSchema', columns: Array<{ __typename: 'TableColumn', name: string, description: string | null, type: string, constraints: { __typename: 'TableColumnConstraints', nullable: boolean, unique: boolean, other: Array<string> } }>, constraints: { __typename: 'TableConstraints', other: Array<string> } | null } } | { __typename: 'TextMetadataEntry', text: string, label: string, description: string | null } | { __typename: 'UrlMetadataEntry', url: string, label: string, description: string | null }> };

export type LogsRowStructuredFragmentFragment = LogsRowStructuredFragment_AlertFailureEvent_Fragment | LogsRowStructuredFragment_AlertStartEvent_Fragment | LogsRowStructuredFragment_AlertSuccessEvent_Fragment | LogsRowStructuredFragment_AssetMaterializationPlannedEvent_Fragment | LogsRowStructuredFragment_EngineEvent_Fragment | LogsRowStructuredFragment_ExecutionStepFailureEvent_Fragment | LogsRowStructuredFragment_ExecutionStepInputEvent_Fragment | LogsRowStructuredFragment_ExecutionStepOutputEvent_Fragment | LogsRowStructuredFragment_ExecutionStepRestartEvent_Fragment | LogsRowStructuredFragment_ExecutionStepSkippedEvent_Fragment | LogsRowStructuredFragment_ExecutionStepStartEvent_Fragment | LogsRowStructuredFragment_ExecutionStepSuccessEvent_Fragment | LogsRowStructuredFragment_ExecutionStepUpForRetryEvent_Fragment | LogsRowStructuredFragment_HandledOutputEvent_Fragment | LogsRowStructuredFragment_HookCompletedEvent_Fragment | LogsRowStructuredFragment_HookErroredEvent_Fragment | LogsRowStructuredFragment_HookSkippedEvent_Fragment | LogsRowStructuredFragment_LoadedInputEvent_Fragment | LogsRowStructuredFragment_LogMessageEvent_Fragment | LogsRowStructuredFragment_LogsCapturedEvent_Fragment | LogsRowStructuredFragment_MaterializationEvent_Fragment | LogsRowStructuredFragment_ObjectStoreOperationEvent_Fragment | LogsRowStructuredFragment_ObservationEvent_Fragment | LogsRowStructuredFragment_ResourceInitFailureEvent_Fragment | LogsRowStructuredFragment_ResourceInitStartedEvent_Fragment | LogsRowStructuredFragment_ResourceInitSuccessEvent_Fragment | LogsRowStructuredFragment_RunCanceledEvent_Fragment | LogsRowStructuredFragment_RunCancelingEvent_Fragment | LogsRowStructuredFragment_RunDequeuedEvent_Fragment | LogsRowStructuredFragment_RunEnqueuedEvent_Fragment | LogsRowStructuredFragment_RunFailureEvent_Fragment | LogsRowStructuredFragment_RunStartEvent_Fragment | LogsRowStructuredFragment_RunStartingEvent_Fragment | LogsRowStructuredFragment_RunSuccessEvent_Fragment | LogsRowStructuredFragment_StepExpectationResultEvent_Fragment | LogsRowStructuredFragment_StepWorkerStartedEvent_Fragment | LogsRowStructuredFragment_StepWorkerStartingEvent_Fragment;

type LogsRowUnstructuredFragment_AlertFailureEvent_Fragment = { __typename: 'AlertFailureEvent', message: string, timestamp: string, level: LogLevel, stepKey: string | null };

type LogsRowUnstructuredFragment_AlertStartEvent_Fragment = { __typename: 'AlertStartEvent', message: string, timestamp: string, level: LogLevel, stepKey: string | null };

type LogsRowUnstructuredFragment_AlertSuccessEvent_Fragment = { __typename: 'AlertSuccessEvent', message: string, timestamp: string, level: LogLevel, stepKey: string | null };

type LogsRowUnstructuredFragment_AssetMaterializationPlannedEvent_Fragment = { __typename: 'AssetMaterializationPlannedEvent', message: string, timestamp: string, level: LogLevel, stepKey: string | null };

type LogsRowUnstructuredFragment_EngineEvent_Fragment = { __typename: 'EngineEvent', message: string, timestamp: string, level: LogLevel, stepKey: string | null };

type LogsRowUnstructuredFragment_ExecutionStepFailureEvent_Fragment = { __typename: 'ExecutionStepFailureEvent', message: string, timestamp: string, level: LogLevel, stepKey: string | null };

type LogsRowUnstructuredFragment_ExecutionStepInputEvent_Fragment = { __typename: 'ExecutionStepInputEvent', message: string, timestamp: string, level: LogLevel, stepKey: string | null };

type LogsRowUnstructuredFragment_ExecutionStepOutputEvent_Fragment = { __typename: 'ExecutionStepOutputEvent', message: string, timestamp: string, level: LogLevel, stepKey: string | null };

type LogsRowUnstructuredFragment_ExecutionStepRestartEvent_Fragment = { __typename: 'ExecutionStepRestartEvent', message: string, timestamp: string, level: LogLevel, stepKey: string | null };

type LogsRowUnstructuredFragment_ExecutionStepSkippedEvent_Fragment = { __typename: 'ExecutionStepSkippedEvent', message: string, timestamp: string, level: LogLevel, stepKey: string | null };

type LogsRowUnstructuredFragment_ExecutionStepStartEvent_Fragment = { __typename: 'ExecutionStepStartEvent', message: string, timestamp: string, level: LogLevel, stepKey: string | null };

type LogsRowUnstructuredFragment_ExecutionStepSuccessEvent_Fragment = { __typename: 'ExecutionStepSuccessEvent', message: string, timestamp: string, level: LogLevel, stepKey: string | null };

type LogsRowUnstructuredFragment_ExecutionStepUpForRetryEvent_Fragment = { __typename: 'ExecutionStepUpForRetryEvent', message: string, timestamp: string, level: LogLevel, stepKey: string | null };

type LogsRowUnstructuredFragment_HandledOutputEvent_Fragment = { __typename: 'HandledOutputEvent', message: string, timestamp: string, level: LogLevel, stepKey: string | null };

type LogsRowUnstructuredFragment_HookCompletedEvent_Fragment = { __typename: 'HookCompletedEvent', message: string, timestamp: string, level: LogLevel, stepKey: string | null };

type LogsRowUnstructuredFragment_HookErroredEvent_Fragment = { __typename: 'HookErroredEvent', message: string, timestamp: string, level: LogLevel, stepKey: string | null };

type LogsRowUnstructuredFragment_HookSkippedEvent_Fragment = { __typename: 'HookSkippedEvent', message: string, timestamp: string, level: LogLevel, stepKey: string | null };

type LogsRowUnstructuredFragment_LoadedInputEvent_Fragment = { __typename: 'LoadedInputEvent', message: string, timestamp: string, level: LogLevel, stepKey: string | null };

type LogsRowUnstructuredFragment_LogMessageEvent_Fragment = { __typename: 'LogMessageEvent', message: string, timestamp: string, level: LogLevel, stepKey: string | null };

type LogsRowUnstructuredFragment_LogsCapturedEvent_Fragment = { __typename: 'LogsCapturedEvent', message: string, timestamp: string, level: LogLevel, stepKey: string | null };

type LogsRowUnstructuredFragment_MaterializationEvent_Fragment = { __typename: 'MaterializationEvent', message: string, timestamp: string, level: LogLevel, stepKey: string | null };

type LogsRowUnstructuredFragment_ObjectStoreOperationEvent_Fragment = { __typename: 'ObjectStoreOperationEvent', message: string, timestamp: string, level: LogLevel, stepKey: string | null };

type LogsRowUnstructuredFragment_ObservationEvent_Fragment = { __typename: 'ObservationEvent', message: string, timestamp: string, level: LogLevel, stepKey: string | null };

type LogsRowUnstructuredFragment_ResourceInitFailureEvent_Fragment = { __typename: 'ResourceInitFailureEvent', message: string, timestamp: string, level: LogLevel, stepKey: string | null };

type LogsRowUnstructuredFragment_ResourceInitStartedEvent_Fragment = { __typename: 'ResourceInitStartedEvent', message: string, timestamp: string, level: LogLevel, stepKey: string | null };

type LogsRowUnstructuredFragment_ResourceInitSuccessEvent_Fragment = { __typename: 'ResourceInitSuccessEvent', message: string, timestamp: string, level: LogLevel, stepKey: string | null };

type LogsRowUnstructuredFragment_RunCanceledEvent_Fragment = { __typename: 'RunCanceledEvent', message: string, timestamp: string, level: LogLevel, stepKey: string | null };

type LogsRowUnstructuredFragment_RunCancelingEvent_Fragment = { __typename: 'RunCancelingEvent', message: string, timestamp: string, level: LogLevel, stepKey: string | null };

type LogsRowUnstructuredFragment_RunDequeuedEvent_Fragment = { __typename: 'RunDequeuedEvent', message: string, timestamp: string, level: LogLevel, stepKey: string | null };

type LogsRowUnstructuredFragment_RunEnqueuedEvent_Fragment = { __typename: 'RunEnqueuedEvent', message: string, timestamp: string, level: LogLevel, stepKey: string | null };

type LogsRowUnstructuredFragment_RunFailureEvent_Fragment = { __typename: 'RunFailureEvent', message: string, timestamp: string, level: LogLevel, stepKey: string | null };

type LogsRowUnstructuredFragment_RunStartEvent_Fragment = { __typename: 'RunStartEvent', message: string, timestamp: string, level: LogLevel, stepKey: string | null };

type LogsRowUnstructuredFragment_RunStartingEvent_Fragment = { __typename: 'RunStartingEvent', message: string, timestamp: string, level: LogLevel, stepKey: string | null };

type LogsRowUnstructuredFragment_RunSuccessEvent_Fragment = { __typename: 'RunSuccessEvent', message: string, timestamp: string, level: LogLevel, stepKey: string | null };

type LogsRowUnstructuredFragment_StepExpectationResultEvent_Fragment = { __typename: 'StepExpectationResultEvent', message: string, timestamp: string, level: LogLevel, stepKey: string | null };

type LogsRowUnstructuredFragment_StepWorkerStartedEvent_Fragment = { __typename: 'StepWorkerStartedEvent', message: string, timestamp: string, level: LogLevel, stepKey: string | null };

type LogsRowUnstructuredFragment_StepWorkerStartingEvent_Fragment = { __typename: 'StepWorkerStartingEvent', message: string, timestamp: string, level: LogLevel, stepKey: string | null };

export type LogsRowUnstructuredFragmentFragment = LogsRowUnstructuredFragment_AlertFailureEvent_Fragment | LogsRowUnstructuredFragment_AlertStartEvent_Fragment | LogsRowUnstructuredFragment_AlertSuccessEvent_Fragment | LogsRowUnstructuredFragment_AssetMaterializationPlannedEvent_Fragment | LogsRowUnstructuredFragment_EngineEvent_Fragment | LogsRowUnstructuredFragment_ExecutionStepFailureEvent_Fragment | LogsRowUnstructuredFragment_ExecutionStepInputEvent_Fragment | LogsRowUnstructuredFragment_ExecutionStepOutputEvent_Fragment | LogsRowUnstructuredFragment_ExecutionStepRestartEvent_Fragment | LogsRowUnstructuredFragment_ExecutionStepSkippedEvent_Fragment | LogsRowUnstructuredFragment_ExecutionStepStartEvent_Fragment | LogsRowUnstructuredFragment_ExecutionStepSuccessEvent_Fragment | LogsRowUnstructuredFragment_ExecutionStepUpForRetryEvent_Fragment | LogsRowUnstructuredFragment_HandledOutputEvent_Fragment | LogsRowUnstructuredFragment_HookCompletedEvent_Fragment | LogsRowUnstructuredFragment_HookErroredEvent_Fragment | LogsRowUnstructuredFragment_HookSkippedEvent_Fragment | LogsRowUnstructuredFragment_LoadedInputEvent_Fragment | LogsRowUnstructuredFragment_LogMessageEvent_Fragment | LogsRowUnstructuredFragment_LogsCapturedEvent_Fragment | LogsRowUnstructuredFragment_MaterializationEvent_Fragment | LogsRowUnstructuredFragment_ObjectStoreOperationEvent_Fragment | LogsRowUnstructuredFragment_ObservationEvent_Fragment | LogsRowUnstructuredFragment_ResourceInitFailureEvent_Fragment | LogsRowUnstructuredFragment_ResourceInitStartedEvent_Fragment | LogsRowUnstructuredFragment_ResourceInitSuccessEvent_Fragment | LogsRowUnstructuredFragment_RunCanceledEvent_Fragment | LogsRowUnstructuredFragment_RunCancelingEvent_Fragment | LogsRowUnstructuredFragment_RunDequeuedEvent_Fragment | LogsRowUnstructuredFragment_RunEnqueuedEvent_Fragment | LogsRowUnstructuredFragment_RunFailureEvent_Fragment | LogsRowUnstructuredFragment_RunStartEvent_Fragment | LogsRowUnstructuredFragment_RunStartingEvent_Fragment | LogsRowUnstructuredFragment_RunSuccessEvent_Fragment | LogsRowUnstructuredFragment_StepExpectationResultEvent_Fragment | LogsRowUnstructuredFragment_StepWorkerStartedEvent_Fragment | LogsRowUnstructuredFragment_StepWorkerStartingEvent_Fragment;

type LogsScrollingTableMessageFragment_AlertFailureEvent_Fragment = { __typename: 'AlertFailureEvent', message: string, eventType: DagsterEventType | null, timestamp: string, level: LogLevel, stepKey: string | null };

type LogsScrollingTableMessageFragment_AlertStartEvent_Fragment = { __typename: 'AlertStartEvent', message: string, eventType: DagsterEventType | null, timestamp: string, level: LogLevel, stepKey: string | null };

type LogsScrollingTableMessageFragment_AlertSuccessEvent_Fragment = { __typename: 'AlertSuccessEvent', message: string, eventType: DagsterEventType | null, timestamp: string, level: LogLevel, stepKey: string | null };

type LogsScrollingTableMessageFragment_AssetMaterializationPlannedEvent_Fragment = { __typename: 'AssetMaterializationPlannedEvent', message: string, eventType: DagsterEventType | null, timestamp: string, level: LogLevel, stepKey: string | null };

type LogsScrollingTableMessageFragment_EngineEvent_Fragment = { __typename: 'EngineEvent', message: string, eventType: DagsterEventType | null, timestamp: string, level: LogLevel, stepKey: string | null, label: string | null, description: string | null, markerStart: string | null, markerEnd: string | null, metadataEntries: Array<{ __typename: 'AssetMetadataEntry', label: string, description: string | null, assetKey: { __typename: 'AssetKey', path: Array<string> } } | { __typename: 'BoolMetadataEntry', boolValue: boolean | null, label: string, description: string | null } | { __typename: 'FloatMetadataEntry', floatValue: number | null, label: string, description: string | null } | { __typename: 'IntMetadataEntry', intValue: number | null, intRepr: string, label: string, description: string | null } | { __typename: 'JsonMetadataEntry', jsonString: string, label: string, description: string | null } | { __typename: 'MarkdownMetadataEntry', mdStr: string, label: string, description: string | null } | { __typename: 'NotebookMetadataEntry', path: string, label: string, description: string | null } | { __typename: 'NullMetadataEntry', label: string, description: string | null } | { __typename: 'PathMetadataEntry', path: string, label: string, description: string | null } | { __typename: 'PipelineRunMetadataEntry', runId: string, label: string, description: string | null } | { __typename: 'PythonArtifactMetadataEntry', module: string, name: string, label: string, description: string | null } | { __typename: 'TableMetadataEntry', label: string, description: string | null, table: { __typename: 'Table', records: Array<string>, schema: { __typename: 'TableSchema', columns: Array<{ __typename: 'TableColumn', name: string, description: string | null, type: string, constraints: { __typename: 'TableColumnConstraints', nullable: boolean, unique: boolean, other: Array<string> } }>, constraints: { __typename: 'TableConstraints', other: Array<string> } | null } } } | { __typename: 'TableSchemaMetadataEntry', label: string, description: string | null, schema: { __typename: 'TableSchema', columns: Array<{ __typename: 'TableColumn', name: string, description: string | null, type: string, constraints: { __typename: 'TableColumnConstraints', nullable: boolean, unique: boolean, other: Array<string> } }>, constraints: { __typename: 'TableConstraints', other: Array<string> } | null } } | { __typename: 'TextMetadataEntry', text: string, label: string, description: string | null } | { __typename: 'UrlMetadataEntry', url: string, label: string, description: string | null }>, error: { __typename: 'PythonError', message: string, stack: Array<string>, errorChain: Array<{ __typename: 'ErrorChainLink', isExplicitLink: boolean, error: { __typename: 'PythonError', message: string, stack: Array<string> } }> } | null };

type LogsScrollingTableMessageFragment_ExecutionStepFailureEvent_Fragment = { __typename: 'ExecutionStepFailureEvent', message: string, eventType: DagsterEventType | null, timestamp: string, level: LogLevel, stepKey: string | null, errorSource: ErrorSource | null, error: { __typename: 'PythonError', message: string, stack: Array<string>, errorChain: Array<{ __typename: 'ErrorChainLink', isExplicitLink: boolean, error: { __typename: 'PythonError', message: string, stack: Array<string> } }> } | null, failureMetadata: { __typename: 'FailureMetadata', metadataEntries: Array<{ __typename: 'AssetMetadataEntry', label: string, description: string | null, assetKey: { __typename: 'AssetKey', path: Array<string> } } | { __typename: 'BoolMetadataEntry', boolValue: boolean | null, label: string, description: string | null } | { __typename: 'FloatMetadataEntry', floatValue: number | null, label: string, description: string | null } | { __typename: 'IntMetadataEntry', intValue: number | null, intRepr: string, label: string, description: string | null } | { __typename: 'JsonMetadataEntry', jsonString: string, label: string, description: string | null } | { __typename: 'MarkdownMetadataEntry', mdStr: string, label: string, description: string | null } | { __typename: 'NotebookMetadataEntry', path: string, label: string, description: string | null } | { __typename: 'NullMetadataEntry', label: string, description: string | null } | { __typename: 'PathMetadataEntry', path: string, label: string, description: string | null } | { __typename: 'PipelineRunMetadataEntry', runId: string, label: string, description: string | null } | { __typename: 'PythonArtifactMetadataEntry', module: string, name: string, label: string, description: string | null } | { __typename: 'TableMetadataEntry', label: string, description: string | null, table: { __typename: 'Table', records: Array<string>, schema: { __typename: 'TableSchema', columns: Array<{ __typename: 'TableColumn', name: string, description: string | null, type: string, constraints: { __typename: 'TableColumnConstraints', nullable: boolean, unique: boolean, other: Array<string> } }>, constraints: { __typename: 'TableConstraints', other: Array<string> } | null } } } | { __typename: 'TableSchemaMetadataEntry', label: string, description: string | null, schema: { __typename: 'TableSchema', columns: Array<{ __typename: 'TableColumn', name: string, description: string | null, type: string, constraints: { __typename: 'TableColumnConstraints', nullable: boolean, unique: boolean, other: Array<string> } }>, constraints: { __typename: 'TableConstraints', other: Array<string> } | null } } | { __typename: 'TextMetadataEntry', text: string, label: string, description: string | null } | { __typename: 'UrlMetadataEntry', url: string, label: string, description: string | null }> } | null };

type LogsScrollingTableMessageFragment_ExecutionStepInputEvent_Fragment = { __typename: 'ExecutionStepInputEvent', message: string, eventType: DagsterEventType | null, timestamp: string, level: LogLevel, stepKey: string | null, inputName: string, typeCheck: { __typename: 'TypeCheck', label: string | null, description: string | null, success: boolean, metadataEntries: Array<{ __typename: 'AssetMetadataEntry', label: string, description: string | null, assetKey: { __typename: 'AssetKey', path: Array<string> } } | { __typename: 'BoolMetadataEntry', boolValue: boolean | null, label: string, description: string | null } | { __typename: 'FloatMetadataEntry', floatValue: number | null, label: string, description: string | null } | { __typename: 'IntMetadataEntry', intValue: number | null, intRepr: string, label: string, description: string | null } | { __typename: 'JsonMetadataEntry', jsonString: string, label: string, description: string | null } | { __typename: 'MarkdownMetadataEntry', mdStr: string, label: string, description: string | null } | { __typename: 'NotebookMetadataEntry', path: string, label: string, description: string | null } | { __typename: 'NullMetadataEntry', label: string, description: string | null } | { __typename: 'PathMetadataEntry', path: string, label: string, description: string | null } | { __typename: 'PipelineRunMetadataEntry', runId: string, label: string, description: string | null } | { __typename: 'PythonArtifactMetadataEntry', module: string, name: string, label: string, description: string | null } | { __typename: 'TableMetadataEntry', label: string, description: string | null, table: { __typename: 'Table', records: Array<string>, schema: { __typename: 'TableSchema', columns: Array<{ __typename: 'TableColumn', name: string, description: string | null, type: string, constraints: { __typename: 'TableColumnConstraints', nullable: boolean, unique: boolean, other: Array<string> } }>, constraints: { __typename: 'TableConstraints', other: Array<string> } | null } } } | { __typename: 'TableSchemaMetadataEntry', label: string, description: string | null, schema: { __typename: 'TableSchema', columns: Array<{ __typename: 'TableColumn', name: string, description: string | null, type: string, constraints: { __typename: 'TableColumnConstraints', nullable: boolean, unique: boolean, other: Array<string> } }>, constraints: { __typename: 'TableConstraints', other: Array<string> } | null } } | { __typename: 'TextMetadataEntry', text: string, label: string, description: string | null } | { __typename: 'UrlMetadataEntry', url: string, label: string, description: string | null }> } };

type LogsScrollingTableMessageFragment_ExecutionStepOutputEvent_Fragment = { __typename: 'ExecutionStepOutputEvent', message: string, eventType: DagsterEventType | null, timestamp: string, level: LogLevel, stepKey: string | null, label: string | null, description: string | null, outputName: string, metadataEntries: Array<{ __typename: 'AssetMetadataEntry', label: string, description: string | null, assetKey: { __typename: 'AssetKey', path: Array<string> } } | { __typename: 'BoolMetadataEntry', boolValue: boolean | null, label: string, description: string | null } | { __typename: 'FloatMetadataEntry', floatValue: number | null, label: string, description: string | null } | { __typename: 'IntMetadataEntry', intValue: number | null, intRepr: string, label: string, description: string | null } | { __typename: 'JsonMetadataEntry', jsonString: string, label: string, description: string | null } | { __typename: 'MarkdownMetadataEntry', mdStr: string, label: string, description: string | null } | { __typename: 'NotebookMetadataEntry', path: string, label: string, description: string | null } | { __typename: 'NullMetadataEntry', label: string, description: string | null } | { __typename: 'PathMetadataEntry', path: string, label: string, description: string | null } | { __typename: 'PipelineRunMetadataEntry', runId: string, label: string, description: string | null } | { __typename: 'PythonArtifactMetadataEntry', module: string, name: string, label: string, description: string | null } | { __typename: 'TableMetadataEntry', label: string, description: string | null, table: { __typename: 'Table', records: Array<string>, schema: { __typename: 'TableSchema', columns: Array<{ __typename: 'TableColumn', name: string, description: string | null, type: string, constraints: { __typename: 'TableColumnConstraints', nullable: boolean, unique: boolean, other: Array<string> } }>, constraints: { __typename: 'TableConstraints', other: Array<string> } | null } } } | { __typename: 'TableSchemaMetadataEntry', label: string, description: string | null, schema: { __typename: 'TableSchema', columns: Array<{ __typename: 'TableColumn', name: string, description: string | null, type: string, constraints: { __typename: 'TableColumnConstraints', nullable: boolean, unique: boolean, other: Array<string> } }>, constraints: { __typename: 'TableConstraints', other: Array<string> } | null } } | { __typename: 'TextMetadataEntry', text: string, label: string, description: string | null } | { __typename: 'UrlMetadataEntry', url: string, label: string, description: string | null }>, typeCheck: { __typename: 'TypeCheck', label: string | null, description: string | null, success: boolean, metadataEntries: Array<{ __typename: 'AssetMetadataEntry', label: string, description: string | null, assetKey: { __typename: 'AssetKey', path: Array<string> } } | { __typename: 'BoolMetadataEntry', boolValue: boolean | null, label: string, description: string | null } | { __typename: 'FloatMetadataEntry', floatValue: number | null, label: string, description: string | null } | { __typename: 'IntMetadataEntry', intValue: number | null, intRepr: string, label: string, description: string | null } | { __typename: 'JsonMetadataEntry', jsonString: string, label: string, description: string | null } | { __typename: 'MarkdownMetadataEntry', mdStr: string, label: string, description: string | null } | { __typename: 'NotebookMetadataEntry', path: string, label: string, description: string | null } | { __typename: 'NullMetadataEntry', label: string, description: string | null } | { __typename: 'PathMetadataEntry', path: string, label: string, description: string | null } | { __typename: 'PipelineRunMetadataEntry', runId: string, label: string, description: string | null } | { __typename: 'PythonArtifactMetadataEntry', module: string, name: string, label: string, description: string | null } | { __typename: 'TableMetadataEntry', label: string, description: string | null, table: { __typename: 'Table', records: Array<string>, schema: { __typename: 'TableSchema', columns: Array<{ __typename: 'TableColumn', name: string, description: string | null, type: string, constraints: { __typename: 'TableColumnConstraints', nullable: boolean, unique: boolean, other: Array<string> } }>, constraints: { __typename: 'TableConstraints', other: Array<string> } | null } } } | { __typename: 'TableSchemaMetadataEntry', label: string, description: string | null, schema: { __typename: 'TableSchema', columns: Array<{ __typename: 'TableColumn', name: string, description: string | null, type: string, constraints: { __typename: 'TableColumnConstraints', nullable: boolean, unique: boolean, other: Array<string> } }>, constraints: { __typename: 'TableConstraints', other: Array<string> } | null } } | { __typename: 'TextMetadataEntry', text: string, label: string, description: string | null } | { __typename: 'UrlMetadataEntry', url: string, label: string, description: string | null }> } };

type LogsScrollingTableMessageFragment_ExecutionStepRestartEvent_Fragment = { __typename: 'ExecutionStepRestartEvent', message: string, eventType: DagsterEventType | null, timestamp: string, level: LogLevel, stepKey: string | null };

type LogsScrollingTableMessageFragment_ExecutionStepSkippedEvent_Fragment = { __typename: 'ExecutionStepSkippedEvent', message: string, eventType: DagsterEventType | null, timestamp: string, level: LogLevel, stepKey: string | null };

type LogsScrollingTableMessageFragment_ExecutionStepStartEvent_Fragment = { __typename: 'ExecutionStepStartEvent', message: string, eventType: DagsterEventType | null, timestamp: string, level: LogLevel, stepKey: string | null };

type LogsScrollingTableMessageFragment_ExecutionStepSuccessEvent_Fragment = { __typename: 'ExecutionStepSuccessEvent', message: string, eventType: DagsterEventType | null, timestamp: string, level: LogLevel, stepKey: string | null };

type LogsScrollingTableMessageFragment_ExecutionStepUpForRetryEvent_Fragment = { __typename: 'ExecutionStepUpForRetryEvent', message: string, eventType: DagsterEventType | null, timestamp: string, level: LogLevel, stepKey: string | null, error: { __typename: 'PythonError', message: string, stack: Array<string>, errorChain: Array<{ __typename: 'ErrorChainLink', isExplicitLink: boolean, error: { __typename: 'PythonError', message: string, stack: Array<string> } }> } | null };

type LogsScrollingTableMessageFragment_HandledOutputEvent_Fragment = { __typename: 'HandledOutputEvent', message: string, eventType: DagsterEventType | null, timestamp: string, level: LogLevel, stepKey: string | null, label: string | null, description: string | null, outputName: string, managerKey: string, metadataEntries: Array<{ __typename: 'AssetMetadataEntry', label: string, description: string | null, assetKey: { __typename: 'AssetKey', path: Array<string> } } | { __typename: 'BoolMetadataEntry', boolValue: boolean | null, label: string, description: string | null } | { __typename: 'FloatMetadataEntry', floatValue: number | null, label: string, description: string | null } | { __typename: 'IntMetadataEntry', intValue: number | null, intRepr: string, label: string, description: string | null } | { __typename: 'JsonMetadataEntry', jsonString: string, label: string, description: string | null } | { __typename: 'MarkdownMetadataEntry', mdStr: string, label: string, description: string | null } | { __typename: 'NotebookMetadataEntry', path: string, label: string, description: string | null } | { __typename: 'NullMetadataEntry', label: string, description: string | null } | { __typename: 'PathMetadataEntry', path: string, label: string, description: string | null } | { __typename: 'PipelineRunMetadataEntry', runId: string, label: string, description: string | null } | { __typename: 'PythonArtifactMetadataEntry', module: string, name: string, label: string, description: string | null } | { __typename: 'TableMetadataEntry', label: string, description: string | null, table: { __typename: 'Table', records: Array<string>, schema: { __typename: 'TableSchema', columns: Array<{ __typename: 'TableColumn', name: string, description: string | null, type: string, constraints: { __typename: 'TableColumnConstraints', nullable: boolean, unique: boolean, other: Array<string> } }>, constraints: { __typename: 'TableConstraints', other: Array<string> } | null } } } | { __typename: 'TableSchemaMetadataEntry', label: string, description: string | null, schema: { __typename: 'TableSchema', columns: Array<{ __typename: 'TableColumn', name: string, description: string | null, type: string, constraints: { __typename: 'TableColumnConstraints', nullable: boolean, unique: boolean, other: Array<string> } }>, constraints: { __typename: 'TableConstraints', other: Array<string> } | null } } | { __typename: 'TextMetadataEntry', text: string, label: string, description: string | null } | { __typename: 'UrlMetadataEntry', url: string, label: string, description: string | null }> };

type LogsScrollingTableMessageFragment_HookCompletedEvent_Fragment = { __typename: 'HookCompletedEvent', message: string, eventType: DagsterEventType | null, timestamp: string, level: LogLevel, stepKey: string | null };

type LogsScrollingTableMessageFragment_HookErroredEvent_Fragment = { __typename: 'HookErroredEvent', message: string, eventType: DagsterEventType | null, timestamp: string, level: LogLevel, stepKey: string | null, error: { __typename: 'PythonError', message: string, stack: Array<string>, errorChain: Array<{ __typename: 'ErrorChainLink', isExplicitLink: boolean, error: { __typename: 'PythonError', message: string, stack: Array<string> } }> } | null };

type LogsScrollingTableMessageFragment_HookSkippedEvent_Fragment = { __typename: 'HookSkippedEvent', message: string, eventType: DagsterEventType | null, timestamp: string, level: LogLevel, stepKey: string | null };

type LogsScrollingTableMessageFragment_LoadedInputEvent_Fragment = { __typename: 'LoadedInputEvent', message: string, eventType: DagsterEventType | null, timestamp: string, level: LogLevel, stepKey: string | null, label: string | null, description: string | null, inputName: string, managerKey: string, upstreamOutputName: string | null, upstreamStepKey: string | null, metadataEntries: Array<{ __typename: 'AssetMetadataEntry', label: string, description: string | null, assetKey: { __typename: 'AssetKey', path: Array<string> } } | { __typename: 'BoolMetadataEntry', boolValue: boolean | null, label: string, description: string | null } | { __typename: 'FloatMetadataEntry', floatValue: number | null, label: string, description: string | null } | { __typename: 'IntMetadataEntry', intValue: number | null, intRepr: string, label: string, description: string | null } | { __typename: 'JsonMetadataEntry', jsonString: string, label: string, description: string | null } | { __typename: 'MarkdownMetadataEntry', mdStr: string, label: string, description: string | null } | { __typename: 'NotebookMetadataEntry', path: string, label: string, description: string | null } | { __typename: 'NullMetadataEntry', label: string, description: string | null } | { __typename: 'PathMetadataEntry', path: string, label: string, description: string | null } | { __typename: 'PipelineRunMetadataEntry', runId: string, label: string, description: string | null } | { __typename: 'PythonArtifactMetadataEntry', module: string, name: string, label: string, description: string | null } | { __typename: 'TableMetadataEntry', label: string, description: string | null, table: { __typename: 'Table', records: Array<string>, schema: { __typename: 'TableSchema', columns: Array<{ __typename: 'TableColumn', name: string, description: string | null, type: string, constraints: { __typename: 'TableColumnConstraints', nullable: boolean, unique: boolean, other: Array<string> } }>, constraints: { __typename: 'TableConstraints', other: Array<string> } | null } } } | { __typename: 'TableSchemaMetadataEntry', label: string, description: string | null, schema: { __typename: 'TableSchema', columns: Array<{ __typename: 'TableColumn', name: string, description: string | null, type: string, constraints: { __typename: 'TableColumnConstraints', nullable: boolean, unique: boolean, other: Array<string> } }>, constraints: { __typename: 'TableConstraints', other: Array<string> } | null } } | { __typename: 'TextMetadataEntry', text: string, label: string, description: string | null } | { __typename: 'UrlMetadataEntry', url: string, label: string, description: string | null }> };

type LogsScrollingTableMessageFragment_LogMessageEvent_Fragment = { __typename: 'LogMessageEvent', message: string, eventType: DagsterEventType | null, timestamp: string, level: LogLevel, stepKey: string | null };

type LogsScrollingTableMessageFragment_LogsCapturedEvent_Fragment = { __typename: 'LogsCapturedEvent', message: string, eventType: DagsterEventType | null, timestamp: string, level: LogLevel, stepKey: string | null, fileKey: string, stepKeys: Array<string> | null, externalUrl: string | null };

type LogsScrollingTableMessageFragment_MaterializationEvent_Fragment = { __typename: 'MaterializationEvent', message: string, eventType: DagsterEventType | null, timestamp: string, level: LogLevel, stepKey: string | null, label: string | null, description: string | null, metadataEntries: Array<{ __typename: 'AssetMetadataEntry', label: string, description: string | null, assetKey: { __typename: 'AssetKey', path: Array<string> } } | { __typename: 'BoolMetadataEntry', boolValue: boolean | null, label: string, description: string | null } | { __typename: 'FloatMetadataEntry', floatValue: number | null, label: string, description: string | null } | { __typename: 'IntMetadataEntry', intValue: number | null, intRepr: string, label: string, description: string | null } | { __typename: 'JsonMetadataEntry', jsonString: string, label: string, description: string | null } | { __typename: 'MarkdownMetadataEntry', mdStr: string, label: string, description: string | null } | { __typename: 'NotebookMetadataEntry', path: string, label: string, description: string | null } | { __typename: 'NullMetadataEntry', label: string, description: string | null } | { __typename: 'PathMetadataEntry', path: string, label: string, description: string | null } | { __typename: 'PipelineRunMetadataEntry', runId: string, label: string, description: string | null } | { __typename: 'PythonArtifactMetadataEntry', module: string, name: string, label: string, description: string | null } | { __typename: 'TableMetadataEntry', label: string, description: string | null, table: { __typename: 'Table', records: Array<string>, schema: { __typename: 'TableSchema', columns: Array<{ __typename: 'TableColumn', name: string, description: string | null, type: string, constraints: { __typename: 'TableColumnConstraints', nullable: boolean, unique: boolean, other: Array<string> } }>, constraints: { __typename: 'TableConstraints', other: Array<string> } | null } } } | { __typename: 'TableSchemaMetadataEntry', label: string, description: string | null, schema: { __typename: 'TableSchema', columns: Array<{ __typename: 'TableColumn', name: string, description: string | null, type: string, constraints: { __typename: 'TableColumnConstraints', nullable: boolean, unique: boolean, other: Array<string> } }>, constraints: { __typename: 'TableConstraints', other: Array<string> } | null } } | { __typename: 'TextMetadataEntry', text: string, label: string, description: string | null } | { __typename: 'UrlMetadataEntry', url: string, label: string, description: string | null }>, assetKey: { __typename: 'AssetKey', path: Array<string> } | null };

type LogsScrollingTableMessageFragment_ObjectStoreOperationEvent_Fragment = { __typename: 'ObjectStoreOperationEvent', message: string, eventType: DagsterEventType | null, timestamp: string, level: LogLevel, stepKey: string | null, operationResult: { __typename: 'ObjectStoreOperationResult', op: ObjectStoreOperationType, metadataEntries: Array<{ __typename: 'AssetMetadataEntry', label: string, description: string | null, assetKey: { __typename: 'AssetKey', path: Array<string> } } | { __typename: 'BoolMetadataEntry', boolValue: boolean | null, label: string, description: string | null } | { __typename: 'FloatMetadataEntry', floatValue: number | null, label: string, description: string | null } | { __typename: 'IntMetadataEntry', intValue: number | null, intRepr: string, label: string, description: string | null } | { __typename: 'JsonMetadataEntry', jsonString: string, label: string, description: string | null } | { __typename: 'MarkdownMetadataEntry', mdStr: string, label: string, description: string | null } | { __typename: 'NotebookMetadataEntry', path: string, label: string, description: string | null } | { __typename: 'NullMetadataEntry', label: string, description: string | null } | { __typename: 'PathMetadataEntry', path: string, label: string, description: string | null } | { __typename: 'PipelineRunMetadataEntry', runId: string, label: string, description: string | null } | { __typename: 'PythonArtifactMetadataEntry', module: string, name: string, label: string, description: string | null } | { __typename: 'TableMetadataEntry', label: string, description: string | null, table: { __typename: 'Table', records: Array<string>, schema: { __typename: 'TableSchema', columns: Array<{ __typename: 'TableColumn', name: string, description: string | null, type: string, constraints: { __typename: 'TableColumnConstraints', nullable: boolean, unique: boolean, other: Array<string> } }>, constraints: { __typename: 'TableConstraints', other: Array<string> } | null } } } | { __typename: 'TableSchemaMetadataEntry', label: string, description: string | null, schema: { __typename: 'TableSchema', columns: Array<{ __typename: 'TableColumn', name: string, description: string | null, type: string, constraints: { __typename: 'TableColumnConstraints', nullable: boolean, unique: boolean, other: Array<string> } }>, constraints: { __typename: 'TableConstraints', other: Array<string> } | null } } | { __typename: 'TextMetadataEntry', text: string, label: string, description: string | null } | { __typename: 'UrlMetadataEntry', url: string, label: string, description: string | null }> } };

type LogsScrollingTableMessageFragment_ObservationEvent_Fragment = { __typename: 'ObservationEvent', message: string, eventType: DagsterEventType | null, timestamp: string, level: LogLevel, stepKey: string | null, label: string | null, description: string | null, metadataEntries: Array<{ __typename: 'AssetMetadataEntry', label: string, description: string | null, assetKey: { __typename: 'AssetKey', path: Array<string> } } | { __typename: 'BoolMetadataEntry', boolValue: boolean | null, label: string, description: string | null } | { __typename: 'FloatMetadataEntry', floatValue: number | null, label: string, description: string | null } | { __typename: 'IntMetadataEntry', intValue: number | null, intRepr: string, label: string, description: string | null } | { __typename: 'JsonMetadataEntry', jsonString: string, label: string, description: string | null } | { __typename: 'MarkdownMetadataEntry', mdStr: string, label: string, description: string | null } | { __typename: 'NotebookMetadataEntry', path: string, label: string, description: string | null } | { __typename: 'NullMetadataEntry', label: string, description: string | null } | { __typename: 'PathMetadataEntry', path: string, label: string, description: string | null } | { __typename: 'PipelineRunMetadataEntry', runId: string, label: string, description: string | null } | { __typename: 'PythonArtifactMetadataEntry', module: string, name: string, label: string, description: string | null } | { __typename: 'TableMetadataEntry', label: string, description: string | null, table: { __typename: 'Table', records: Array<string>, schema: { __typename: 'TableSchema', columns: Array<{ __typename: 'TableColumn', name: string, description: string | null, type: string, constraints: { __typename: 'TableColumnConstraints', nullable: boolean, unique: boolean, other: Array<string> } }>, constraints: { __typename: 'TableConstraints', other: Array<string> } | null } } } | { __typename: 'TableSchemaMetadataEntry', label: string, description: string | null, schema: { __typename: 'TableSchema', columns: Array<{ __typename: 'TableColumn', name: string, description: string | null, type: string, constraints: { __typename: 'TableColumnConstraints', nullable: boolean, unique: boolean, other: Array<string> } }>, constraints: { __typename: 'TableConstraints', other: Array<string> } | null } } | { __typename: 'TextMetadataEntry', text: string, label: string, description: string | null } | { __typename: 'UrlMetadataEntry', url: string, label: string, description: string | null }>, assetKey: { __typename: 'AssetKey', path: Array<string> } | null };

type LogsScrollingTableMessageFragment_ResourceInitFailureEvent_Fragment = { __typename: 'ResourceInitFailureEvent', message: string, eventType: DagsterEventType | null, timestamp: string, level: LogLevel, stepKey: string | null, label: string | null, description: string | null, markerStart: string | null, markerEnd: string | null, metadataEntries: Array<{ __typename: 'AssetMetadataEntry', label: string, description: string | null, assetKey: { __typename: 'AssetKey', path: Array<string> } } | { __typename: 'BoolMetadataEntry', boolValue: boolean | null, label: string, description: string | null } | { __typename: 'FloatMetadataEntry', floatValue: number | null, label: string, description: string | null } | { __typename: 'IntMetadataEntry', intValue: number | null, intRepr: string, label: string, description: string | null } | { __typename: 'JsonMetadataEntry', jsonString: string, label: string, description: string | null } | { __typename: 'MarkdownMetadataEntry', mdStr: string, label: string, description: string | null } | { __typename: 'NotebookMetadataEntry', path: string, label: string, description: string | null } | { __typename: 'NullMetadataEntry', label: string, description: string | null } | { __typename: 'PathMetadataEntry', path: string, label: string, description: string | null } | { __typename: 'PipelineRunMetadataEntry', runId: string, label: string, description: string | null } | { __typename: 'PythonArtifactMetadataEntry', module: string, name: string, label: string, description: string | null } | { __typename: 'TableMetadataEntry', label: string, description: string | null, table: { __typename: 'Table', records: Array<string>, schema: { __typename: 'TableSchema', columns: Array<{ __typename: 'TableColumn', name: string, description: string | null, type: string, constraints: { __typename: 'TableColumnConstraints', nullable: boolean, unique: boolean, other: Array<string> } }>, constraints: { __typename: 'TableConstraints', other: Array<string> } | null } } } | { __typename: 'TableSchemaMetadataEntry', label: string, description: string | null, schema: { __typename: 'TableSchema', columns: Array<{ __typename: 'TableColumn', name: string, description: string | null, type: string, constraints: { __typename: 'TableColumnConstraints', nullable: boolean, unique: boolean, other: Array<string> } }>, constraints: { __typename: 'TableConstraints', other: Array<string> } | null } } | { __typename: 'TextMetadataEntry', text: string, label: string, description: string | null } | { __typename: 'UrlMetadataEntry', url: string, label: string, description: string | null }>, error: { __typename: 'PythonError', message: string, stack: Array<string>, errorChain: Array<{ __typename: 'ErrorChainLink', isExplicitLink: boolean, error: { __typename: 'PythonError', message: string, stack: Array<string> } }> } | null };

type LogsScrollingTableMessageFragment_ResourceInitStartedEvent_Fragment = { __typename: 'ResourceInitStartedEvent', message: string, eventType: DagsterEventType | null, timestamp: string, level: LogLevel, stepKey: string | null, label: string | null, description: string | null, markerStart: string | null, markerEnd: string | null, metadataEntries: Array<{ __typename: 'AssetMetadataEntry', label: string, description: string | null, assetKey: { __typename: 'AssetKey', path: Array<string> } } | { __typename: 'BoolMetadataEntry', boolValue: boolean | null, label: string, description: string | null } | { __typename: 'FloatMetadataEntry', floatValue: number | null, label: string, description: string | null } | { __typename: 'IntMetadataEntry', intValue: number | null, intRepr: string, label: string, description: string | null } | { __typename: 'JsonMetadataEntry', jsonString: string, label: string, description: string | null } | { __typename: 'MarkdownMetadataEntry', mdStr: string, label: string, description: string | null } | { __typename: 'NotebookMetadataEntry', path: string, label: string, description: string | null } | { __typename: 'NullMetadataEntry', label: string, description: string | null } | { __typename: 'PathMetadataEntry', path: string, label: string, description: string | null } | { __typename: 'PipelineRunMetadataEntry', runId: string, label: string, description: string | null } | { __typename: 'PythonArtifactMetadataEntry', module: string, name: string, label: string, description: string | null } | { __typename: 'TableMetadataEntry', label: string, description: string | null, table: { __typename: 'Table', records: Array<string>, schema: { __typename: 'TableSchema', columns: Array<{ __typename: 'TableColumn', name: string, description: string | null, type: string, constraints: { __typename: 'TableColumnConstraints', nullable: boolean, unique: boolean, other: Array<string> } }>, constraints: { __typename: 'TableConstraints', other: Array<string> } | null } } } | { __typename: 'TableSchemaMetadataEntry', label: string, description: string | null, schema: { __typename: 'TableSchema', columns: Array<{ __typename: 'TableColumn', name: string, description: string | null, type: string, constraints: { __typename: 'TableColumnConstraints', nullable: boolean, unique: boolean, other: Array<string> } }>, constraints: { __typename: 'TableConstraints', other: Array<string> } | null } } | { __typename: 'TextMetadataEntry', text: string, label: string, description: string | null } | { __typename: 'UrlMetadataEntry', url: string, label: string, description: string | null }> };

type LogsScrollingTableMessageFragment_ResourceInitSuccessEvent_Fragment = { __typename: 'ResourceInitSuccessEvent', message: string, eventType: DagsterEventType | null, timestamp: string, level: LogLevel, stepKey: string | null, label: string | null, description: string | null, markerStart: string | null, markerEnd: string | null, metadataEntries: Array<{ __typename: 'AssetMetadataEntry', label: string, description: string | null, assetKey: { __typename: 'AssetKey', path: Array<string> } } | { __typename: 'BoolMetadataEntry', boolValue: boolean | null, label: string, description: string | null } | { __typename: 'FloatMetadataEntry', floatValue: number | null, label: string, description: string | null } | { __typename: 'IntMetadataEntry', intValue: number | null, intRepr: string, label: string, description: string | null } | { __typename: 'JsonMetadataEntry', jsonString: string, label: string, description: string | null } | { __typename: 'MarkdownMetadataEntry', mdStr: string, label: string, description: string | null } | { __typename: 'NotebookMetadataEntry', path: string, label: string, description: string | null } | { __typename: 'NullMetadataEntry', label: string, description: string | null } | { __typename: 'PathMetadataEntry', path: string, label: string, description: string | null } | { __typename: 'PipelineRunMetadataEntry', runId: string, label: string, description: string | null } | { __typename: 'PythonArtifactMetadataEntry', module: string, name: string, label: string, description: string | null } | { __typename: 'TableMetadataEntry', label: string, description: string | null, table: { __typename: 'Table', records: Array<string>, schema: { __typename: 'TableSchema', columns: Array<{ __typename: 'TableColumn', name: string, description: string | null, type: string, constraints: { __typename: 'TableColumnConstraints', nullable: boolean, unique: boolean, other: Array<string> } }>, constraints: { __typename: 'TableConstraints', other: Array<string> } | null } } } | { __typename: 'TableSchemaMetadataEntry', label: string, description: string | null, schema: { __typename: 'TableSchema', columns: Array<{ __typename: 'TableColumn', name: string, description: string | null, type: string, constraints: { __typename: 'TableColumnConstraints', nullable: boolean, unique: boolean, other: Array<string> } }>, constraints: { __typename: 'TableConstraints', other: Array<string> } | null } } | { __typename: 'TextMetadataEntry', text: string, label: string, description: string | null } | { __typename: 'UrlMetadataEntry', url: string, label: string, description: string | null }> };

type LogsScrollingTableMessageFragment_RunCanceledEvent_Fragment = { __typename: 'RunCanceledEvent', message: string, eventType: DagsterEventType | null, timestamp: string, level: LogLevel, stepKey: string | null };

type LogsScrollingTableMessageFragment_RunCancelingEvent_Fragment = { __typename: 'RunCancelingEvent', message: string, eventType: DagsterEventType | null, timestamp: string, level: LogLevel, stepKey: string | null };

type LogsScrollingTableMessageFragment_RunDequeuedEvent_Fragment = { __typename: 'RunDequeuedEvent', message: string, eventType: DagsterEventType | null, timestamp: string, level: LogLevel, stepKey: string | null };

type LogsScrollingTableMessageFragment_RunEnqueuedEvent_Fragment = { __typename: 'RunEnqueuedEvent', message: string, eventType: DagsterEventType | null, timestamp: string, level: LogLevel, stepKey: string | null };

type LogsScrollingTableMessageFragment_RunFailureEvent_Fragment = { __typename: 'RunFailureEvent', message: string, eventType: DagsterEventType | null, timestamp: string, level: LogLevel, stepKey: string | null, error: { __typename: 'PythonError', message: string, stack: Array<string>, errorChain: Array<{ __typename: 'ErrorChainLink', isExplicitLink: boolean, error: { __typename: 'PythonError', message: string, stack: Array<string> } }> } | null };

type LogsScrollingTableMessageFragment_RunStartEvent_Fragment = { __typename: 'RunStartEvent', message: string, eventType: DagsterEventType | null, timestamp: string, level: LogLevel, stepKey: string | null };

type LogsScrollingTableMessageFragment_RunStartingEvent_Fragment = { __typename: 'RunStartingEvent', message: string, eventType: DagsterEventType | null, timestamp: string, level: LogLevel, stepKey: string | null };

type LogsScrollingTableMessageFragment_RunSuccessEvent_Fragment = { __typename: 'RunSuccessEvent', message: string, eventType: DagsterEventType | null, timestamp: string, level: LogLevel, stepKey: string | null };

type LogsScrollingTableMessageFragment_StepExpectationResultEvent_Fragment = { __typename: 'StepExpectationResultEvent', message: string, eventType: DagsterEventType | null, timestamp: string, level: LogLevel, stepKey: string | null, expectationResult: { __typename: 'ExpectationResult', success: boolean, label: string | null, description: string | null, metadataEntries: Array<{ __typename: 'AssetMetadataEntry', label: string, description: string | null, assetKey: { __typename: 'AssetKey', path: Array<string> } } | { __typename: 'BoolMetadataEntry', boolValue: boolean | null, label: string, description: string | null } | { __typename: 'FloatMetadataEntry', floatValue: number | null, label: string, description: string | null } | { __typename: 'IntMetadataEntry', intValue: number | null, intRepr: string, label: string, description: string | null } | { __typename: 'JsonMetadataEntry', jsonString: string, label: string, description: string | null } | { __typename: 'MarkdownMetadataEntry', mdStr: string, label: string, description: string | null } | { __typename: 'NotebookMetadataEntry', path: string, label: string, description: string | null } | { __typename: 'NullMetadataEntry', label: string, description: string | null } | { __typename: 'PathMetadataEntry', path: string, label: string, description: string | null } | { __typename: 'PipelineRunMetadataEntry', runId: string, label: string, description: string | null } | { __typename: 'PythonArtifactMetadataEntry', module: string, name: string, label: string, description: string | null } | { __typename: 'TableMetadataEntry', label: string, description: string | null, table: { __typename: 'Table', records: Array<string>, schema: { __typename: 'TableSchema', columns: Array<{ __typename: 'TableColumn', name: string, description: string | null, type: string, constraints: { __typename: 'TableColumnConstraints', nullable: boolean, unique: boolean, other: Array<string> } }>, constraints: { __typename: 'TableConstraints', other: Array<string> } | null } } } | { __typename: 'TableSchemaMetadataEntry', label: string, description: string | null, schema: { __typename: 'TableSchema', columns: Array<{ __typename: 'TableColumn', name: string, description: string | null, type: string, constraints: { __typename: 'TableColumnConstraints', nullable: boolean, unique: boolean, other: Array<string> } }>, constraints: { __typename: 'TableConstraints', other: Array<string> } | null } } | { __typename: 'TextMetadataEntry', text: string, label: string, description: string | null } | { __typename: 'UrlMetadataEntry', url: string, label: string, description: string | null }> } };

type LogsScrollingTableMessageFragment_StepWorkerStartedEvent_Fragment = { __typename: 'StepWorkerStartedEvent', message: string, eventType: DagsterEventType | null, timestamp: string, level: LogLevel, stepKey: string | null, label: string | null, description: string | null, markerStart: string | null, markerEnd: string | null, metadataEntries: Array<{ __typename: 'AssetMetadataEntry', label: string, description: string | null, assetKey: { __typename: 'AssetKey', path: Array<string> } } | { __typename: 'BoolMetadataEntry', boolValue: boolean | null, label: string, description: string | null } | { __typename: 'FloatMetadataEntry', floatValue: number | null, label: string, description: string | null } | { __typename: 'IntMetadataEntry', intValue: number | null, intRepr: string, label: string, description: string | null } | { __typename: 'JsonMetadataEntry', jsonString: string, label: string, description: string | null } | { __typename: 'MarkdownMetadataEntry', mdStr: string, label: string, description: string | null } | { __typename: 'NotebookMetadataEntry', path: string, label: string, description: string | null } | { __typename: 'NullMetadataEntry', label: string, description: string | null } | { __typename: 'PathMetadataEntry', path: string, label: string, description: string | null } | { __typename: 'PipelineRunMetadataEntry', runId: string, label: string, description: string | null } | { __typename: 'PythonArtifactMetadataEntry', module: string, name: string, label: string, description: string | null } | { __typename: 'TableMetadataEntry', label: string, description: string | null, table: { __typename: 'Table', records: Array<string>, schema: { __typename: 'TableSchema', columns: Array<{ __typename: 'TableColumn', name: string, description: string | null, type: string, constraints: { __typename: 'TableColumnConstraints', nullable: boolean, unique: boolean, other: Array<string> } }>, constraints: { __typename: 'TableConstraints', other: Array<string> } | null } } } | { __typename: 'TableSchemaMetadataEntry', label: string, description: string | null, schema: { __typename: 'TableSchema', columns: Array<{ __typename: 'TableColumn', name: string, description: string | null, type: string, constraints: { __typename: 'TableColumnConstraints', nullable: boolean, unique: boolean, other: Array<string> } }>, constraints: { __typename: 'TableConstraints', other: Array<string> } | null } } | { __typename: 'TextMetadataEntry', text: string, label: string, description: string | null } | { __typename: 'UrlMetadataEntry', url: string, label: string, description: string | null }> };

type LogsScrollingTableMessageFragment_StepWorkerStartingEvent_Fragment = { __typename: 'StepWorkerStartingEvent', message: string, eventType: DagsterEventType | null, timestamp: string, level: LogLevel, stepKey: string | null, label: string | null, description: string | null, markerStart: string | null, markerEnd: string | null, metadataEntries: Array<{ __typename: 'AssetMetadataEntry', label: string, description: string | null, assetKey: { __typename: 'AssetKey', path: Array<string> } } | { __typename: 'BoolMetadataEntry', boolValue: boolean | null, label: string, description: string | null } | { __typename: 'FloatMetadataEntry', floatValue: number | null, label: string, description: string | null } | { __typename: 'IntMetadataEntry', intValue: number | null, intRepr: string, label: string, description: string | null } | { __typename: 'JsonMetadataEntry', jsonString: string, label: string, description: string | null } | { __typename: 'MarkdownMetadataEntry', mdStr: string, label: string, description: string | null } | { __typename: 'NotebookMetadataEntry', path: string, label: string, description: string | null } | { __typename: 'NullMetadataEntry', label: string, description: string | null } | { __typename: 'PathMetadataEntry', path: string, label: string, description: string | null } | { __typename: 'PipelineRunMetadataEntry', runId: string, label: string, description: string | null } | { __typename: 'PythonArtifactMetadataEntry', module: string, name: string, label: string, description: string | null } | { __typename: 'TableMetadataEntry', label: string, description: string | null, table: { __typename: 'Table', records: Array<string>, schema: { __typename: 'TableSchema', columns: Array<{ __typename: 'TableColumn', name: string, description: string | null, type: string, constraints: { __typename: 'TableColumnConstraints', nullable: boolean, unique: boolean, other: Array<string> } }>, constraints: { __typename: 'TableConstraints', other: Array<string> } | null } } } | { __typename: 'TableSchemaMetadataEntry', label: string, description: string | null, schema: { __typename: 'TableSchema', columns: Array<{ __typename: 'TableColumn', name: string, description: string | null, type: string, constraints: { __typename: 'TableColumnConstraints', nullable: boolean, unique: boolean, other: Array<string> } }>, constraints: { __typename: 'TableConstraints', other: Array<string> } | null } } | { __typename: 'TextMetadataEntry', text: string, label: string, description: string | null } | { __typename: 'UrlMetadataEntry', url: string, label: string, description: string | null }> };

export type LogsScrollingTableMessageFragmentFragment = LogsScrollingTableMessageFragment_AlertFailureEvent_Fragment | LogsScrollingTableMessageFragment_AlertStartEvent_Fragment | LogsScrollingTableMessageFragment_AlertSuccessEvent_Fragment | LogsScrollingTableMessageFragment_AssetMaterializationPlannedEvent_Fragment | LogsScrollingTableMessageFragment_EngineEvent_Fragment | LogsScrollingTableMessageFragment_ExecutionStepFailureEvent_Fragment | LogsScrollingTableMessageFragment_ExecutionStepInputEvent_Fragment | LogsScrollingTableMessageFragment_ExecutionStepOutputEvent_Fragment | LogsScrollingTableMessageFragment_ExecutionStepRestartEvent_Fragment | LogsScrollingTableMessageFragment_ExecutionStepSkippedEvent_Fragment | LogsScrollingTableMessageFragment_ExecutionStepStartEvent_Fragment | LogsScrollingTableMessageFragment_ExecutionStepSuccessEvent_Fragment | LogsScrollingTableMessageFragment_ExecutionStepUpForRetryEvent_Fragment | LogsScrollingTableMessageFragment_HandledOutputEvent_Fragment | LogsScrollingTableMessageFragment_HookCompletedEvent_Fragment | LogsScrollingTableMessageFragment_HookErroredEvent_Fragment | LogsScrollingTableMessageFragment_HookSkippedEvent_Fragment | LogsScrollingTableMessageFragment_LoadedInputEvent_Fragment | LogsScrollingTableMessageFragment_LogMessageEvent_Fragment | LogsScrollingTableMessageFragment_LogsCapturedEvent_Fragment | LogsScrollingTableMessageFragment_MaterializationEvent_Fragment | LogsScrollingTableMessageFragment_ObjectStoreOperationEvent_Fragment | LogsScrollingTableMessageFragment_ObservationEvent_Fragment | LogsScrollingTableMessageFragment_ResourceInitFailureEvent_Fragment | LogsScrollingTableMessageFragment_ResourceInitStartedEvent_Fragment | LogsScrollingTableMessageFragment_ResourceInitSuccessEvent_Fragment | LogsScrollingTableMessageFragment_RunCanceledEvent_Fragment | LogsScrollingTableMessageFragment_RunCancelingEvent_Fragment | LogsScrollingTableMessageFragment_RunDequeuedEvent_Fragment | LogsScrollingTableMessageFragment_RunEnqueuedEvent_Fragment | LogsScrollingTableMessageFragment_RunFailureEvent_Fragment | LogsScrollingTableMessageFragment_RunStartEvent_Fragment | LogsScrollingTableMessageFragment_RunStartingEvent_Fragment | LogsScrollingTableMessageFragment_RunSuccessEvent_Fragment | LogsScrollingTableMessageFragment_StepExpectationResultEvent_Fragment | LogsScrollingTableMessageFragment_StepWorkerStartedEvent_Fragment | LogsScrollingTableMessageFragment_StepWorkerStartingEvent_Fragment;

export type RunActionButtonsTestQueryQueryVariables = Exact<{ [key: string]: never; }>;


export type RunActionButtonsTestQueryQuery = { __typename: 'DagitQuery', pipelineRunOrError: { __typename: 'PythonError' } | { __typename: 'Run', id: string, runConfigYaml: string, runId: string, canTerminate: boolean, status: RunStatus, mode: string, rootRunId: string | null, parentRunId: string | null, pipelineName: string, solidSelection: Array<string> | null, pipelineSnapshotId: string | null, parentPipelineSnapshotId: string | null, stepKeysToExecute: Array<string> | null, updateTime: number | null, startTime: number | null, endTime: number | null, tags: Array<{ __typename: 'PipelineTag', key: string, value: string }>, assets: Array<{ __typename: 'Asset', id: string, key: { __typename: 'AssetKey', path: Array<string> } }>, assetSelection: Array<{ __typename: 'AssetKey', path: Array<string> }> | null, executionPlan: { __typename: 'ExecutionPlan', artifactsPersisted: boolean, steps: Array<{ __typename: 'ExecutionStep', key: string, kind: StepKind, inputs: Array<{ __typename: 'ExecutionStepInput', dependsOn: Array<{ __typename: 'ExecutionStep', key: string, kind: StepKind }> }> }> } | null, stepStats: Array<{ __typename: 'RunStepStats', stepKey: string, status: StepEventStatus | null, startTime: number | null, endTime: number | null, attempts: Array<{ __typename: 'RunMarker', startTime: number | null, endTime: number | null }>, markers: Array<{ __typename: 'RunMarker', startTime: number | null, endTime: number | null }> }>, repositoryOrigin: { __typename: 'RepositoryOrigin', id: string, repositoryName: string, repositoryLocationName: string } | null } | { __typename: 'RunNotFoundError' } };

export type PipelineEnvironmentYamlQueryQueryVariables = Exact<{
  runId: Scalars['ID'];
}>;


export type PipelineEnvironmentYamlQueryQuery = { __typename: 'DagitQuery', pipelineRunOrError: { __typename: 'PythonError' } | { __typename: 'Run', id: string, pipelineName: string, pipelineSnapshotId: string | null, runConfigYaml: string, parentPipelineSnapshotId: string | null, repositoryOrigin: { __typename: 'RepositoryOrigin', id: string, repositoryName: string, repositoryLocationName: string } | null } | { __typename: 'RunNotFoundError' } };

export type RunDetailsTestQueryQueryVariables = Exact<{ [key: string]: never; }>;


export type RunDetailsTestQueryQuery = { __typename: 'DagitQuery', pipelineRunOrError: { __typename: 'PythonError' } | { __typename: 'Run', id: string, startTime: number | null, endTime: number | null, status: RunStatus } | { __typename: 'RunNotFoundError' } };

export type RunDetailsFragmentFragment = { __typename: 'Run', id: string, startTime: number | null, endTime: number | null, status: RunStatus };

export type RunFragmentForRepositoryMatchFragment = { __typename: 'Run', id: string, pipelineName: string, pipelineSnapshotId: string | null, parentPipelineSnapshotId: string | null, repositoryOrigin: { __typename: 'RepositoryOrigin', id: string, repositoryName: string, repositoryLocationName: string } | null };

export type RunFragmentFragment = { __typename: 'Run', id: string, runConfigYaml: string, runId: string, canTerminate: boolean, status: RunStatus, mode: string, rootRunId: string | null, parentRunId: string | null, pipelineName: string, solidSelection: Array<string> | null, pipelineSnapshotId: string | null, parentPipelineSnapshotId: string | null, stepKeysToExecute: Array<string> | null, updateTime: number | null, startTime: number | null, endTime: number | null, tags: Array<{ __typename: 'PipelineTag', key: string, value: string }>, assets: Array<{ __typename: 'Asset', id: string, key: { __typename: 'AssetKey', path: Array<string> } }>, assetSelection: Array<{ __typename: 'AssetKey', path: Array<string> }> | null, executionPlan: { __typename: 'ExecutionPlan', artifactsPersisted: boolean, steps: Array<{ __typename: 'ExecutionStep', key: string, kind: StepKind, inputs: Array<{ __typename: 'ExecutionStepInput', dependsOn: Array<{ __typename: 'ExecutionStep', key: string, kind: StepKind }> }> }> } | null, stepStats: Array<{ __typename: 'RunStepStats', stepKey: string, status: StepEventStatus | null, startTime: number | null, endTime: number | null, attempts: Array<{ __typename: 'RunMarker', startTime: number | null, endTime: number | null }>, markers: Array<{ __typename: 'RunMarker', startTime: number | null, endTime: number | null }> }>, repositoryOrigin: { __typename: 'RepositoryOrigin', id: string, repositoryName: string, repositoryLocationName: string } | null };

type RunDagsterRunEventFragment_AlertFailureEvent_Fragment = { __typename: 'AlertFailureEvent', message: string, timestamp: string, level: LogLevel, stepKey: string | null, eventType: DagsterEventType | null };

type RunDagsterRunEventFragment_AlertStartEvent_Fragment = { __typename: 'AlertStartEvent', message: string, timestamp: string, level: LogLevel, stepKey: string | null, eventType: DagsterEventType | null };

type RunDagsterRunEventFragment_AlertSuccessEvent_Fragment = { __typename: 'AlertSuccessEvent', message: string, timestamp: string, level: LogLevel, stepKey: string | null, eventType: DagsterEventType | null };

type RunDagsterRunEventFragment_AssetMaterializationPlannedEvent_Fragment = { __typename: 'AssetMaterializationPlannedEvent', message: string, timestamp: string, level: LogLevel, stepKey: string | null, eventType: DagsterEventType | null };

type RunDagsterRunEventFragment_EngineEvent_Fragment = { __typename: 'EngineEvent', message: string, timestamp: string, level: LogLevel, stepKey: string | null, markerStart: string | null, markerEnd: string | null, eventType: DagsterEventType | null, label: string | null, description: string | null, metadataEntries: Array<{ __typename: 'AssetMetadataEntry', label: string, description: string | null, assetKey: { __typename: 'AssetKey', path: Array<string> } } | { __typename: 'BoolMetadataEntry', boolValue: boolean | null, label: string, description: string | null } | { __typename: 'FloatMetadataEntry', floatValue: number | null, label: string, description: string | null } | { __typename: 'IntMetadataEntry', intValue: number | null, intRepr: string, label: string, description: string | null } | { __typename: 'JsonMetadataEntry', jsonString: string, label: string, description: string | null } | { __typename: 'MarkdownMetadataEntry', mdStr: string, label: string, description: string | null } | { __typename: 'NotebookMetadataEntry', path: string, label: string, description: string | null } | { __typename: 'NullMetadataEntry', label: string, description: string | null } | { __typename: 'PathMetadataEntry', path: string, label: string, description: string | null } | { __typename: 'PipelineRunMetadataEntry', runId: string, label: string, description: string | null } | { __typename: 'PythonArtifactMetadataEntry', module: string, name: string, label: string, description: string | null } | { __typename: 'TableMetadataEntry', label: string, description: string | null, table: { __typename: 'Table', records: Array<string>, schema: { __typename: 'TableSchema', columns: Array<{ __typename: 'TableColumn', name: string, description: string | null, type: string, constraints: { __typename: 'TableColumnConstraints', nullable: boolean, unique: boolean, other: Array<string> } }>, constraints: { __typename: 'TableConstraints', other: Array<string> } | null } } } | { __typename: 'TableSchemaMetadataEntry', label: string, description: string | null, schema: { __typename: 'TableSchema', columns: Array<{ __typename: 'TableColumn', name: string, description: string | null, type: string, constraints: { __typename: 'TableColumnConstraints', nullable: boolean, unique: boolean, other: Array<string> } }>, constraints: { __typename: 'TableConstraints', other: Array<string> } | null } } | { __typename: 'TextMetadataEntry', text: string, label: string, description: string | null } | { __typename: 'UrlMetadataEntry', url: string, label: string, description: string | null }>, error: { __typename: 'PythonError', message: string, stack: Array<string>, errorChain: Array<{ __typename: 'ErrorChainLink', isExplicitLink: boolean, error: { __typename: 'PythonError', message: string, stack: Array<string> } }> } | null };

type RunDagsterRunEventFragment_ExecutionStepFailureEvent_Fragment = { __typename: 'ExecutionStepFailureEvent', message: string, timestamp: string, level: LogLevel, stepKey: string | null, eventType: DagsterEventType | null, errorSource: ErrorSource | null, error: { __typename: 'PythonError', message: string, stack: Array<string>, errorChain: Array<{ __typename: 'ErrorChainLink', isExplicitLink: boolean, error: { __typename: 'PythonError', message: string, stack: Array<string> } }> } | null, failureMetadata: { __typename: 'FailureMetadata', metadataEntries: Array<{ __typename: 'AssetMetadataEntry', label: string, description: string | null, assetKey: { __typename: 'AssetKey', path: Array<string> } } | { __typename: 'BoolMetadataEntry', boolValue: boolean | null, label: string, description: string | null } | { __typename: 'FloatMetadataEntry', floatValue: number | null, label: string, description: string | null } | { __typename: 'IntMetadataEntry', intValue: number | null, intRepr: string, label: string, description: string | null } | { __typename: 'JsonMetadataEntry', jsonString: string, label: string, description: string | null } | { __typename: 'MarkdownMetadataEntry', mdStr: string, label: string, description: string | null } | { __typename: 'NotebookMetadataEntry', path: string, label: string, description: string | null } | { __typename: 'NullMetadataEntry', label: string, description: string | null } | { __typename: 'PathMetadataEntry', path: string, label: string, description: string | null } | { __typename: 'PipelineRunMetadataEntry', runId: string, label: string, description: string | null } | { __typename: 'PythonArtifactMetadataEntry', module: string, name: string, label: string, description: string | null } | { __typename: 'TableMetadataEntry', label: string, description: string | null, table: { __typename: 'Table', records: Array<string>, schema: { __typename: 'TableSchema', columns: Array<{ __typename: 'TableColumn', name: string, description: string | null, type: string, constraints: { __typename: 'TableColumnConstraints', nullable: boolean, unique: boolean, other: Array<string> } }>, constraints: { __typename: 'TableConstraints', other: Array<string> } | null } } } | { __typename: 'TableSchemaMetadataEntry', label: string, description: string | null, schema: { __typename: 'TableSchema', columns: Array<{ __typename: 'TableColumn', name: string, description: string | null, type: string, constraints: { __typename: 'TableColumnConstraints', nullable: boolean, unique: boolean, other: Array<string> } }>, constraints: { __typename: 'TableConstraints', other: Array<string> } | null } } | { __typename: 'TextMetadataEntry', text: string, label: string, description: string | null } | { __typename: 'UrlMetadataEntry', url: string, label: string, description: string | null }> } | null };

type RunDagsterRunEventFragment_ExecutionStepInputEvent_Fragment = { __typename: 'ExecutionStepInputEvent', message: string, timestamp: string, level: LogLevel, stepKey: string | null, eventType: DagsterEventType | null, inputName: string, typeCheck: { __typename: 'TypeCheck', label: string | null, description: string | null, success: boolean, metadataEntries: Array<{ __typename: 'AssetMetadataEntry', label: string, description: string | null, assetKey: { __typename: 'AssetKey', path: Array<string> } } | { __typename: 'BoolMetadataEntry', boolValue: boolean | null, label: string, description: string | null } | { __typename: 'FloatMetadataEntry', floatValue: number | null, label: string, description: string | null } | { __typename: 'IntMetadataEntry', intValue: number | null, intRepr: string, label: string, description: string | null } | { __typename: 'JsonMetadataEntry', jsonString: string, label: string, description: string | null } | { __typename: 'MarkdownMetadataEntry', mdStr: string, label: string, description: string | null } | { __typename: 'NotebookMetadataEntry', path: string, label: string, description: string | null } | { __typename: 'NullMetadataEntry', label: string, description: string | null } | { __typename: 'PathMetadataEntry', path: string, label: string, description: string | null } | { __typename: 'PipelineRunMetadataEntry', runId: string, label: string, description: string | null } | { __typename: 'PythonArtifactMetadataEntry', module: string, name: string, label: string, description: string | null } | { __typename: 'TableMetadataEntry', label: string, description: string | null, table: { __typename: 'Table', records: Array<string>, schema: { __typename: 'TableSchema', columns: Array<{ __typename: 'TableColumn', name: string, description: string | null, type: string, constraints: { __typename: 'TableColumnConstraints', nullable: boolean, unique: boolean, other: Array<string> } }>, constraints: { __typename: 'TableConstraints', other: Array<string> } | null } } } | { __typename: 'TableSchemaMetadataEntry', label: string, description: string | null, schema: { __typename: 'TableSchema', columns: Array<{ __typename: 'TableColumn', name: string, description: string | null, type: string, constraints: { __typename: 'TableColumnConstraints', nullable: boolean, unique: boolean, other: Array<string> } }>, constraints: { __typename: 'TableConstraints', other: Array<string> } | null } } | { __typename: 'TextMetadataEntry', text: string, label: string, description: string | null } | { __typename: 'UrlMetadataEntry', url: string, label: string, description: string | null }> } };

type RunDagsterRunEventFragment_ExecutionStepOutputEvent_Fragment = { __typename: 'ExecutionStepOutputEvent', message: string, timestamp: string, level: LogLevel, stepKey: string | null, eventType: DagsterEventType | null, label: string | null, description: string | null, outputName: string, metadataEntries: Array<{ __typename: 'AssetMetadataEntry', label: string, description: string | null, assetKey: { __typename: 'AssetKey', path: Array<string> } } | { __typename: 'BoolMetadataEntry', boolValue: boolean | null, label: string, description: string | null } | { __typename: 'FloatMetadataEntry', floatValue: number | null, label: string, description: string | null } | { __typename: 'IntMetadataEntry', intValue: number | null, intRepr: string, label: string, description: string | null } | { __typename: 'JsonMetadataEntry', jsonString: string, label: string, description: string | null } | { __typename: 'MarkdownMetadataEntry', mdStr: string, label: string, description: string | null } | { __typename: 'NotebookMetadataEntry', path: string, label: string, description: string | null } | { __typename: 'NullMetadataEntry', label: string, description: string | null } | { __typename: 'PathMetadataEntry', path: string, label: string, description: string | null } | { __typename: 'PipelineRunMetadataEntry', runId: string, label: string, description: string | null } | { __typename: 'PythonArtifactMetadataEntry', module: string, name: string, label: string, description: string | null } | { __typename: 'TableMetadataEntry', label: string, description: string | null, table: { __typename: 'Table', records: Array<string>, schema: { __typename: 'TableSchema', columns: Array<{ __typename: 'TableColumn', name: string, description: string | null, type: string, constraints: { __typename: 'TableColumnConstraints', nullable: boolean, unique: boolean, other: Array<string> } }>, constraints: { __typename: 'TableConstraints', other: Array<string> } | null } } } | { __typename: 'TableSchemaMetadataEntry', label: string, description: string | null, schema: { __typename: 'TableSchema', columns: Array<{ __typename: 'TableColumn', name: string, description: string | null, type: string, constraints: { __typename: 'TableColumnConstraints', nullable: boolean, unique: boolean, other: Array<string> } }>, constraints: { __typename: 'TableConstraints', other: Array<string> } | null } } | { __typename: 'TextMetadataEntry', text: string, label: string, description: string | null } | { __typename: 'UrlMetadataEntry', url: string, label: string, description: string | null }>, typeCheck: { __typename: 'TypeCheck', label: string | null, description: string | null, success: boolean, metadataEntries: Array<{ __typename: 'AssetMetadataEntry', label: string, description: string | null, assetKey: { __typename: 'AssetKey', path: Array<string> } } | { __typename: 'BoolMetadataEntry', boolValue: boolean | null, label: string, description: string | null } | { __typename: 'FloatMetadataEntry', floatValue: number | null, label: string, description: string | null } | { __typename: 'IntMetadataEntry', intValue: number | null, intRepr: string, label: string, description: string | null } | { __typename: 'JsonMetadataEntry', jsonString: string, label: string, description: string | null } | { __typename: 'MarkdownMetadataEntry', mdStr: string, label: string, description: string | null } | { __typename: 'NotebookMetadataEntry', path: string, label: string, description: string | null } | { __typename: 'NullMetadataEntry', label: string, description: string | null } | { __typename: 'PathMetadataEntry', path: string, label: string, description: string | null } | { __typename: 'PipelineRunMetadataEntry', runId: string, label: string, description: string | null } | { __typename: 'PythonArtifactMetadataEntry', module: string, name: string, label: string, description: string | null } | { __typename: 'TableMetadataEntry', label: string, description: string | null, table: { __typename: 'Table', records: Array<string>, schema: { __typename: 'TableSchema', columns: Array<{ __typename: 'TableColumn', name: string, description: string | null, type: string, constraints: { __typename: 'TableColumnConstraints', nullable: boolean, unique: boolean, other: Array<string> } }>, constraints: { __typename: 'TableConstraints', other: Array<string> } | null } } } | { __typename: 'TableSchemaMetadataEntry', label: string, description: string | null, schema: { __typename: 'TableSchema', columns: Array<{ __typename: 'TableColumn', name: string, description: string | null, type: string, constraints: { __typename: 'TableColumnConstraints', nullable: boolean, unique: boolean, other: Array<string> } }>, constraints: { __typename: 'TableConstraints', other: Array<string> } | null } } | { __typename: 'TextMetadataEntry', text: string, label: string, description: string | null } | { __typename: 'UrlMetadataEntry', url: string, label: string, description: string | null }> } };

type RunDagsterRunEventFragment_ExecutionStepRestartEvent_Fragment = { __typename: 'ExecutionStepRestartEvent', message: string, timestamp: string, level: LogLevel, stepKey: string | null, eventType: DagsterEventType | null };

type RunDagsterRunEventFragment_ExecutionStepSkippedEvent_Fragment = { __typename: 'ExecutionStepSkippedEvent', message: string, timestamp: string, level: LogLevel, stepKey: string | null, eventType: DagsterEventType | null };

type RunDagsterRunEventFragment_ExecutionStepStartEvent_Fragment = { __typename: 'ExecutionStepStartEvent', message: string, timestamp: string, level: LogLevel, stepKey: string | null, eventType: DagsterEventType | null };

type RunDagsterRunEventFragment_ExecutionStepSuccessEvent_Fragment = { __typename: 'ExecutionStepSuccessEvent', message: string, timestamp: string, level: LogLevel, stepKey: string | null, eventType: DagsterEventType | null };

type RunDagsterRunEventFragment_ExecutionStepUpForRetryEvent_Fragment = { __typename: 'ExecutionStepUpForRetryEvent', message: string, timestamp: string, level: LogLevel, stepKey: string | null, eventType: DagsterEventType | null, error: { __typename: 'PythonError', message: string, stack: Array<string>, errorChain: Array<{ __typename: 'ErrorChainLink', isExplicitLink: boolean, error: { __typename: 'PythonError', message: string, stack: Array<string> } }> } | null };

type RunDagsterRunEventFragment_HandledOutputEvent_Fragment = { __typename: 'HandledOutputEvent', message: string, timestamp: string, level: LogLevel, stepKey: string | null, eventType: DagsterEventType | null, label: string | null, description: string | null, outputName: string, managerKey: string, metadataEntries: Array<{ __typename: 'AssetMetadataEntry', label: string, description: string | null, assetKey: { __typename: 'AssetKey', path: Array<string> } } | { __typename: 'BoolMetadataEntry', boolValue: boolean | null, label: string, description: string | null } | { __typename: 'FloatMetadataEntry', floatValue: number | null, label: string, description: string | null } | { __typename: 'IntMetadataEntry', intValue: number | null, intRepr: string, label: string, description: string | null } | { __typename: 'JsonMetadataEntry', jsonString: string, label: string, description: string | null } | { __typename: 'MarkdownMetadataEntry', mdStr: string, label: string, description: string | null } | { __typename: 'NotebookMetadataEntry', path: string, label: string, description: string | null } | { __typename: 'NullMetadataEntry', label: string, description: string | null } | { __typename: 'PathMetadataEntry', path: string, label: string, description: string | null } | { __typename: 'PipelineRunMetadataEntry', runId: string, label: string, description: string | null } | { __typename: 'PythonArtifactMetadataEntry', module: string, name: string, label: string, description: string | null } | { __typename: 'TableMetadataEntry', label: string, description: string | null, table: { __typename: 'Table', records: Array<string>, schema: { __typename: 'TableSchema', columns: Array<{ __typename: 'TableColumn', name: string, description: string | null, type: string, constraints: { __typename: 'TableColumnConstraints', nullable: boolean, unique: boolean, other: Array<string> } }>, constraints: { __typename: 'TableConstraints', other: Array<string> } | null } } } | { __typename: 'TableSchemaMetadataEntry', label: string, description: string | null, schema: { __typename: 'TableSchema', columns: Array<{ __typename: 'TableColumn', name: string, description: string | null, type: string, constraints: { __typename: 'TableColumnConstraints', nullable: boolean, unique: boolean, other: Array<string> } }>, constraints: { __typename: 'TableConstraints', other: Array<string> } | null } } | { __typename: 'TextMetadataEntry', text: string, label: string, description: string | null } | { __typename: 'UrlMetadataEntry', url: string, label: string, description: string | null }> };

type RunDagsterRunEventFragment_HookCompletedEvent_Fragment = { __typename: 'HookCompletedEvent', message: string, timestamp: string, level: LogLevel, stepKey: string | null, eventType: DagsterEventType | null };

type RunDagsterRunEventFragment_HookErroredEvent_Fragment = { __typename: 'HookErroredEvent', message: string, timestamp: string, level: LogLevel, stepKey: string | null, eventType: DagsterEventType | null, error: { __typename: 'PythonError', message: string, stack: Array<string>, errorChain: Array<{ __typename: 'ErrorChainLink', isExplicitLink: boolean, error: { __typename: 'PythonError', message: string, stack: Array<string> } }> } | null };

type RunDagsterRunEventFragment_HookSkippedEvent_Fragment = { __typename: 'HookSkippedEvent', message: string, timestamp: string, level: LogLevel, stepKey: string | null, eventType: DagsterEventType | null };

type RunDagsterRunEventFragment_LoadedInputEvent_Fragment = { __typename: 'LoadedInputEvent', message: string, timestamp: string, level: LogLevel, stepKey: string | null, eventType: DagsterEventType | null, label: string | null, description: string | null, inputName: string, managerKey: string, upstreamOutputName: string | null, upstreamStepKey: string | null, metadataEntries: Array<{ __typename: 'AssetMetadataEntry', label: string, description: string | null, assetKey: { __typename: 'AssetKey', path: Array<string> } } | { __typename: 'BoolMetadataEntry', boolValue: boolean | null, label: string, description: string | null } | { __typename: 'FloatMetadataEntry', floatValue: number | null, label: string, description: string | null } | { __typename: 'IntMetadataEntry', intValue: number | null, intRepr: string, label: string, description: string | null } | { __typename: 'JsonMetadataEntry', jsonString: string, label: string, description: string | null } | { __typename: 'MarkdownMetadataEntry', mdStr: string, label: string, description: string | null } | { __typename: 'NotebookMetadataEntry', path: string, label: string, description: string | null } | { __typename: 'NullMetadataEntry', label: string, description: string | null } | { __typename: 'PathMetadataEntry', path: string, label: string, description: string | null } | { __typename: 'PipelineRunMetadataEntry', runId: string, label: string, description: string | null } | { __typename: 'PythonArtifactMetadataEntry', module: string, name: string, label: string, description: string | null } | { __typename: 'TableMetadataEntry', label: string, description: string | null, table: { __typename: 'Table', records: Array<string>, schema: { __typename: 'TableSchema', columns: Array<{ __typename: 'TableColumn', name: string, description: string | null, type: string, constraints: { __typename: 'TableColumnConstraints', nullable: boolean, unique: boolean, other: Array<string> } }>, constraints: { __typename: 'TableConstraints', other: Array<string> } | null } } } | { __typename: 'TableSchemaMetadataEntry', label: string, description: string | null, schema: { __typename: 'TableSchema', columns: Array<{ __typename: 'TableColumn', name: string, description: string | null, type: string, constraints: { __typename: 'TableColumnConstraints', nullable: boolean, unique: boolean, other: Array<string> } }>, constraints: { __typename: 'TableConstraints', other: Array<string> } | null } } | { __typename: 'TextMetadataEntry', text: string, label: string, description: string | null } | { __typename: 'UrlMetadataEntry', url: string, label: string, description: string | null }> };

type RunDagsterRunEventFragment_LogMessageEvent_Fragment = { __typename: 'LogMessageEvent', message: string, timestamp: string, level: LogLevel, stepKey: string | null, eventType: DagsterEventType | null };

type RunDagsterRunEventFragment_LogsCapturedEvent_Fragment = { __typename: 'LogsCapturedEvent', message: string, timestamp: string, level: LogLevel, stepKey: string | null, fileKey: string, stepKeys: Array<string> | null, pid: number | null, externalUrl: string | null, eventType: DagsterEventType | null };

type RunDagsterRunEventFragment_MaterializationEvent_Fragment = { __typename: 'MaterializationEvent', message: string, timestamp: string, level: LogLevel, stepKey: string | null, eventType: DagsterEventType | null, label: string | null, description: string | null, metadataEntries: Array<{ __typename: 'AssetMetadataEntry', label: string, description: string | null, assetKey: { __typename: 'AssetKey', path: Array<string> } } | { __typename: 'BoolMetadataEntry', boolValue: boolean | null, label: string, description: string | null } | { __typename: 'FloatMetadataEntry', floatValue: number | null, label: string, description: string | null } | { __typename: 'IntMetadataEntry', intValue: number | null, intRepr: string, label: string, description: string | null } | { __typename: 'JsonMetadataEntry', jsonString: string, label: string, description: string | null } | { __typename: 'MarkdownMetadataEntry', mdStr: string, label: string, description: string | null } | { __typename: 'NotebookMetadataEntry', path: string, label: string, description: string | null } | { __typename: 'NullMetadataEntry', label: string, description: string | null } | { __typename: 'PathMetadataEntry', path: string, label: string, description: string | null } | { __typename: 'PipelineRunMetadataEntry', runId: string, label: string, description: string | null } | { __typename: 'PythonArtifactMetadataEntry', module: string, name: string, label: string, description: string | null } | { __typename: 'TableMetadataEntry', label: string, description: string | null, table: { __typename: 'Table', records: Array<string>, schema: { __typename: 'TableSchema', columns: Array<{ __typename: 'TableColumn', name: string, description: string | null, type: string, constraints: { __typename: 'TableColumnConstraints', nullable: boolean, unique: boolean, other: Array<string> } }>, constraints: { __typename: 'TableConstraints', other: Array<string> } | null } } } | { __typename: 'TableSchemaMetadataEntry', label: string, description: string | null, schema: { __typename: 'TableSchema', columns: Array<{ __typename: 'TableColumn', name: string, description: string | null, type: string, constraints: { __typename: 'TableColumnConstraints', nullable: boolean, unique: boolean, other: Array<string> } }>, constraints: { __typename: 'TableConstraints', other: Array<string> } | null } } | { __typename: 'TextMetadataEntry', text: string, label: string, description: string | null } | { __typename: 'UrlMetadataEntry', url: string, label: string, description: string | null }>, assetKey: { __typename: 'AssetKey', path: Array<string> } | null };

type RunDagsterRunEventFragment_ObjectStoreOperationEvent_Fragment = { __typename: 'ObjectStoreOperationEvent', message: string, timestamp: string, level: LogLevel, stepKey: string | null, eventType: DagsterEventType | null, operationResult: { __typename: 'ObjectStoreOperationResult', op: ObjectStoreOperationType, metadataEntries: Array<{ __typename: 'AssetMetadataEntry', label: string, description: string | null, assetKey: { __typename: 'AssetKey', path: Array<string> } } | { __typename: 'BoolMetadataEntry', boolValue: boolean | null, label: string, description: string | null } | { __typename: 'FloatMetadataEntry', floatValue: number | null, label: string, description: string | null } | { __typename: 'IntMetadataEntry', intValue: number | null, intRepr: string, label: string, description: string | null } | { __typename: 'JsonMetadataEntry', jsonString: string, label: string, description: string | null } | { __typename: 'MarkdownMetadataEntry', mdStr: string, label: string, description: string | null } | { __typename: 'NotebookMetadataEntry', path: string, label: string, description: string | null } | { __typename: 'NullMetadataEntry', label: string, description: string | null } | { __typename: 'PathMetadataEntry', path: string, label: string, description: string | null } | { __typename: 'PipelineRunMetadataEntry', runId: string, label: string, description: string | null } | { __typename: 'PythonArtifactMetadataEntry', module: string, name: string, label: string, description: string | null } | { __typename: 'TableMetadataEntry', label: string, description: string | null, table: { __typename: 'Table', records: Array<string>, schema: { __typename: 'TableSchema', columns: Array<{ __typename: 'TableColumn', name: string, description: string | null, type: string, constraints: { __typename: 'TableColumnConstraints', nullable: boolean, unique: boolean, other: Array<string> } }>, constraints: { __typename: 'TableConstraints', other: Array<string> } | null } } } | { __typename: 'TableSchemaMetadataEntry', label: string, description: string | null, schema: { __typename: 'TableSchema', columns: Array<{ __typename: 'TableColumn', name: string, description: string | null, type: string, constraints: { __typename: 'TableColumnConstraints', nullable: boolean, unique: boolean, other: Array<string> } }>, constraints: { __typename: 'TableConstraints', other: Array<string> } | null } } | { __typename: 'TextMetadataEntry', text: string, label: string, description: string | null } | { __typename: 'UrlMetadataEntry', url: string, label: string, description: string | null }> } };

type RunDagsterRunEventFragment_ObservationEvent_Fragment = { __typename: 'ObservationEvent', message: string, timestamp: string, level: LogLevel, stepKey: string | null, eventType: DagsterEventType | null, label: string | null, description: string | null, metadataEntries: Array<{ __typename: 'AssetMetadataEntry', label: string, description: string | null, assetKey: { __typename: 'AssetKey', path: Array<string> } } | { __typename: 'BoolMetadataEntry', boolValue: boolean | null, label: string, description: string | null } | { __typename: 'FloatMetadataEntry', floatValue: number | null, label: string, description: string | null } | { __typename: 'IntMetadataEntry', intValue: number | null, intRepr: string, label: string, description: string | null } | { __typename: 'JsonMetadataEntry', jsonString: string, label: string, description: string | null } | { __typename: 'MarkdownMetadataEntry', mdStr: string, label: string, description: string | null } | { __typename: 'NotebookMetadataEntry', path: string, label: string, description: string | null } | { __typename: 'NullMetadataEntry', label: string, description: string | null } | { __typename: 'PathMetadataEntry', path: string, label: string, description: string | null } | { __typename: 'PipelineRunMetadataEntry', runId: string, label: string, description: string | null } | { __typename: 'PythonArtifactMetadataEntry', module: string, name: string, label: string, description: string | null } | { __typename: 'TableMetadataEntry', label: string, description: string | null, table: { __typename: 'Table', records: Array<string>, schema: { __typename: 'TableSchema', columns: Array<{ __typename: 'TableColumn', name: string, description: string | null, type: string, constraints: { __typename: 'TableColumnConstraints', nullable: boolean, unique: boolean, other: Array<string> } }>, constraints: { __typename: 'TableConstraints', other: Array<string> } | null } } } | { __typename: 'TableSchemaMetadataEntry', label: string, description: string | null, schema: { __typename: 'TableSchema', columns: Array<{ __typename: 'TableColumn', name: string, description: string | null, type: string, constraints: { __typename: 'TableColumnConstraints', nullable: boolean, unique: boolean, other: Array<string> } }>, constraints: { __typename: 'TableConstraints', other: Array<string> } | null } } | { __typename: 'TextMetadataEntry', text: string, label: string, description: string | null } | { __typename: 'UrlMetadataEntry', url: string, label: string, description: string | null }>, assetKey: { __typename: 'AssetKey', path: Array<string> } | null };

type RunDagsterRunEventFragment_ResourceInitFailureEvent_Fragment = { __typename: 'ResourceInitFailureEvent', message: string, timestamp: string, level: LogLevel, stepKey: string | null, markerStart: string | null, markerEnd: string | null, eventType: DagsterEventType | null, label: string | null, description: string | null, metadataEntries: Array<{ __typename: 'AssetMetadataEntry', label: string, description: string | null, assetKey: { __typename: 'AssetKey', path: Array<string> } } | { __typename: 'BoolMetadataEntry', boolValue: boolean | null, label: string, description: string | null } | { __typename: 'FloatMetadataEntry', floatValue: number | null, label: string, description: string | null } | { __typename: 'IntMetadataEntry', intValue: number | null, intRepr: string, label: string, description: string | null } | { __typename: 'JsonMetadataEntry', jsonString: string, label: string, description: string | null } | { __typename: 'MarkdownMetadataEntry', mdStr: string, label: string, description: string | null } | { __typename: 'NotebookMetadataEntry', path: string, label: string, description: string | null } | { __typename: 'NullMetadataEntry', label: string, description: string | null } | { __typename: 'PathMetadataEntry', path: string, label: string, description: string | null } | { __typename: 'PipelineRunMetadataEntry', runId: string, label: string, description: string | null } | { __typename: 'PythonArtifactMetadataEntry', module: string, name: string, label: string, description: string | null } | { __typename: 'TableMetadataEntry', label: string, description: string | null, table: { __typename: 'Table', records: Array<string>, schema: { __typename: 'TableSchema', columns: Array<{ __typename: 'TableColumn', name: string, description: string | null, type: string, constraints: { __typename: 'TableColumnConstraints', nullable: boolean, unique: boolean, other: Array<string> } }>, constraints: { __typename: 'TableConstraints', other: Array<string> } | null } } } | { __typename: 'TableSchemaMetadataEntry', label: string, description: string | null, schema: { __typename: 'TableSchema', columns: Array<{ __typename: 'TableColumn', name: string, description: string | null, type: string, constraints: { __typename: 'TableColumnConstraints', nullable: boolean, unique: boolean, other: Array<string> } }>, constraints: { __typename: 'TableConstraints', other: Array<string> } | null } } | { __typename: 'TextMetadataEntry', text: string, label: string, description: string | null } | { __typename: 'UrlMetadataEntry', url: string, label: string, description: string | null }>, error: { __typename: 'PythonError', message: string, stack: Array<string>, errorChain: Array<{ __typename: 'ErrorChainLink', isExplicitLink: boolean, error: { __typename: 'PythonError', message: string, stack: Array<string> } }> } | null };

type RunDagsterRunEventFragment_ResourceInitStartedEvent_Fragment = { __typename: 'ResourceInitStartedEvent', message: string, timestamp: string, level: LogLevel, stepKey: string | null, markerStart: string | null, markerEnd: string | null, eventType: DagsterEventType | null, label: string | null, description: string | null, metadataEntries: Array<{ __typename: 'AssetMetadataEntry', label: string, description: string | null, assetKey: { __typename: 'AssetKey', path: Array<string> } } | { __typename: 'BoolMetadataEntry', boolValue: boolean | null, label: string, description: string | null } | { __typename: 'FloatMetadataEntry', floatValue: number | null, label: string, description: string | null } | { __typename: 'IntMetadataEntry', intValue: number | null, intRepr: string, label: string, description: string | null } | { __typename: 'JsonMetadataEntry', jsonString: string, label: string, description: string | null } | { __typename: 'MarkdownMetadataEntry', mdStr: string, label: string, description: string | null } | { __typename: 'NotebookMetadataEntry', path: string, label: string, description: string | null } | { __typename: 'NullMetadataEntry', label: string, description: string | null } | { __typename: 'PathMetadataEntry', path: string, label: string, description: string | null } | { __typename: 'PipelineRunMetadataEntry', runId: string, label: string, description: string | null } | { __typename: 'PythonArtifactMetadataEntry', module: string, name: string, label: string, description: string | null } | { __typename: 'TableMetadataEntry', label: string, description: string | null, table: { __typename: 'Table', records: Array<string>, schema: { __typename: 'TableSchema', columns: Array<{ __typename: 'TableColumn', name: string, description: string | null, type: string, constraints: { __typename: 'TableColumnConstraints', nullable: boolean, unique: boolean, other: Array<string> } }>, constraints: { __typename: 'TableConstraints', other: Array<string> } | null } } } | { __typename: 'TableSchemaMetadataEntry', label: string, description: string | null, schema: { __typename: 'TableSchema', columns: Array<{ __typename: 'TableColumn', name: string, description: string | null, type: string, constraints: { __typename: 'TableColumnConstraints', nullable: boolean, unique: boolean, other: Array<string> } }>, constraints: { __typename: 'TableConstraints', other: Array<string> } | null } } | { __typename: 'TextMetadataEntry', text: string, label: string, description: string | null } | { __typename: 'UrlMetadataEntry', url: string, label: string, description: string | null }> };

type RunDagsterRunEventFragment_ResourceInitSuccessEvent_Fragment = { __typename: 'ResourceInitSuccessEvent', message: string, timestamp: string, level: LogLevel, stepKey: string | null, markerStart: string | null, markerEnd: string | null, eventType: DagsterEventType | null, label: string | null, description: string | null, metadataEntries: Array<{ __typename: 'AssetMetadataEntry', label: string, description: string | null, assetKey: { __typename: 'AssetKey', path: Array<string> } } | { __typename: 'BoolMetadataEntry', boolValue: boolean | null, label: string, description: string | null } | { __typename: 'FloatMetadataEntry', floatValue: number | null, label: string, description: string | null } | { __typename: 'IntMetadataEntry', intValue: number | null, intRepr: string, label: string, description: string | null } | { __typename: 'JsonMetadataEntry', jsonString: string, label: string, description: string | null } | { __typename: 'MarkdownMetadataEntry', mdStr: string, label: string, description: string | null } | { __typename: 'NotebookMetadataEntry', path: string, label: string, description: string | null } | { __typename: 'NullMetadataEntry', label: string, description: string | null } | { __typename: 'PathMetadataEntry', path: string, label: string, description: string | null } | { __typename: 'PipelineRunMetadataEntry', runId: string, label: string, description: string | null } | { __typename: 'PythonArtifactMetadataEntry', module: string, name: string, label: string, description: string | null } | { __typename: 'TableMetadataEntry', label: string, description: string | null, table: { __typename: 'Table', records: Array<string>, schema: { __typename: 'TableSchema', columns: Array<{ __typename: 'TableColumn', name: string, description: string | null, type: string, constraints: { __typename: 'TableColumnConstraints', nullable: boolean, unique: boolean, other: Array<string> } }>, constraints: { __typename: 'TableConstraints', other: Array<string> } | null } } } | { __typename: 'TableSchemaMetadataEntry', label: string, description: string | null, schema: { __typename: 'TableSchema', columns: Array<{ __typename: 'TableColumn', name: string, description: string | null, type: string, constraints: { __typename: 'TableColumnConstraints', nullable: boolean, unique: boolean, other: Array<string> } }>, constraints: { __typename: 'TableConstraints', other: Array<string> } | null } } | { __typename: 'TextMetadataEntry', text: string, label: string, description: string | null } | { __typename: 'UrlMetadataEntry', url: string, label: string, description: string | null }> };

type RunDagsterRunEventFragment_RunCanceledEvent_Fragment = { __typename: 'RunCanceledEvent', message: string, timestamp: string, level: LogLevel, stepKey: string | null, eventType: DagsterEventType | null };

type RunDagsterRunEventFragment_RunCancelingEvent_Fragment = { __typename: 'RunCancelingEvent', message: string, timestamp: string, level: LogLevel, stepKey: string | null, eventType: DagsterEventType | null };

type RunDagsterRunEventFragment_RunDequeuedEvent_Fragment = { __typename: 'RunDequeuedEvent', message: string, timestamp: string, level: LogLevel, stepKey: string | null, eventType: DagsterEventType | null };

type RunDagsterRunEventFragment_RunEnqueuedEvent_Fragment = { __typename: 'RunEnqueuedEvent', message: string, timestamp: string, level: LogLevel, stepKey: string | null, eventType: DagsterEventType | null };

type RunDagsterRunEventFragment_RunFailureEvent_Fragment = { __typename: 'RunFailureEvent', message: string, timestamp: string, level: LogLevel, stepKey: string | null, eventType: DagsterEventType | null, error: { __typename: 'PythonError', message: string, stack: Array<string>, errorChain: Array<{ __typename: 'ErrorChainLink', isExplicitLink: boolean, error: { __typename: 'PythonError', message: string, stack: Array<string> } }> } | null };

type RunDagsterRunEventFragment_RunStartEvent_Fragment = { __typename: 'RunStartEvent', message: string, timestamp: string, level: LogLevel, stepKey: string | null, eventType: DagsterEventType | null };

type RunDagsterRunEventFragment_RunStartingEvent_Fragment = { __typename: 'RunStartingEvent', message: string, timestamp: string, level: LogLevel, stepKey: string | null, eventType: DagsterEventType | null };

type RunDagsterRunEventFragment_RunSuccessEvent_Fragment = { __typename: 'RunSuccessEvent', message: string, timestamp: string, level: LogLevel, stepKey: string | null, eventType: DagsterEventType | null };

type RunDagsterRunEventFragment_StepExpectationResultEvent_Fragment = { __typename: 'StepExpectationResultEvent', message: string, timestamp: string, level: LogLevel, stepKey: string | null, eventType: DagsterEventType | null, expectationResult: { __typename: 'ExpectationResult', success: boolean, label: string | null, description: string | null, metadataEntries: Array<{ __typename: 'AssetMetadataEntry', label: string, description: string | null, assetKey: { __typename: 'AssetKey', path: Array<string> } } | { __typename: 'BoolMetadataEntry', boolValue: boolean | null, label: string, description: string | null } | { __typename: 'FloatMetadataEntry', floatValue: number | null, label: string, description: string | null } | { __typename: 'IntMetadataEntry', intValue: number | null, intRepr: string, label: string, description: string | null } | { __typename: 'JsonMetadataEntry', jsonString: string, label: string, description: string | null } | { __typename: 'MarkdownMetadataEntry', mdStr: string, label: string, description: string | null } | { __typename: 'NotebookMetadataEntry', path: string, label: string, description: string | null } | { __typename: 'NullMetadataEntry', label: string, description: string | null } | { __typename: 'PathMetadataEntry', path: string, label: string, description: string | null } | { __typename: 'PipelineRunMetadataEntry', runId: string, label: string, description: string | null } | { __typename: 'PythonArtifactMetadataEntry', module: string, name: string, label: string, description: string | null } | { __typename: 'TableMetadataEntry', label: string, description: string | null, table: { __typename: 'Table', records: Array<string>, schema: { __typename: 'TableSchema', columns: Array<{ __typename: 'TableColumn', name: string, description: string | null, type: string, constraints: { __typename: 'TableColumnConstraints', nullable: boolean, unique: boolean, other: Array<string> } }>, constraints: { __typename: 'TableConstraints', other: Array<string> } | null } } } | { __typename: 'TableSchemaMetadataEntry', label: string, description: string | null, schema: { __typename: 'TableSchema', columns: Array<{ __typename: 'TableColumn', name: string, description: string | null, type: string, constraints: { __typename: 'TableColumnConstraints', nullable: boolean, unique: boolean, other: Array<string> } }>, constraints: { __typename: 'TableConstraints', other: Array<string> } | null } } | { __typename: 'TextMetadataEntry', text: string, label: string, description: string | null } | { __typename: 'UrlMetadataEntry', url: string, label: string, description: string | null }> } };

type RunDagsterRunEventFragment_StepWorkerStartedEvent_Fragment = { __typename: 'StepWorkerStartedEvent', message: string, timestamp: string, level: LogLevel, stepKey: string | null, markerStart: string | null, markerEnd: string | null, eventType: DagsterEventType | null, label: string | null, description: string | null, metadataEntries: Array<{ __typename: 'AssetMetadataEntry', label: string, description: string | null, assetKey: { __typename: 'AssetKey', path: Array<string> } } | { __typename: 'BoolMetadataEntry', boolValue: boolean | null, label: string, description: string | null } | { __typename: 'FloatMetadataEntry', floatValue: number | null, label: string, description: string | null } | { __typename: 'IntMetadataEntry', intValue: number | null, intRepr: string, label: string, description: string | null } | { __typename: 'JsonMetadataEntry', jsonString: string, label: string, description: string | null } | { __typename: 'MarkdownMetadataEntry', mdStr: string, label: string, description: string | null } | { __typename: 'NotebookMetadataEntry', path: string, label: string, description: string | null } | { __typename: 'NullMetadataEntry', label: string, description: string | null } | { __typename: 'PathMetadataEntry', path: string, label: string, description: string | null } | { __typename: 'PipelineRunMetadataEntry', runId: string, label: string, description: string | null } | { __typename: 'PythonArtifactMetadataEntry', module: string, name: string, label: string, description: string | null } | { __typename: 'TableMetadataEntry', label: string, description: string | null, table: { __typename: 'Table', records: Array<string>, schema: { __typename: 'TableSchema', columns: Array<{ __typename: 'TableColumn', name: string, description: string | null, type: string, constraints: { __typename: 'TableColumnConstraints', nullable: boolean, unique: boolean, other: Array<string> } }>, constraints: { __typename: 'TableConstraints', other: Array<string> } | null } } } | { __typename: 'TableSchemaMetadataEntry', label: string, description: string | null, schema: { __typename: 'TableSchema', columns: Array<{ __typename: 'TableColumn', name: string, description: string | null, type: string, constraints: { __typename: 'TableColumnConstraints', nullable: boolean, unique: boolean, other: Array<string> } }>, constraints: { __typename: 'TableConstraints', other: Array<string> } | null } } | { __typename: 'TextMetadataEntry', text: string, label: string, description: string | null } | { __typename: 'UrlMetadataEntry', url: string, label: string, description: string | null }> };

type RunDagsterRunEventFragment_StepWorkerStartingEvent_Fragment = { __typename: 'StepWorkerStartingEvent', message: string, timestamp: string, level: LogLevel, stepKey: string | null, markerStart: string | null, markerEnd: string | null, eventType: DagsterEventType | null, label: string | null, description: string | null, metadataEntries: Array<{ __typename: 'AssetMetadataEntry', label: string, description: string | null, assetKey: { __typename: 'AssetKey', path: Array<string> } } | { __typename: 'BoolMetadataEntry', boolValue: boolean | null, label: string, description: string | null } | { __typename: 'FloatMetadataEntry', floatValue: number | null, label: string, description: string | null } | { __typename: 'IntMetadataEntry', intValue: number | null, intRepr: string, label: string, description: string | null } | { __typename: 'JsonMetadataEntry', jsonString: string, label: string, description: string | null } | { __typename: 'MarkdownMetadataEntry', mdStr: string, label: string, description: string | null } | { __typename: 'NotebookMetadataEntry', path: string, label: string, description: string | null } | { __typename: 'NullMetadataEntry', label: string, description: string | null } | { __typename: 'PathMetadataEntry', path: string, label: string, description: string | null } | { __typename: 'PipelineRunMetadataEntry', runId: string, label: string, description: string | null } | { __typename: 'PythonArtifactMetadataEntry', module: string, name: string, label: string, description: string | null } | { __typename: 'TableMetadataEntry', label: string, description: string | null, table: { __typename: 'Table', records: Array<string>, schema: { __typename: 'TableSchema', columns: Array<{ __typename: 'TableColumn', name: string, description: string | null, type: string, constraints: { __typename: 'TableColumnConstraints', nullable: boolean, unique: boolean, other: Array<string> } }>, constraints: { __typename: 'TableConstraints', other: Array<string> } | null } } } | { __typename: 'TableSchemaMetadataEntry', label: string, description: string | null, schema: { __typename: 'TableSchema', columns: Array<{ __typename: 'TableColumn', name: string, description: string | null, type: string, constraints: { __typename: 'TableColumnConstraints', nullable: boolean, unique: boolean, other: Array<string> } }>, constraints: { __typename: 'TableConstraints', other: Array<string> } | null } } | { __typename: 'TextMetadataEntry', text: string, label: string, description: string | null } | { __typename: 'UrlMetadataEntry', url: string, label: string, description: string | null }> };

export type RunDagsterRunEventFragmentFragment = RunDagsterRunEventFragment_AlertFailureEvent_Fragment | RunDagsterRunEventFragment_AlertStartEvent_Fragment | RunDagsterRunEventFragment_AlertSuccessEvent_Fragment | RunDagsterRunEventFragment_AssetMaterializationPlannedEvent_Fragment | RunDagsterRunEventFragment_EngineEvent_Fragment | RunDagsterRunEventFragment_ExecutionStepFailureEvent_Fragment | RunDagsterRunEventFragment_ExecutionStepInputEvent_Fragment | RunDagsterRunEventFragment_ExecutionStepOutputEvent_Fragment | RunDagsterRunEventFragment_ExecutionStepRestartEvent_Fragment | RunDagsterRunEventFragment_ExecutionStepSkippedEvent_Fragment | RunDagsterRunEventFragment_ExecutionStepStartEvent_Fragment | RunDagsterRunEventFragment_ExecutionStepSuccessEvent_Fragment | RunDagsterRunEventFragment_ExecutionStepUpForRetryEvent_Fragment | RunDagsterRunEventFragment_HandledOutputEvent_Fragment | RunDagsterRunEventFragment_HookCompletedEvent_Fragment | RunDagsterRunEventFragment_HookErroredEvent_Fragment | RunDagsterRunEventFragment_HookSkippedEvent_Fragment | RunDagsterRunEventFragment_LoadedInputEvent_Fragment | RunDagsterRunEventFragment_LogMessageEvent_Fragment | RunDagsterRunEventFragment_LogsCapturedEvent_Fragment | RunDagsterRunEventFragment_MaterializationEvent_Fragment | RunDagsterRunEventFragment_ObjectStoreOperationEvent_Fragment | RunDagsterRunEventFragment_ObservationEvent_Fragment | RunDagsterRunEventFragment_ResourceInitFailureEvent_Fragment | RunDagsterRunEventFragment_ResourceInitStartedEvent_Fragment | RunDagsterRunEventFragment_ResourceInitSuccessEvent_Fragment | RunDagsterRunEventFragment_RunCanceledEvent_Fragment | RunDagsterRunEventFragment_RunCancelingEvent_Fragment | RunDagsterRunEventFragment_RunDequeuedEvent_Fragment | RunDagsterRunEventFragment_RunEnqueuedEvent_Fragment | RunDagsterRunEventFragment_RunFailureEvent_Fragment | RunDagsterRunEventFragment_RunStartEvent_Fragment | RunDagsterRunEventFragment_RunStartingEvent_Fragment | RunDagsterRunEventFragment_RunSuccessEvent_Fragment | RunDagsterRunEventFragment_StepExpectationResultEvent_Fragment | RunDagsterRunEventFragment_StepWorkerStartedEvent_Fragment | RunDagsterRunEventFragment_StepWorkerStartingEvent_Fragment;

export type RunTabsCountQueryQueryVariables = Exact<{
  queuedFilter: RunsFilter;
  inProgressFilter: RunsFilter;
}>;


export type RunTabsCountQueryQuery = { __typename: 'DagitQuery', queuedCount: { __typename: 'InvalidPipelineRunsFilterError' } | { __typename: 'PythonError' } | { __typename: 'Runs', count: number | null }, inProgressCount: { __typename: 'InvalidPipelineRunsFilterError' } | { __typename: 'PythonError' } | { __typename: 'Runs', count: number | null } };

type RunMetadataProviderMessageFragment_AlertFailureEvent_Fragment = { __typename: 'AlertFailureEvent', message: string, timestamp: string, stepKey: string | null };

type RunMetadataProviderMessageFragment_AlertStartEvent_Fragment = { __typename: 'AlertStartEvent', message: string, timestamp: string, stepKey: string | null };

type RunMetadataProviderMessageFragment_AlertSuccessEvent_Fragment = { __typename: 'AlertSuccessEvent', message: string, timestamp: string, stepKey: string | null };

type RunMetadataProviderMessageFragment_AssetMaterializationPlannedEvent_Fragment = { __typename: 'AssetMaterializationPlannedEvent', message: string, timestamp: string, stepKey: string | null };

type RunMetadataProviderMessageFragment_EngineEvent_Fragment = { __typename: 'EngineEvent', message: string, timestamp: string, stepKey: string | null, markerStart: string | null, markerEnd: string | null };

type RunMetadataProviderMessageFragment_ExecutionStepFailureEvent_Fragment = { __typename: 'ExecutionStepFailureEvent', message: string, timestamp: string, stepKey: string | null };

type RunMetadataProviderMessageFragment_ExecutionStepInputEvent_Fragment = { __typename: 'ExecutionStepInputEvent', message: string, timestamp: string, stepKey: string | null };

type RunMetadataProviderMessageFragment_ExecutionStepOutputEvent_Fragment = { __typename: 'ExecutionStepOutputEvent', message: string, timestamp: string, stepKey: string | null };

type RunMetadataProviderMessageFragment_ExecutionStepRestartEvent_Fragment = { __typename: 'ExecutionStepRestartEvent', message: string, timestamp: string, stepKey: string | null };

type RunMetadataProviderMessageFragment_ExecutionStepSkippedEvent_Fragment = { __typename: 'ExecutionStepSkippedEvent', message: string, timestamp: string, stepKey: string | null };

type RunMetadataProviderMessageFragment_ExecutionStepStartEvent_Fragment = { __typename: 'ExecutionStepStartEvent', message: string, timestamp: string, stepKey: string | null };

type RunMetadataProviderMessageFragment_ExecutionStepSuccessEvent_Fragment = { __typename: 'ExecutionStepSuccessEvent', message: string, timestamp: string, stepKey: string | null };

type RunMetadataProviderMessageFragment_ExecutionStepUpForRetryEvent_Fragment = { __typename: 'ExecutionStepUpForRetryEvent', message: string, timestamp: string, stepKey: string | null };

type RunMetadataProviderMessageFragment_HandledOutputEvent_Fragment = { __typename: 'HandledOutputEvent', message: string, timestamp: string, stepKey: string | null };

type RunMetadataProviderMessageFragment_HookCompletedEvent_Fragment = { __typename: 'HookCompletedEvent', message: string, timestamp: string, stepKey: string | null };

type RunMetadataProviderMessageFragment_HookErroredEvent_Fragment = { __typename: 'HookErroredEvent', message: string, timestamp: string, stepKey: string | null };

type RunMetadataProviderMessageFragment_HookSkippedEvent_Fragment = { __typename: 'HookSkippedEvent', message: string, timestamp: string, stepKey: string | null };

type RunMetadataProviderMessageFragment_LoadedInputEvent_Fragment = { __typename: 'LoadedInputEvent', message: string, timestamp: string, stepKey: string | null };

type RunMetadataProviderMessageFragment_LogMessageEvent_Fragment = { __typename: 'LogMessageEvent', message: string, timestamp: string, stepKey: string | null };

type RunMetadataProviderMessageFragment_LogsCapturedEvent_Fragment = { __typename: 'LogsCapturedEvent', message: string, timestamp: string, stepKey: string | null, fileKey: string, stepKeys: Array<string> | null, pid: number | null, externalUrl: string | null };

type RunMetadataProviderMessageFragment_MaterializationEvent_Fragment = { __typename: 'MaterializationEvent', message: string, timestamp: string, stepKey: string | null };

type RunMetadataProviderMessageFragment_ObjectStoreOperationEvent_Fragment = { __typename: 'ObjectStoreOperationEvent', message: string, timestamp: string, stepKey: string | null, operationResult: { __typename: 'ObjectStoreOperationResult', op: ObjectStoreOperationType, metadataEntries: Array<{ __typename: 'AssetMetadataEntry', label: string, description: string | null, assetKey: { __typename: 'AssetKey', path: Array<string> } } | { __typename: 'BoolMetadataEntry', boolValue: boolean | null, label: string, description: string | null } | { __typename: 'FloatMetadataEntry', floatValue: number | null, label: string, description: string | null } | { __typename: 'IntMetadataEntry', intValue: number | null, intRepr: string, label: string, description: string | null } | { __typename: 'JsonMetadataEntry', jsonString: string, label: string, description: string | null } | { __typename: 'MarkdownMetadataEntry', mdStr: string, label: string, description: string | null } | { __typename: 'NotebookMetadataEntry', path: string, label: string, description: string | null } | { __typename: 'NullMetadataEntry', label: string, description: string | null } | { __typename: 'PathMetadataEntry', path: string, label: string, description: string | null } | { __typename: 'PipelineRunMetadataEntry', runId: string, label: string, description: string | null } | { __typename: 'PythonArtifactMetadataEntry', module: string, name: string, label: string, description: string | null } | { __typename: 'TableMetadataEntry', label: string, description: string | null, table: { __typename: 'Table', records: Array<string>, schema: { __typename: 'TableSchema', columns: Array<{ __typename: 'TableColumn', name: string, description: string | null, type: string, constraints: { __typename: 'TableColumnConstraints', nullable: boolean, unique: boolean, other: Array<string> } }>, constraints: { __typename: 'TableConstraints', other: Array<string> } | null } } } | { __typename: 'TableSchemaMetadataEntry', label: string, description: string | null, schema: { __typename: 'TableSchema', columns: Array<{ __typename: 'TableColumn', name: string, description: string | null, type: string, constraints: { __typename: 'TableColumnConstraints', nullable: boolean, unique: boolean, other: Array<string> } }>, constraints: { __typename: 'TableConstraints', other: Array<string> } | null } } | { __typename: 'TextMetadataEntry', text: string, label: string, description: string | null } | { __typename: 'UrlMetadataEntry', url: string, label: string, description: string | null }> } };

type RunMetadataProviderMessageFragment_ObservationEvent_Fragment = { __typename: 'ObservationEvent', message: string, timestamp: string, stepKey: string | null };

type RunMetadataProviderMessageFragment_ResourceInitFailureEvent_Fragment = { __typename: 'ResourceInitFailureEvent', message: string, timestamp: string, stepKey: string | null, markerStart: string | null, markerEnd: string | null };

type RunMetadataProviderMessageFragment_ResourceInitStartedEvent_Fragment = { __typename: 'ResourceInitStartedEvent', message: string, timestamp: string, stepKey: string | null, markerStart: string | null, markerEnd: string | null };

type RunMetadataProviderMessageFragment_ResourceInitSuccessEvent_Fragment = { __typename: 'ResourceInitSuccessEvent', message: string, timestamp: string, stepKey: string | null, markerStart: string | null, markerEnd: string | null };

type RunMetadataProviderMessageFragment_RunCanceledEvent_Fragment = { __typename: 'RunCanceledEvent', message: string, timestamp: string, stepKey: string | null };

type RunMetadataProviderMessageFragment_RunCancelingEvent_Fragment = { __typename: 'RunCancelingEvent', message: string, timestamp: string, stepKey: string | null };

type RunMetadataProviderMessageFragment_RunDequeuedEvent_Fragment = { __typename: 'RunDequeuedEvent', message: string, timestamp: string, stepKey: string | null };

type RunMetadataProviderMessageFragment_RunEnqueuedEvent_Fragment = { __typename: 'RunEnqueuedEvent', message: string, timestamp: string, stepKey: string | null };

type RunMetadataProviderMessageFragment_RunFailureEvent_Fragment = { __typename: 'RunFailureEvent', message: string, timestamp: string, stepKey: string | null };

type RunMetadataProviderMessageFragment_RunStartEvent_Fragment = { __typename: 'RunStartEvent', message: string, timestamp: string, stepKey: string | null };

type RunMetadataProviderMessageFragment_RunStartingEvent_Fragment = { __typename: 'RunStartingEvent', message: string, timestamp: string, stepKey: string | null };

type RunMetadataProviderMessageFragment_RunSuccessEvent_Fragment = { __typename: 'RunSuccessEvent', message: string, timestamp: string, stepKey: string | null };

type RunMetadataProviderMessageFragment_StepExpectationResultEvent_Fragment = { __typename: 'StepExpectationResultEvent', message: string, timestamp: string, stepKey: string | null };

type RunMetadataProviderMessageFragment_StepWorkerStartedEvent_Fragment = { __typename: 'StepWorkerStartedEvent', message: string, timestamp: string, stepKey: string | null, markerStart: string | null, markerEnd: string | null };

type RunMetadataProviderMessageFragment_StepWorkerStartingEvent_Fragment = { __typename: 'StepWorkerStartingEvent', message: string, timestamp: string, stepKey: string | null, markerStart: string | null, markerEnd: string | null };

export type RunMetadataProviderMessageFragmentFragment = RunMetadataProviderMessageFragment_AlertFailureEvent_Fragment | RunMetadataProviderMessageFragment_AlertStartEvent_Fragment | RunMetadataProviderMessageFragment_AlertSuccessEvent_Fragment | RunMetadataProviderMessageFragment_AssetMaterializationPlannedEvent_Fragment | RunMetadataProviderMessageFragment_EngineEvent_Fragment | RunMetadataProviderMessageFragment_ExecutionStepFailureEvent_Fragment | RunMetadataProviderMessageFragment_ExecutionStepInputEvent_Fragment | RunMetadataProviderMessageFragment_ExecutionStepOutputEvent_Fragment | RunMetadataProviderMessageFragment_ExecutionStepRestartEvent_Fragment | RunMetadataProviderMessageFragment_ExecutionStepSkippedEvent_Fragment | RunMetadataProviderMessageFragment_ExecutionStepStartEvent_Fragment | RunMetadataProviderMessageFragment_ExecutionStepSuccessEvent_Fragment | RunMetadataProviderMessageFragment_ExecutionStepUpForRetryEvent_Fragment | RunMetadataProviderMessageFragment_HandledOutputEvent_Fragment | RunMetadataProviderMessageFragment_HookCompletedEvent_Fragment | RunMetadataProviderMessageFragment_HookErroredEvent_Fragment | RunMetadataProviderMessageFragment_HookSkippedEvent_Fragment | RunMetadataProviderMessageFragment_LoadedInputEvent_Fragment | RunMetadataProviderMessageFragment_LogMessageEvent_Fragment | RunMetadataProviderMessageFragment_LogsCapturedEvent_Fragment | RunMetadataProviderMessageFragment_MaterializationEvent_Fragment | RunMetadataProviderMessageFragment_ObjectStoreOperationEvent_Fragment | RunMetadataProviderMessageFragment_ObservationEvent_Fragment | RunMetadataProviderMessageFragment_ResourceInitFailureEvent_Fragment | RunMetadataProviderMessageFragment_ResourceInitStartedEvent_Fragment | RunMetadataProviderMessageFragment_ResourceInitSuccessEvent_Fragment | RunMetadataProviderMessageFragment_RunCanceledEvent_Fragment | RunMetadataProviderMessageFragment_RunCancelingEvent_Fragment | RunMetadataProviderMessageFragment_RunDequeuedEvent_Fragment | RunMetadataProviderMessageFragment_RunEnqueuedEvent_Fragment | RunMetadataProviderMessageFragment_RunFailureEvent_Fragment | RunMetadataProviderMessageFragment_RunStartEvent_Fragment | RunMetadataProviderMessageFragment_RunStartingEvent_Fragment | RunMetadataProviderMessageFragment_RunSuccessEvent_Fragment | RunMetadataProviderMessageFragment_StepExpectationResultEvent_Fragment | RunMetadataProviderMessageFragment_StepWorkerStartedEvent_Fragment | RunMetadataProviderMessageFragment_StepWorkerStartingEvent_Fragment;

export type RunRootQueryQueryVariables = Exact<{
  runId: Scalars['ID'];
}>;


export type RunRootQueryQuery = { __typename: 'DagitQuery', pipelineRunOrError: { __typename: 'PythonError' } | { __typename: 'Run', id: string, runConfigYaml: string, runId: string, canTerminate: boolean, status: RunStatus, mode: string, rootRunId: string | null, parentRunId: string | null, pipelineName: string, solidSelection: Array<string> | null, pipelineSnapshotId: string | null, parentPipelineSnapshotId: string | null, stepKeysToExecute: Array<string> | null, updateTime: number | null, startTime: number | null, endTime: number | null, tags: Array<{ __typename: 'PipelineTag', key: string, value: string }>, assets: Array<{ __typename: 'Asset', id: string, key: { __typename: 'AssetKey', path: Array<string> } }>, assetSelection: Array<{ __typename: 'AssetKey', path: Array<string> }> | null, executionPlan: { __typename: 'ExecutionPlan', artifactsPersisted: boolean, steps: Array<{ __typename: 'ExecutionStep', key: string, kind: StepKind, inputs: Array<{ __typename: 'ExecutionStepInput', dependsOn: Array<{ __typename: 'ExecutionStep', key: string, kind: StepKind }> }> }> } | null, stepStats: Array<{ __typename: 'RunStepStats', stepKey: string, status: StepEventStatus | null, startTime: number | null, endTime: number | null, attempts: Array<{ __typename: 'RunMarker', startTime: number | null, endTime: number | null }>, markers: Array<{ __typename: 'RunMarker', startTime: number | null, endTime: number | null }> }>, repositoryOrigin: { __typename: 'RepositoryOrigin', id: string, repositoryName: string, repositoryLocationName: string } | null } | { __typename: 'RunNotFoundError' } };

export type RunStatsQueryQueryVariables = Exact<{
  runId: Scalars['ID'];
}>;


export type RunStatsQueryQuery = { __typename: 'DagitQuery', pipelineRunOrError: { __typename: 'PythonError', message: string, stack: Array<string>, errorChain: Array<{ __typename: 'ErrorChainLink', isExplicitLink: boolean, error: { __typename: 'PythonError', message: string, stack: Array<string> } }> } | { __typename: 'Run', id: string, runId: string, pipelineName: string, stats: { __typename: 'PythonError', message: string, stack: Array<string>, errorChain: Array<{ __typename: 'ErrorChainLink', isExplicitLink: boolean, error: { __typename: 'PythonError', message: string, stack: Array<string> } }> } | { __typename: 'RunStatsSnapshot', id: string, stepsSucceeded: number, stepsFailed: number, expectations: number, materializations: number } } | { __typename: 'RunNotFoundError', message: string } };

export type RunTableRunFragmentFragment = { __typename: 'Run', id: string, runId: string, status: RunStatus, stepKeysToExecute: Array<string> | null, canTerminate: boolean, mode: string, rootRunId: string | null, parentRunId: string | null, pipelineSnapshotId: string | null, parentPipelineSnapshotId: string | null, pipelineName: string, solidSelection: Array<string> | null, startTime: number | null, endTime: number | null, updateTime: number | null, repositoryOrigin: { __typename: 'RepositoryOrigin', id: string, repositoryName: string, repositoryLocationName: string } | null, assetSelection: Array<{ __typename: 'AssetKey', path: Array<string> }> | null, tags: Array<{ __typename: 'PipelineTag', key: string, value: string }> };

export type LaunchPipelineExecutionMutationVariables = Exact<{
  executionParams: ExecutionParams;
}>;


export type LaunchPipelineExecutionMutation = { __typename: 'DagitMutation', launchPipelineExecution: { __typename: 'ConflictingExecutionParamsError' } | { __typename: 'InvalidOutputError' } | { __typename: 'InvalidStepError' } | { __typename: 'InvalidSubsetError', message: string } | { __typename: 'LaunchRunSuccess', run: { __typename: 'Run', id: string, runId: string, pipelineName: string } } | { __typename: 'NoModeProvidedError' } | { __typename: 'PipelineNotFoundError', message: string } | { __typename: 'PresetNotFoundError' } | { __typename: 'PythonError', message: string, stack: Array<string>, errorChain: Array<{ __typename: 'ErrorChainLink', isExplicitLink: boolean, error: { __typename: 'PythonError', message: string, stack: Array<string> } }> } | { __typename: 'RunConfigValidationInvalid', errors: Array<{ __typename: 'FieldNotDefinedConfigError', message: string } | { __typename: 'FieldsNotDefinedConfigError', message: string } | { __typename: 'MissingFieldConfigError', message: string } | { __typename: 'MissingFieldsConfigError', message: string } | { __typename: 'RuntimeMismatchConfigError', message: string } | { __typename: 'SelectorTypeConfigError', message: string }> } | { __typename: 'RunConflict' } | { __typename: 'UnauthorizedError' } };

export type DeleteMutationVariables = Exact<{
  runId: Scalars['String'];
}>;


export type DeleteMutation = { __typename: 'DagitMutation', deletePipelineRun: { __typename: 'DeletePipelineRunSuccess' } | { __typename: 'PythonError', message: string, stack: Array<string>, errorChain: Array<{ __typename: 'ErrorChainLink', isExplicitLink: boolean, error: { __typename: 'PythonError', message: string, stack: Array<string> } }> } | { __typename: 'RunNotFoundError', message: string } | { __typename: 'UnauthorizedError', message: string } };

export type TerminateMutationVariables = Exact<{
  runId: Scalars['String'];
  terminatePolicy?: InputMaybe<TerminateRunPolicy>;
}>;


export type TerminateMutation = { __typename: 'DagitMutation', terminatePipelineExecution: { __typename: 'PythonError', message: string, stack: Array<string>, errorChain: Array<{ __typename: 'ErrorChainLink', isExplicitLink: boolean, error: { __typename: 'PythonError', message: string, stack: Array<string> } }> } | { __typename: 'RunNotFoundError', message: string } | { __typename: 'TerminateRunFailure', message: string } | { __typename: 'TerminateRunSuccess', run: { __typename: 'Run', id: string, runId: string, canTerminate: boolean } } | { __typename: 'UnauthorizedError', message: string } };

export type LaunchPipelineReexecutionMutationVariables = Exact<{
  executionParams?: InputMaybe<ExecutionParams>;
  reexecutionParams?: InputMaybe<ReexecutionParams>;
}>;


export type LaunchPipelineReexecutionMutation = { __typename: 'DagitMutation', launchPipelineReexecution: { __typename: 'ConflictingExecutionParamsError' } | { __typename: 'InvalidOutputError' } | { __typename: 'InvalidStepError' } | { __typename: 'InvalidSubsetError', message: string } | { __typename: 'LaunchRunSuccess', run: { __typename: 'Run', id: string, runId: string, pipelineName: string, rootRunId: string | null, parentRunId: string | null } } | { __typename: 'NoModeProvidedError' } | { __typename: 'PipelineNotFoundError', message: string } | { __typename: 'PresetNotFoundError' } | { __typename: 'PythonError', message: string, stack: Array<string>, errorChain: Array<{ __typename: 'ErrorChainLink', isExplicitLink: boolean, error: { __typename: 'PythonError', message: string, stack: Array<string> } }> } | { __typename: 'RunConfigValidationInvalid', errors: Array<{ __typename: 'FieldNotDefinedConfigError', message: string } | { __typename: 'FieldsNotDefinedConfigError', message: string } | { __typename: 'MissingFieldConfigError', message: string } | { __typename: 'MissingFieldsConfigError', message: string } | { __typename: 'RuntimeMismatchConfigError', message: string } | { __typename: 'SelectorTypeConfigError', message: string }> } | { __typename: 'RunConflict' } | { __typename: 'UnauthorizedError' } };

export type RunTimeFragmentFragment = { __typename: 'Run', id: string, runId: string, status: RunStatus, startTime: number | null, endTime: number | null, updateTime: number | null };

export type RunsRootQueryQueryVariables = Exact<{
  limit?: InputMaybe<Scalars['Int']>;
  cursor?: InputMaybe<Scalars['String']>;
  filter: RunsFilter;
}>;


export type RunsRootQueryQuery = { __typename: 'DagitQuery', pipelineRunsOrError: { __typename: 'InvalidPipelineRunsFilterError', message: string } | { __typename: 'PythonError', message: string, stack: Array<string>, errorChain: Array<{ __typename: 'ErrorChainLink', isExplicitLink: boolean, error: { __typename: 'PythonError', message: string, stack: Array<string> } }> } | { __typename: 'Runs', results: Array<{ __typename: 'Run', id: string, runId: string, status: RunStatus, stepKeysToExecute: Array<string> | null, canTerminate: boolean, mode: string, rootRunId: string | null, parentRunId: string | null, pipelineSnapshotId: string | null, parentPipelineSnapshotId: string | null, pipelineName: string, solidSelection: Array<string> | null, startTime: number | null, endTime: number | null, updateTime: number | null, repositoryOrigin: { __typename: 'RepositoryOrigin', id: string, repositoryName: string, repositoryLocationName: string } | null, assetSelection: Array<{ __typename: 'AssetKey', path: Array<string> }> | null, tags: Array<{ __typename: 'PipelineTag', key: string, value: string }> }> } };

export type QueueDaemonStatusQueryQueryVariables = Exact<{ [key: string]: never; }>;


export type QueueDaemonStatusQueryQuery = { __typename: 'DagitQuery', instance: { __typename: 'Instance', daemonHealth: { __typename: 'DaemonHealth', id: string, daemonStatus: { __typename: 'DaemonStatus', id: string, daemonType: string, healthy: boolean | null, required: boolean } } } };

export type SchedulerInfoQueryQueryVariables = Exact<{ [key: string]: never; }>;


export type SchedulerInfoQueryQuery = { __typename: 'DagitQuery', instance: { __typename: 'Instance', hasInfo: boolean, daemonHealth: { __typename: 'DaemonHealth', id: string, allDaemonStatuses: Array<{ __typename: 'DaemonStatus', id: string, daemonType: string, required: boolean, healthy: boolean | null, lastHeartbeatTime: number | null, lastHeartbeatErrors: Array<{ __typename: 'PythonError', message: string, stack: Array<string>, errorChain: Array<{ __typename: 'ErrorChainLink', isExplicitLink: boolean, error: { __typename: 'PythonError', message: string, stack: Array<string> } }> }> }> } }, repositoriesOrError: { __typename: 'PythonError', message: string, stack: Array<string>, errorChain: Array<{ __typename: 'ErrorChainLink', isExplicitLink: boolean, error: { __typename: 'PythonError', message: string, stack: Array<string> } }> } | { __typename: 'RepositoryConnection', nodes: Array<{ __typename: 'Repository', id: string, name: string, location: { __typename: 'RepositoryLocation', id: string, name: string }, schedules: Array<{ __typename: 'Schedule', id: string, name: string, cronSchedule: string, executionTimezone: string | null, pipelineName: string, solidSelection: Array<string | null> | null, mode: string, description: string | null, partitionSet: { __typename: 'PartitionSet', id: string, name: string } | null, scheduleState: { __typename: 'InstigationState', id: string, selectorId: string, name: string, instigationType: InstigationType, status: InstigationStatus, repositoryName: string, repositoryLocationName: string, runningCount: number, typeSpecificData: { __typename: 'ScheduleData', cronSchedule: string } | { __typename: 'SensorData', lastRunKey: string | null, lastCursor: string | null } | null, runs: Array<{ __typename: 'Run', id: string, runId: string, status: RunStatus, startTime: number | null, endTime: number | null, updateTime: number | null }>, ticks: Array<{ __typename: 'InstigationTick', id: string, cursor: string | null, status: InstigationTickStatus, timestamp: number, skipReason: string | null, runIds: Array<string>, runKeys: Array<string>, error: { __typename: 'PythonError', message: string, stack: Array<string>, errorChain: Array<{ __typename: 'ErrorChainLink', isExplicitLink: boolean, error: { __typename: 'PythonError', message: string, stack: Array<string> } }> } | null }> }, futureTicks: { __typename: 'FutureInstigationTicks', results: Array<{ __typename: 'FutureInstigationTick', timestamp: number }> } }>, displayMetadata: Array<{ __typename: 'RepositoryMetadata', key: string, value: string }> }> } };

export type ComputeLogsSubscriptionSubscriptionVariables = Exact<{
  runId: Scalars['ID'];
  stepKey: Scalars['String'];
  ioType: ComputeIoType;
  cursor?: InputMaybe<Scalars['String']>;
}>;


export type ComputeLogsSubscriptionSubscription = { __typename: 'DagitSubscription', computeLogs: { __typename: 'ComputeLogFile', path: string, cursor: number, data: string | null, downloadUrl: string | null } };

export type ComputeLogForSubscriptionFragment = { __typename: 'ComputeLogFile', path: string, cursor: number, data: string | null, downloadUrl: string | null };

export type RunTimelineQueryQueryVariables = Exact<{
  inProgressFilter: RunsFilter;
  terminatedFilter: RunsFilter;
  tickCursor?: InputMaybe<Scalars['Float']>;
  ticksUntil?: InputMaybe<Scalars['Float']>;
}>;


export type RunTimelineQueryQuery = { __typename: 'DagitQuery', unterminated: { __typename: 'InvalidPipelineRunsFilterError' } | { __typename: 'PythonError' } | { __typename: 'Runs', results: Array<{ __typename: 'Run', id: string, pipelineName: string, runId: string, status: RunStatus, startTime: number | null, endTime: number | null, updateTime: number | null, repositoryOrigin: { __typename: 'RepositoryOrigin', id: string, repositoryName: string, repositoryLocationName: string } | null }> }, terminated: { __typename: 'InvalidPipelineRunsFilterError' } | { __typename: 'PythonError' } | { __typename: 'Runs', results: Array<{ __typename: 'Run', id: string, pipelineName: string, runId: string, status: RunStatus, startTime: number | null, endTime: number | null, updateTime: number | null, repositoryOrigin: { __typename: 'RepositoryOrigin', id: string, repositoryName: string, repositoryLocationName: string } | null }> }, workspaceOrError: { __typename: 'PythonError' } | { __typename: 'Workspace', locationEntries: Array<{ __typename: 'WorkspaceLocationEntry', id: string, name: string, loadStatus: RepositoryLocationLoadStatus, displayMetadata: Array<{ __typename: 'RepositoryMetadata', key: string, value: string }>, locationOrLoadError: { __typename: 'PythonError' } | { __typename: 'RepositoryLocation', id: string, name: string, repositories: Array<{ __typename: 'Repository', id: string, name: string, pipelines: Array<{ __typename: 'Pipeline', id: string, name: string, isJob: boolean }>, schedules: Array<{ __typename: 'Schedule', id: string, name: string, pipelineName: string, executionTimezone: string | null, scheduleState: { __typename: 'InstigationState', id: string, status: InstigationStatus }, futureTicks: { __typename: 'FutureInstigationTicks', results: Array<{ __typename: 'FutureInstigationTick', timestamp: number }> } }> }> } | null }> } };

export type StartThisScheduleMutationVariables = Exact<{
  scheduleSelector: ScheduleSelector;
}>;


export type StartThisScheduleMutation = { __typename: 'DagitMutation', startSchedule: { __typename: 'PythonError', message: string, stack: Array<string>, errorChain: Array<{ __typename: 'ErrorChainLink', isExplicitLink: boolean, error: { __typename: 'PythonError', message: string, stack: Array<string> } }> } | { __typename: 'ScheduleStateResult', scheduleState: { __typename: 'InstigationState', id: string, status: InstigationStatus, runningCount: number } } | { __typename: 'UnauthorizedError' } };

export type StopScheduleMutationVariables = Exact<{
  scheduleOriginId: Scalars['String'];
  scheduleSelectorId: Scalars['String'];
}>;


export type StopScheduleMutation = { __typename: 'DagitMutation', stopRunningSchedule: { __typename: 'PythonError', message: string, stack: Array<string>, errorChain: Array<{ __typename: 'ErrorChainLink', isExplicitLink: boolean, error: { __typename: 'PythonError', message: string, stack: Array<string> } }> } | { __typename: 'ScheduleStateResult', scheduleState: { __typename: 'InstigationState', id: string, status: InstigationStatus, runningCount: number } } | { __typename: 'UnauthorizedError' } };

export type SchedulePartitionStatusQueryQueryVariables = Exact<{
  scheduleSelector: ScheduleSelector;
}>;


export type SchedulePartitionStatusQueryQuery = { __typename: 'DagitQuery', scheduleOrError: { __typename: 'PythonError' } | { __typename: 'Schedule', id: string, mode: string, pipelineName: string, partitionSet: { __typename: 'PartitionSet', id: string, name: string, partitionStatusesOrError: { __typename: 'PartitionStatuses', results: Array<{ __typename: 'PartitionStatus', id: string, partitionName: string, runStatus: RunStatus | null }> } | { __typename: 'PythonError' } } | null } | { __typename: 'ScheduleNotFoundError' } };

export type SchedulePartitionStatusFragmentFragment = { __typename: 'Schedule', id: string, mode: string, pipelineName: string, partitionSet: { __typename: 'PartitionSet', id: string, name: string, partitionStatusesOrError: { __typename: 'PartitionStatuses', results: Array<{ __typename: 'PartitionStatus', id: string, partitionName: string, runStatus: RunStatus | null }> } | { __typename: 'PythonError' } } | null };

export type SchedulePartitionStatusResultFragment = { __typename: 'PartitionStatus', id: string, partitionName: string, runStatus: RunStatus | null };

export type ScheduleRootQueryQueryVariables = Exact<{
  scheduleSelector: ScheduleSelector;
}>;


export type ScheduleRootQueryQuery = { __typename: 'DagitQuery', scheduleOrError: { __typename: 'PythonError', message: string, stack: Array<string>, errorChain: Array<{ __typename: 'ErrorChainLink', isExplicitLink: boolean, error: { __typename: 'PythonError', message: string, stack: Array<string> } }> } | { __typename: 'Schedule', id: string, name: string, cronSchedule: string, executionTimezone: string | null, pipelineName: string, solidSelection: Array<string | null> | null, mode: string, description: string | null, partitionSet: { __typename: 'PartitionSet', id: string, name: string } | null, scheduleState: { __typename: 'InstigationState', id: string, selectorId: string, name: string, instigationType: InstigationType, status: InstigationStatus, repositoryName: string, repositoryLocationName: string, runningCount: number, typeSpecificData: { __typename: 'ScheduleData', cronSchedule: string } | { __typename: 'SensorData', lastRunKey: string | null, lastCursor: string | null } | null, runs: Array<{ __typename: 'Run', id: string, runId: string, status: RunStatus, startTime: number | null, endTime: number | null, updateTime: number | null }>, ticks: Array<{ __typename: 'InstigationTick', id: string, cursor: string | null, status: InstigationTickStatus, timestamp: number, skipReason: string | null, runIds: Array<string>, runKeys: Array<string>, error: { __typename: 'PythonError', message: string, stack: Array<string>, errorChain: Array<{ __typename: 'ErrorChainLink', isExplicitLink: boolean, error: { __typename: 'PythonError', message: string, stack: Array<string> } }> } | null }> }, futureTicks: { __typename: 'FutureInstigationTicks', results: Array<{ __typename: 'FutureInstigationTick', timestamp: number }> } } | { __typename: 'ScheduleNotFoundError', message: string }, instance: { __typename: 'Instance', hasInfo: boolean, daemonHealth: { __typename: 'DaemonHealth', id: string, daemonStatus: { __typename: 'DaemonStatus', id: string, healthy: boolean | null }, allDaemonStatuses: Array<{ __typename: 'DaemonStatus', id: string, daemonType: string, required: boolean, healthy: boolean | null, lastHeartbeatTime: number | null, lastHeartbeatErrors: Array<{ __typename: 'PythonError', message: string, stack: Array<string>, errorChain: Array<{ __typename: 'ErrorChainLink', isExplicitLink: boolean, error: { __typename: 'PythonError', message: string, stack: Array<string> } }> }> }> } } };

export type PreviousRunsForScheduleQueryQueryVariables = Exact<{
  filter?: InputMaybe<RunsFilter>;
  limit?: InputMaybe<Scalars['Int']>;
}>;


export type PreviousRunsForScheduleQueryQuery = { __typename: 'DagitQuery', pipelineRunsOrError: { __typename: 'InvalidPipelineRunsFilterError', message: string } | { __typename: 'PythonError', message: string } | { __typename: 'Runs', results: Array<{ __typename: 'Run', id: string, runId: string, status: RunStatus, stepKeysToExecute: Array<string> | null, canTerminate: boolean, mode: string, rootRunId: string | null, parentRunId: string | null, pipelineSnapshotId: string | null, parentPipelineSnapshotId: string | null, pipelineName: string, solidSelection: Array<string> | null, startTime: number | null, endTime: number | null, updateTime: number | null, repositoryOrigin: { __typename: 'RepositoryOrigin', id: string, repositoryName: string, repositoryLocationName: string } | null, assetSelection: Array<{ __typename: 'AssetKey', path: Array<string> }> | null, tags: Array<{ __typename: 'PipelineTag', key: string, value: string }> }> } };

export type ScheduleSwitchFragmentFragment = { __typename: 'Schedule', id: string, name: string, cronSchedule: string, executionTimezone: string | null, scheduleState: { __typename: 'InstigationState', id: string, selectorId: string, status: InstigationStatus } };

export type SchedulesRootQueryQueryVariables = Exact<{
  repositorySelector: RepositorySelector;
  instigationType: InstigationType;
}>;


export type SchedulesRootQueryQuery = { __typename: 'DagitQuery', repositoryOrError: { __typename: 'PythonError', message: string, stack: Array<string>, errorChain: Array<{ __typename: 'ErrorChainLink', isExplicitLink: boolean, error: { __typename: 'PythonError', message: string, stack: Array<string> } }> } | { __typename: 'Repository', id: string, name: string, location: { __typename: 'RepositoryLocation', id: string, name: string }, schedules: Array<{ __typename: 'Schedule', id: string, name: string, cronSchedule: string, executionTimezone: string | null, pipelineName: string, solidSelection: Array<string | null> | null, mode: string, description: string | null, partitionSet: { __typename: 'PartitionSet', id: string, name: string } | null, scheduleState: { __typename: 'InstigationState', id: string, selectorId: string, name: string, instigationType: InstigationType, status: InstigationStatus, repositoryName: string, repositoryLocationName: string, runningCount: number, typeSpecificData: { __typename: 'ScheduleData', cronSchedule: string } | { __typename: 'SensorData', lastRunKey: string | null, lastCursor: string | null } | null, runs: Array<{ __typename: 'Run', id: string, runId: string, status: RunStatus, startTime: number | null, endTime: number | null, updateTime: number | null }>, ticks: Array<{ __typename: 'InstigationTick', id: string, cursor: string | null, status: InstigationTickStatus, timestamp: number, skipReason: string | null, runIds: Array<string>, runKeys: Array<string>, error: { __typename: 'PythonError', message: string, stack: Array<string>, errorChain: Array<{ __typename: 'ErrorChainLink', isExplicitLink: boolean, error: { __typename: 'PythonError', message: string, stack: Array<string> } }> } | null }> }, futureTicks: { __typename: 'FutureInstigationTicks', results: Array<{ __typename: 'FutureInstigationTick', timestamp: number }> } }>, displayMetadata: Array<{ __typename: 'RepositoryMetadata', key: string, value: string }> } | { __typename: 'RepositoryNotFoundError' }, unloadableInstigationStatesOrError: { __typename: 'InstigationStates', results: Array<{ __typename: 'InstigationState', id: string, selectorId: string, name: string, instigationType: InstigationType, status: InstigationStatus, repositoryName: string, repositoryLocationName: string, runningCount: number, typeSpecificData: { __typename: 'ScheduleData', cronSchedule: string } | { __typename: 'SensorData', lastRunKey: string | null, lastCursor: string | null } | null, runs: Array<{ __typename: 'Run', id: string, runId: string, status: RunStatus, startTime: number | null, endTime: number | null, updateTime: number | null }>, ticks: Array<{ __typename: 'InstigationTick', id: string, cursor: string | null, status: InstigationTickStatus, timestamp: number, skipReason: string | null, runIds: Array<string>, runKeys: Array<string>, error: { __typename: 'PythonError', message: string, stack: Array<string>, errorChain: Array<{ __typename: 'ErrorChainLink', isExplicitLink: boolean, error: { __typename: 'PythonError', message: string, stack: Array<string> } }> } | null }> }> } | { __typename: 'PythonError', message: string, stack: Array<string>, errorChain: Array<{ __typename: 'ErrorChainLink', isExplicitLink: boolean, error: { __typename: 'PythonError', message: string, stack: Array<string> } }> }, instance: { __typename: 'Instance', hasInfo: boolean, daemonHealth: { __typename: 'DaemonHealth', id: string, allDaemonStatuses: Array<{ __typename: 'DaemonStatus', id: string, daemonType: string, required: boolean, healthy: boolean | null, lastHeartbeatTime: number | null, lastHeartbeatErrors: Array<{ __typename: 'PythonError', message: string, stack: Array<string>, errorChain: Array<{ __typename: 'ErrorChainLink', isExplicitLink: boolean, error: { __typename: 'PythonError', message: string, stack: Array<string> } }> }> }> } } };

export type RepositorySchedulesFragmentFragment = { __typename: 'Repository', name: string, id: string, location: { __typename: 'RepositoryLocation', id: string, name: string }, schedules: Array<{ __typename: 'Schedule', id: string, name: string, cronSchedule: string, executionTimezone: string | null, pipelineName: string, solidSelection: Array<string | null> | null, mode: string, description: string | null, partitionSet: { __typename: 'PartitionSet', id: string, name: string } | null, scheduleState: { __typename: 'InstigationState', id: string, selectorId: string, name: string, instigationType: InstigationType, status: InstigationStatus, repositoryName: string, repositoryLocationName: string, runningCount: number, typeSpecificData: { __typename: 'ScheduleData', cronSchedule: string } | { __typename: 'SensorData', lastRunKey: string | null, lastCursor: string | null } | null, runs: Array<{ __typename: 'Run', id: string, runId: string, status: RunStatus, startTime: number | null, endTime: number | null, updateTime: number | null }>, ticks: Array<{ __typename: 'InstigationTick', id: string, cursor: string | null, status: InstigationTickStatus, timestamp: number, skipReason: string | null, runIds: Array<string>, runKeys: Array<string>, error: { __typename: 'PythonError', message: string, stack: Array<string>, errorChain: Array<{ __typename: 'ErrorChainLink', isExplicitLink: boolean, error: { __typename: 'PythonError', message: string, stack: Array<string> } }> } | null }> }, futureTicks: { __typename: 'FutureInstigationTicks', results: Array<{ __typename: 'FutureInstigationTick', timestamp: number }> } }>, displayMetadata: Array<{ __typename: 'RepositoryMetadata', key: string, value: string }> };

export type ScheduleFragmentFragment = { __typename: 'Schedule', id: string, name: string, cronSchedule: string, executionTimezone: string | null, pipelineName: string, solidSelection: Array<string | null> | null, mode: string, description: string | null, partitionSet: { __typename: 'PartitionSet', id: string, name: string } | null, scheduleState: { __typename: 'InstigationState', id: string, selectorId: string, name: string, instigationType: InstigationType, status: InstigationStatus, repositoryName: string, repositoryLocationName: string, runningCount: number, typeSpecificData: { __typename: 'ScheduleData', cronSchedule: string } | { __typename: 'SensorData', lastRunKey: string | null, lastCursor: string | null } | null, runs: Array<{ __typename: 'Run', id: string, runId: string, status: RunStatus, startTime: number | null, endTime: number | null, updateTime: number | null }>, ticks: Array<{ __typename: 'InstigationTick', id: string, cursor: string | null, status: InstigationTickStatus, timestamp: number, skipReason: string | null, runIds: Array<string>, runKeys: Array<string>, error: { __typename: 'PythonError', message: string, stack: Array<string>, errorChain: Array<{ __typename: 'ErrorChainLink', isExplicitLink: boolean, error: { __typename: 'PythonError', message: string, stack: Array<string> } }> } | null }> }, futureTicks: { __typename: 'FutureInstigationTicks', results: Array<{ __typename: 'FutureInstigationTick', timestamp: number }> } };

export type ScheduleTickConfigQueryQueryVariables = Exact<{
  scheduleSelector: ScheduleSelector;
  tickTimestamp: Scalars['Int'];
}>;


export type ScheduleTickConfigQueryQuery = { __typename: 'DagitQuery', scheduleOrError: { __typename: 'PythonError' } | { __typename: 'Schedule', id: string, futureTick: { __typename: 'FutureInstigationTick', evaluationResult: { __typename: 'TickEvaluation', skipReason: string | null, runRequests: Array<{ __typename: 'RunRequest', runKey: string | null, runConfigYaml: string, tags: Array<{ __typename: 'PipelineTag', key: string, value: string }> } | null> | null, error: { __typename: 'PythonError', message: string, stack: Array<string>, errorChain: Array<{ __typename: 'ErrorChainLink', isExplicitLink: boolean, error: { __typename: 'PythonError', message: string, stack: Array<string> } }> } | null } | null } } | { __typename: 'ScheduleNotFoundError' } };

export type ScheduleFutureTickEvaluationResultFragment = { __typename: 'TickEvaluation', skipReason: string | null, runRequests: Array<{ __typename: 'RunRequest', runKey: string | null, runConfigYaml: string, tags: Array<{ __typename: 'PipelineTag', key: string, value: string }> } | null> | null, error: { __typename: 'PythonError', message: string, stack: Array<string>, errorChain: Array<{ __typename: 'ErrorChainLink', isExplicitLink: boolean, error: { __typename: 'PythonError', message: string, stack: Array<string> } }> } | null };

export type ScheduleFutureTickRunRequestFragment = { __typename: 'RunRequest', runKey: string | null, runConfigYaml: string, tags: Array<{ __typename: 'PipelineTag', key: string, value: string }> };

export type SearchBootstrapQueryQueryVariables = Exact<{ [key: string]: never; }>;


export type SearchBootstrapQueryQuery = { __typename: 'DagitQuery', workspaceOrError: { __typename: 'PythonError', message: string, stack: Array<string>, errorChain: Array<{ __typename: 'ErrorChainLink', isExplicitLink: boolean, error: { __typename: 'PythonError', message: string, stack: Array<string> } }> } | { __typename: 'Workspace', locationEntries: Array<{ __typename: 'WorkspaceLocationEntry', id: string, locationOrLoadError: { __typename: 'PythonError' } | { __typename: 'RepositoryLocation', id: string, name: string, repositories: Array<{ __typename: 'Repository', id: string, name: string, pipelines: Array<{ __typename: 'Pipeline', id: string, isJob: boolean, name: string }>, schedules: Array<{ __typename: 'Schedule', id: string, name: string }>, sensors: Array<{ __typename: 'Sensor', id: string, name: string }>, partitionSets: Array<{ __typename: 'PartitionSet', id: string, name: string, pipelineName: string }> }> } | null }> } };

export type SearchSecondaryQueryQueryVariables = Exact<{ [key: string]: never; }>;


export type SearchSecondaryQueryQuery = { __typename: 'DagitQuery', assetsOrError: { __typename: 'AssetConnection', nodes: Array<{ __typename: 'Asset', id: string, key: { __typename: 'AssetKey', path: Array<string> } }> } | { __typename: 'PythonError' } };

export type SetSensorCursorMutationMutationVariables = Exact<{
  sensorSelector: SensorSelector;
  cursor?: InputMaybe<Scalars['String']>;
}>;


export type SetSensorCursorMutationMutation = { __typename: 'DagitMutation', setSensorCursor: { __typename: 'PythonError', message: string, stack: Array<string>, errorChain: Array<{ __typename: 'ErrorChainLink', isExplicitLink: boolean, error: { __typename: 'PythonError', message: string, stack: Array<string> } }> } | { __typename: 'Sensor', id: string, sensorState: { __typename: 'InstigationState', id: string, status: InstigationStatus, typeSpecificData: { __typename: 'ScheduleData' } | { __typename: 'SensorData', lastCursor: string | null } | null } } | { __typename: 'SensorNotFoundError' } | { __typename: 'UnauthorizedError' } };

export type SensorFragmentFragment = { __typename: 'Sensor', id: string, jobOriginId: string, name: string, description: string | null, minIntervalSeconds: number, nextTick: { __typename: 'FutureInstigationTick', timestamp: number } | null, sensorState: { __typename: 'InstigationState', id: string, selectorId: string, name: string, instigationType: InstigationType, status: InstigationStatus, repositoryName: string, repositoryLocationName: string, runningCount: number, typeSpecificData: { __typename: 'ScheduleData', cronSchedule: string } | { __typename: 'SensorData', lastRunKey: string | null, lastCursor: string | null } | null, runs: Array<{ __typename: 'Run', id: string, runId: string, status: RunStatus, startTime: number | null, endTime: number | null, updateTime: number | null }>, ticks: Array<{ __typename: 'InstigationTick', id: string, cursor: string | null, status: InstigationTickStatus, timestamp: number, skipReason: string | null, runIds: Array<string>, runKeys: Array<string>, error: { __typename: 'PythonError', message: string, stack: Array<string>, errorChain: Array<{ __typename: 'ErrorChainLink', isExplicitLink: boolean, error: { __typename: 'PythonError', message: string, stack: Array<string> } }> } | null }> }, targets: Array<{ __typename: 'Target', pipelineName: string, solidSelection: Array<string> | null, mode: string }> | null, metadata: { __typename: 'SensorMetadata', assetKeys: Array<{ __typename: 'AssetKey', path: Array<string> }> | null } };

export type StartSensorMutationVariables = Exact<{
  sensorSelector: SensorSelector;
}>;


export type StartSensorMutation = { __typename: 'DagitMutation', startSensor: { __typename: 'PythonError', message: string, stack: Array<string>, errorChain: Array<{ __typename: 'ErrorChainLink', isExplicitLink: boolean, error: { __typename: 'PythonError', message: string, stack: Array<string> } }> } | { __typename: 'Sensor', id: string, sensorState: { __typename: 'InstigationState', id: string, status: InstigationStatus } } | { __typename: 'SensorNotFoundError' } | { __typename: 'UnauthorizedError' } };

export type StopRunningSensorMutationVariables = Exact<{
  jobOriginId: Scalars['String'];
  jobSelectorId: Scalars['String'];
}>;


export type StopRunningSensorMutation = { __typename: 'DagitMutation', stopSensor: { __typename: 'PythonError', message: string, stack: Array<string>, errorChain: Array<{ __typename: 'ErrorChainLink', isExplicitLink: boolean, error: { __typename: 'PythonError', message: string, stack: Array<string> } }> } | { __typename: 'StopSensorMutationResult', instigationState: { __typename: 'InstigationState', id: string, status: InstigationStatus } | null } | { __typename: 'UnauthorizedError' } };

export type PreviousRunsForSensorQueryQueryVariables = Exact<{
  filter?: InputMaybe<RunsFilter>;
  limit?: InputMaybe<Scalars['Int']>;
}>;


export type PreviousRunsForSensorQueryQuery = { __typename: 'DagitQuery', pipelineRunsOrError: { __typename: 'InvalidPipelineRunsFilterError' } | { __typename: 'PythonError' } | { __typename: 'Runs', results: Array<{ __typename: 'Run', id: string, runId: string, status: RunStatus, stepKeysToExecute: Array<string> | null, canTerminate: boolean, mode: string, rootRunId: string | null, parentRunId: string | null, pipelineSnapshotId: string | null, parentPipelineSnapshotId: string | null, pipelineName: string, solidSelection: Array<string> | null, startTime: number | null, endTime: number | null, updateTime: number | null, repositoryOrigin: { __typename: 'RepositoryOrigin', id: string, repositoryName: string, repositoryLocationName: string } | null, assetSelection: Array<{ __typename: 'AssetKey', path: Array<string> }> | null, tags: Array<{ __typename: 'PipelineTag', key: string, value: string }> }> } };

export type SensorRootQueryQueryVariables = Exact<{
  sensorSelector: SensorSelector;
}>;


export type SensorRootQueryQuery = { __typename: 'DagitQuery', sensorOrError: { __typename: 'PythonError', message: string, stack: Array<string>, errorChain: Array<{ __typename: 'ErrorChainLink', isExplicitLink: boolean, error: { __typename: 'PythonError', message: string, stack: Array<string> } }> } | { __typename: 'Sensor', id: string, jobOriginId: string, name: string, description: string | null, minIntervalSeconds: number, nextTick: { __typename: 'FutureInstigationTick', timestamp: number } | null, sensorState: { __typename: 'InstigationState', id: string, selectorId: string, name: string, instigationType: InstigationType, status: InstigationStatus, repositoryName: string, repositoryLocationName: string, runningCount: number, typeSpecificData: { __typename: 'ScheduleData', cronSchedule: string } | { __typename: 'SensorData', lastRunKey: string | null, lastCursor: string | null } | null, runs: Array<{ __typename: 'Run', id: string, runId: string, status: RunStatus, startTime: number | null, endTime: number | null, updateTime: number | null }>, ticks: Array<{ __typename: 'InstigationTick', id: string, cursor: string | null, status: InstigationTickStatus, timestamp: number, skipReason: string | null, runIds: Array<string>, runKeys: Array<string>, error: { __typename: 'PythonError', message: string, stack: Array<string>, errorChain: Array<{ __typename: 'ErrorChainLink', isExplicitLink: boolean, error: { __typename: 'PythonError', message: string, stack: Array<string> } }> } | null }> }, targets: Array<{ __typename: 'Target', pipelineName: string, solidSelection: Array<string> | null, mode: string }> | null, metadata: { __typename: 'SensorMetadata', assetKeys: Array<{ __typename: 'AssetKey', path: Array<string> }> | null } } | { __typename: 'SensorNotFoundError' } | { __typename: 'UnauthorizedError' }, instance: { __typename: 'Instance', hasInfo: boolean, daemonHealth: { __typename: 'DaemonHealth', id: string, daemonStatus: { __typename: 'DaemonStatus', id: string, healthy: boolean | null }, allDaemonStatuses: Array<{ __typename: 'DaemonStatus', id: string, daemonType: string, required: boolean, healthy: boolean | null, lastHeartbeatTime: number | null, lastHeartbeatErrors: Array<{ __typename: 'PythonError', message: string, stack: Array<string>, errorChain: Array<{ __typename: 'ErrorChainLink', isExplicitLink: boolean, error: { __typename: 'PythonError', message: string, stack: Array<string> } }> }> }> } } };

export type SensorSwitchFragmentFragment = { __typename: 'Sensor', id: string, jobOriginId: string, name: string, sensorState: { __typename: 'InstigationState', id: string, selectorId: string, status: InstigationStatus } };

export type SensorsRootQueryQueryVariables = Exact<{
  repositorySelector: RepositorySelector;
  instigationType: InstigationType;
}>;


export type SensorsRootQueryQuery = { __typename: 'DagitQuery', sensorsOrError: { __typename: 'PythonError', message: string, stack: Array<string>, errorChain: Array<{ __typename: 'ErrorChainLink', isExplicitLink: boolean, error: { __typename: 'PythonError', message: string, stack: Array<string> } }> } | { __typename: 'RepositoryNotFoundError' } | { __typename: 'Sensors', results: Array<{ __typename: 'Sensor', id: string, jobOriginId: string, name: string, description: string | null, minIntervalSeconds: number, nextTick: { __typename: 'FutureInstigationTick', timestamp: number } | null, sensorState: { __typename: 'InstigationState', id: string, selectorId: string, name: string, instigationType: InstigationType, status: InstigationStatus, repositoryName: string, repositoryLocationName: string, runningCount: number, typeSpecificData: { __typename: 'ScheduleData', cronSchedule: string } | { __typename: 'SensorData', lastRunKey: string | null, lastCursor: string | null } | null, runs: Array<{ __typename: 'Run', id: string, runId: string, status: RunStatus, startTime: number | null, endTime: number | null, updateTime: number | null }>, ticks: Array<{ __typename: 'InstigationTick', id: string, cursor: string | null, status: InstigationTickStatus, timestamp: number, skipReason: string | null, runIds: Array<string>, runKeys: Array<string>, error: { __typename: 'PythonError', message: string, stack: Array<string>, errorChain: Array<{ __typename: 'ErrorChainLink', isExplicitLink: boolean, error: { __typename: 'PythonError', message: string, stack: Array<string> } }> } | null }> }, targets: Array<{ __typename: 'Target', pipelineName: string, solidSelection: Array<string> | null, mode: string }> | null, metadata: { __typename: 'SensorMetadata', assetKeys: Array<{ __typename: 'AssetKey', path: Array<string> }> | null } }> }, unloadableInstigationStatesOrError: { __typename: 'InstigationStates', results: Array<{ __typename: 'InstigationState', id: string, selectorId: string, name: string, instigationType: InstigationType, status: InstigationStatus, repositoryName: string, repositoryLocationName: string, runningCount: number, typeSpecificData: { __typename: 'ScheduleData', cronSchedule: string } | { __typename: 'SensorData', lastRunKey: string | null, lastCursor: string | null } | null, runs: Array<{ __typename: 'Run', id: string, runId: string, status: RunStatus, startTime: number | null, endTime: number | null, updateTime: number | null }>, ticks: Array<{ __typename: 'InstigationTick', id: string, cursor: string | null, status: InstigationTickStatus, timestamp: number, skipReason: string | null, runIds: Array<string>, runKeys: Array<string>, error: { __typename: 'PythonError', message: string, stack: Array<string>, errorChain: Array<{ __typename: 'ErrorChainLink', isExplicitLink: boolean, error: { __typename: 'PythonError', message: string, stack: Array<string> } }> } | null }> }> } | { __typename: 'PythonError', message: string, stack: Array<string>, errorChain: Array<{ __typename: 'ErrorChainLink', isExplicitLink: boolean, error: { __typename: 'PythonError', message: string, stack: Array<string> } }> }, instance: { __typename: 'Instance', hasInfo: boolean, daemonHealth: { __typename: 'DaemonHealth', id: string, allDaemonStatuses: Array<{ __typename: 'DaemonStatus', id: string, daemonType: string, required: boolean, healthy: boolean | null, lastHeartbeatTime: number | null, lastHeartbeatErrors: Array<{ __typename: 'PythonError', message: string, stack: Array<string>, errorChain: Array<{ __typename: 'ErrorChainLink', isExplicitLink: boolean, error: { __typename: 'PythonError', message: string, stack: Array<string> } }> }> }> } } };

export type SnapshotQueryQueryVariables = Exact<{
  snapshotId: Scalars['String'];
}>;


export type SnapshotQueryQuery = { __typename: 'DagitQuery', pipelineSnapshotOrError: { __typename: 'PipelineNotFoundError' } | { __typename: 'PipelineSnapshot', id: string, parentSnapshotId: string | null } | { __typename: 'PipelineSnapshotNotFoundError' } | { __typename: 'PythonError' } };

type ConfigTypeSchemaFragment_ArrayConfigType_Fragment = { __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> };

type ConfigTypeSchemaFragment_CompositeConfigType_Fragment = { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> };

type ConfigTypeSchemaFragment_EnumConfigType_Fragment = { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> };

type ConfigTypeSchemaFragment_MapConfigType_Fragment = { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> };

type ConfigTypeSchemaFragment_NullableConfigType_Fragment = { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> };

type ConfigTypeSchemaFragment_RegularConfigType_Fragment = { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> };

type ConfigTypeSchemaFragment_ScalarUnionConfigType_Fragment = { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> };

export type ConfigTypeSchemaFragmentFragment = ConfigTypeSchemaFragment_ArrayConfigType_Fragment | ConfigTypeSchemaFragment_CompositeConfigType_Fragment | ConfigTypeSchemaFragment_EnumConfigType_Fragment | ConfigTypeSchemaFragment_MapConfigType_Fragment | ConfigTypeSchemaFragment_NullableConfigType_Fragment | ConfigTypeSchemaFragment_RegularConfigType_Fragment | ConfigTypeSchemaFragment_ScalarUnionConfigType_Fragment;

type TypeExplorerFragment_ListDagsterType_Fragment = { __typename: 'ListDagsterType', name: string | null, description: string | null, metadataEntries: Array<{ __typename: 'AssetMetadataEntry', label: string, description: string | null, assetKey: { __typename: 'AssetKey', path: Array<string> } } | { __typename: 'BoolMetadataEntry', boolValue: boolean | null, label: string, description: string | null } | { __typename: 'FloatMetadataEntry', floatValue: number | null, label: string, description: string | null } | { __typename: 'IntMetadataEntry', intValue: number | null, intRepr: string, label: string, description: string | null } | { __typename: 'JsonMetadataEntry', jsonString: string, label: string, description: string | null } | { __typename: 'MarkdownMetadataEntry', mdStr: string, label: string, description: string | null } | { __typename: 'NotebookMetadataEntry', path: string, label: string, description: string | null } | { __typename: 'NullMetadataEntry', label: string, description: string | null } | { __typename: 'PathMetadataEntry', path: string, label: string, description: string | null } | { __typename: 'PipelineRunMetadataEntry', runId: string, label: string, description: string | null } | { __typename: 'PythonArtifactMetadataEntry', module: string, name: string, label: string, description: string | null } | { __typename: 'TableMetadataEntry', label: string, description: string | null, table: { __typename: 'Table', records: Array<string>, schema: { __typename: 'TableSchema', columns: Array<{ __typename: 'TableColumn', name: string, description: string | null, type: string, constraints: { __typename: 'TableColumnConstraints', nullable: boolean, unique: boolean, other: Array<string> } }>, constraints: { __typename: 'TableConstraints', other: Array<string> } | null } } } | { __typename: 'TableSchemaMetadataEntry', label: string, description: string | null, schema: { __typename: 'TableSchema', columns: Array<{ __typename: 'TableColumn', name: string, description: string | null, type: string, constraints: { __typename: 'TableColumnConstraints', nullable: boolean, unique: boolean, other: Array<string> } }>, constraints: { __typename: 'TableConstraints', other: Array<string> } | null } } | { __typename: 'TextMetadataEntry', text: string, label: string, description: string | null } | { __typename: 'UrlMetadataEntry', url: string, label: string, description: string | null }>, inputSchemaType: { __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | null, outputSchemaType: { __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | null };

type TypeExplorerFragment_NullableDagsterType_Fragment = { __typename: 'NullableDagsterType', name: string | null, description: string | null, metadataEntries: Array<{ __typename: 'AssetMetadataEntry', label: string, description: string | null, assetKey: { __typename: 'AssetKey', path: Array<string> } } | { __typename: 'BoolMetadataEntry', boolValue: boolean | null, label: string, description: string | null } | { __typename: 'FloatMetadataEntry', floatValue: number | null, label: string, description: string | null } | { __typename: 'IntMetadataEntry', intValue: number | null, intRepr: string, label: string, description: string | null } | { __typename: 'JsonMetadataEntry', jsonString: string, label: string, description: string | null } | { __typename: 'MarkdownMetadataEntry', mdStr: string, label: string, description: string | null } | { __typename: 'NotebookMetadataEntry', path: string, label: string, description: string | null } | { __typename: 'NullMetadataEntry', label: string, description: string | null } | { __typename: 'PathMetadataEntry', path: string, label: string, description: string | null } | { __typename: 'PipelineRunMetadataEntry', runId: string, label: string, description: string | null } | { __typename: 'PythonArtifactMetadataEntry', module: string, name: string, label: string, description: string | null } | { __typename: 'TableMetadataEntry', label: string, description: string | null, table: { __typename: 'Table', records: Array<string>, schema: { __typename: 'TableSchema', columns: Array<{ __typename: 'TableColumn', name: string, description: string | null, type: string, constraints: { __typename: 'TableColumnConstraints', nullable: boolean, unique: boolean, other: Array<string> } }>, constraints: { __typename: 'TableConstraints', other: Array<string> } | null } } } | { __typename: 'TableSchemaMetadataEntry', label: string, description: string | null, schema: { __typename: 'TableSchema', columns: Array<{ __typename: 'TableColumn', name: string, description: string | null, type: string, constraints: { __typename: 'TableColumnConstraints', nullable: boolean, unique: boolean, other: Array<string> } }>, constraints: { __typename: 'TableConstraints', other: Array<string> } | null } } | { __typename: 'TextMetadataEntry', text: string, label: string, description: string | null } | { __typename: 'UrlMetadataEntry', url: string, label: string, description: string | null }>, inputSchemaType: { __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | null, outputSchemaType: { __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | null };

type TypeExplorerFragment_RegularDagsterType_Fragment = { __typename: 'RegularDagsterType', name: string | null, description: string | null, metadataEntries: Array<{ __typename: 'AssetMetadataEntry', label: string, description: string | null, assetKey: { __typename: 'AssetKey', path: Array<string> } } | { __typename: 'BoolMetadataEntry', boolValue: boolean | null, label: string, description: string | null } | { __typename: 'FloatMetadataEntry', floatValue: number | null, label: string, description: string | null } | { __typename: 'IntMetadataEntry', intValue: number | null, intRepr: string, label: string, description: string | null } | { __typename: 'JsonMetadataEntry', jsonString: string, label: string, description: string | null } | { __typename: 'MarkdownMetadataEntry', mdStr: string, label: string, description: string | null } | { __typename: 'NotebookMetadataEntry', path: string, label: string, description: string | null } | { __typename: 'NullMetadataEntry', label: string, description: string | null } | { __typename: 'PathMetadataEntry', path: string, label: string, description: string | null } | { __typename: 'PipelineRunMetadataEntry', runId: string, label: string, description: string | null } | { __typename: 'PythonArtifactMetadataEntry', module: string, name: string, label: string, description: string | null } | { __typename: 'TableMetadataEntry', label: string, description: string | null, table: { __typename: 'Table', records: Array<string>, schema: { __typename: 'TableSchema', columns: Array<{ __typename: 'TableColumn', name: string, description: string | null, type: string, constraints: { __typename: 'TableColumnConstraints', nullable: boolean, unique: boolean, other: Array<string> } }>, constraints: { __typename: 'TableConstraints', other: Array<string> } | null } } } | { __typename: 'TableSchemaMetadataEntry', label: string, description: string | null, schema: { __typename: 'TableSchema', columns: Array<{ __typename: 'TableColumn', name: string, description: string | null, type: string, constraints: { __typename: 'TableColumnConstraints', nullable: boolean, unique: boolean, other: Array<string> } }>, constraints: { __typename: 'TableConstraints', other: Array<string> } | null } } | { __typename: 'TextMetadataEntry', text: string, label: string, description: string | null } | { __typename: 'UrlMetadataEntry', url: string, label: string, description: string | null }>, inputSchemaType: { __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | null, outputSchemaType: { __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | null };

export type TypeExplorerFragmentFragment = TypeExplorerFragment_ListDagsterType_Fragment | TypeExplorerFragment_NullableDagsterType_Fragment | TypeExplorerFragment_RegularDagsterType_Fragment;

export type TypeExplorerContainerQueryQueryVariables = Exact<{
  pipelineSelector: PipelineSelector;
  dagsterTypeName: Scalars['String'];
}>;


export type TypeExplorerContainerQueryQuery = { __typename: 'DagitQuery', pipelineOrError: { __typename: 'InvalidSubsetError' } | { __typename: 'Pipeline', id: string, isJob: boolean, dagsterTypeOrError: { __typename: 'DagsterTypeNotFoundError' } | { __typename: 'PipelineNotFoundError' } | { __typename: 'PythonError' } | { __typename: 'RegularDagsterType', name: string | null, description: string | null, metadataEntries: Array<{ __typename: 'AssetMetadataEntry', label: string, description: string | null, assetKey: { __typename: 'AssetKey', path: Array<string> } } | { __typename: 'BoolMetadataEntry', boolValue: boolean | null, label: string, description: string | null } | { __typename: 'FloatMetadataEntry', floatValue: number | null, label: string, description: string | null } | { __typename: 'IntMetadataEntry', intValue: number | null, intRepr: string, label: string, description: string | null } | { __typename: 'JsonMetadataEntry', jsonString: string, label: string, description: string | null } | { __typename: 'MarkdownMetadataEntry', mdStr: string, label: string, description: string | null } | { __typename: 'NotebookMetadataEntry', path: string, label: string, description: string | null } | { __typename: 'NullMetadataEntry', label: string, description: string | null } | { __typename: 'PathMetadataEntry', path: string, label: string, description: string | null } | { __typename: 'PipelineRunMetadataEntry', runId: string, label: string, description: string | null } | { __typename: 'PythonArtifactMetadataEntry', module: string, name: string, label: string, description: string | null } | { __typename: 'TableMetadataEntry', label: string, description: string | null, table: { __typename: 'Table', records: Array<string>, schema: { __typename: 'TableSchema', columns: Array<{ __typename: 'TableColumn', name: string, description: string | null, type: string, constraints: { __typename: 'TableColumnConstraints', nullable: boolean, unique: boolean, other: Array<string> } }>, constraints: { __typename: 'TableConstraints', other: Array<string> } | null } } } | { __typename: 'TableSchemaMetadataEntry', label: string, description: string | null, schema: { __typename: 'TableSchema', columns: Array<{ __typename: 'TableColumn', name: string, description: string | null, type: string, constraints: { __typename: 'TableColumnConstraints', nullable: boolean, unique: boolean, other: Array<string> } }>, constraints: { __typename: 'TableConstraints', other: Array<string> } | null } } | { __typename: 'TextMetadataEntry', text: string, label: string, description: string | null } | { __typename: 'UrlMetadataEntry', url: string, label: string, description: string | null }>, inputSchemaType: { __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | null, outputSchemaType: { __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | null } } | { __typename: 'PipelineNotFoundError' } | { __typename: 'PythonError' } };

type TypeListFragment_ListDagsterType_Fragment = { __typename: 'ListDagsterType', name: string | null, isBuiltin: boolean, displayName: string, description: string | null };

type TypeListFragment_NullableDagsterType_Fragment = { __typename: 'NullableDagsterType', name: string | null, isBuiltin: boolean, displayName: string, description: string | null };

type TypeListFragment_RegularDagsterType_Fragment = { __typename: 'RegularDagsterType', name: string | null, isBuiltin: boolean, displayName: string, description: string | null };

export type TypeListFragmentFragment = TypeListFragment_ListDagsterType_Fragment | TypeListFragment_NullableDagsterType_Fragment | TypeListFragment_RegularDagsterType_Fragment;

export type TypeListContainerQueryQueryVariables = Exact<{
  pipelineSelector: PipelineSelector;
}>;


export type TypeListContainerQueryQuery = { __typename: 'DagitQuery', pipelineOrError: { __typename: 'InvalidSubsetError' } | { __typename: 'Pipeline', id: string, isJob: boolean, name: string, dagsterTypes: Array<{ __typename: 'ListDagsterType', name: string | null, isBuiltin: boolean, displayName: string, description: string | null } | { __typename: 'NullableDagsterType', name: string | null, isBuiltin: boolean, displayName: string, description: string | null } | { __typename: 'RegularDagsterType', name: string | null, isBuiltin: boolean, displayName: string, description: string | null }> } | { __typename: 'PipelineNotFoundError' } | { __typename: 'PythonError' } };

type DagsterTypeWithTooltipFragment_ListDagsterType_Fragment = { __typename: 'ListDagsterType', name: string | null, displayName: string, description: string | null };

type DagsterTypeWithTooltipFragment_NullableDagsterType_Fragment = { __typename: 'NullableDagsterType', name: string | null, displayName: string, description: string | null };

type DagsterTypeWithTooltipFragment_RegularDagsterType_Fragment = { __typename: 'RegularDagsterType', name: string | null, displayName: string, description: string | null };

export type DagsterTypeWithTooltipFragmentFragment = DagsterTypeWithTooltipFragment_ListDagsterType_Fragment | DagsterTypeWithTooltipFragment_NullableDagsterType_Fragment | DagsterTypeWithTooltipFragment_RegularDagsterType_Fragment;

export type GraphExplorerRootQueryQueryVariables = Exact<{
  graphSelector?: InputMaybe<GraphSelector>;
  rootHandleID: Scalars['String'];
  requestScopeHandleID?: InputMaybe<Scalars['String']>;
}>;


export type GraphExplorerRootQueryQuery = { __typename: 'DagitQuery', graphOrError: { __typename: 'Graph', id: string, name: string, description: string | null, solidHandle: { __typename: 'SolidHandle', handleID: string, solid: { __typename: 'Solid', name: string, isDynamicMapped: boolean, definition: { __typename: 'CompositeSolidDefinition', name: string, id: string, description: string | null, inputMappings: Array<{ __typename: 'InputMapping', definition: { __typename: 'InputDefinition', name: string }, mappedInput: { __typename: 'Input', definition: { __typename: 'InputDefinition', name: string }, solid: { __typename: 'Solid', name: string } } }>, outputMappings: Array<{ __typename: 'OutputMapping', definition: { __typename: 'OutputDefinition', name: string }, mappedOutput: { __typename: 'Output', definition: { __typename: 'OutputDefinition', name: string }, solid: { __typename: 'Solid', name: string } } }>, metadata: Array<{ __typename: 'MetadataItemDefinition', key: string, value: string }>, assetNodes: Array<{ __typename: 'AssetNode', id: string, assetKey: { __typename: 'AssetKey', path: Array<string> } }>, inputDefinitions: Array<{ __typename: 'InputDefinition', name: string, type: { __typename: 'ListDagsterType', displayName: string } | { __typename: 'NullableDagsterType', displayName: string } | { __typename: 'RegularDagsterType', displayName: string } }>, outputDefinitions: Array<{ __typename: 'OutputDefinition', name: string, isDynamic: boolean | null, type: { __typename: 'ListDagsterType', displayName: string } | { __typename: 'NullableDagsterType', displayName: string } | { __typename: 'RegularDagsterType', displayName: string } }> } | { __typename: 'SolidDefinition', name: string, description: string | null, configField: { __typename: 'ConfigTypeField', configType: { __typename: 'ArrayConfigType', key: string, description: string | null } | { __typename: 'CompositeConfigType', key: string, description: string | null } | { __typename: 'EnumConfigType', key: string, description: string | null } | { __typename: 'MapConfigType', key: string, description: string | null } | { __typename: 'NullableConfigType', key: string, description: string | null } | { __typename: 'RegularConfigType', key: string, description: string | null } | { __typename: 'ScalarUnionConfigType', key: string, description: string | null } } | null, metadata: Array<{ __typename: 'MetadataItemDefinition', key: string, value: string }>, assetNodes: Array<{ __typename: 'AssetNode', id: string, assetKey: { __typename: 'AssetKey', path: Array<string> } }>, inputDefinitions: Array<{ __typename: 'InputDefinition', name: string, type: { __typename: 'ListDagsterType', displayName: string } | { __typename: 'NullableDagsterType', displayName: string } | { __typename: 'RegularDagsterType', displayName: string } }>, outputDefinitions: Array<{ __typename: 'OutputDefinition', name: string, isDynamic: boolean | null, type: { __typename: 'ListDagsterType', displayName: string } | { __typename: 'NullableDagsterType', displayName: string } | { __typename: 'RegularDagsterType', displayName: string } }> }, inputs: Array<{ __typename: 'Input', isDynamicCollect: boolean, definition: { __typename: 'InputDefinition', name: string }, dependsOn: Array<{ __typename: 'Output', definition: { __typename: 'OutputDefinition', name: string, type: { __typename: 'ListDagsterType', displayName: string } | { __typename: 'NullableDagsterType', displayName: string } | { __typename: 'RegularDagsterType', displayName: string } }, solid: { __typename: 'Solid', name: string } }> }>, outputs: Array<{ __typename: 'Output', definition: { __typename: 'OutputDefinition', name: string }, dependedBy: Array<{ __typename: 'Input', solid: { __typename: 'Solid', name: string }, definition: { __typename: 'InputDefinition', name: string, type: { __typename: 'ListDagsterType', displayName: string } | { __typename: 'NullableDagsterType', displayName: string } | { __typename: 'RegularDagsterType', displayName: string } } }> }> } } | null, solidHandles: Array<{ __typename: 'SolidHandle', handleID: string, solid: { __typename: 'Solid', name: string, isDynamicMapped: boolean, definition: { __typename: 'CompositeSolidDefinition', name: string, id: string, description: string | null, inputMappings: Array<{ __typename: 'InputMapping', definition: { __typename: 'InputDefinition', name: string }, mappedInput: { __typename: 'Input', definition: { __typename: 'InputDefinition', name: string }, solid: { __typename: 'Solid', name: string } } }>, outputMappings: Array<{ __typename: 'OutputMapping', definition: { __typename: 'OutputDefinition', name: string }, mappedOutput: { __typename: 'Output', definition: { __typename: 'OutputDefinition', name: string }, solid: { __typename: 'Solid', name: string } } }>, metadata: Array<{ __typename: 'MetadataItemDefinition', key: string, value: string }>, assetNodes: Array<{ __typename: 'AssetNode', id: string, assetKey: { __typename: 'AssetKey', path: Array<string> } }>, inputDefinitions: Array<{ __typename: 'InputDefinition', name: string, type: { __typename: 'ListDagsterType', displayName: string } | { __typename: 'NullableDagsterType', displayName: string } | { __typename: 'RegularDagsterType', displayName: string } }>, outputDefinitions: Array<{ __typename: 'OutputDefinition', name: string, isDynamic: boolean | null, type: { __typename: 'ListDagsterType', displayName: string } | { __typename: 'NullableDagsterType', displayName: string } | { __typename: 'RegularDagsterType', displayName: string } }> } | { __typename: 'SolidDefinition', name: string, description: string | null, configField: { __typename: 'ConfigTypeField', configType: { __typename: 'ArrayConfigType', key: string, description: string | null } | { __typename: 'CompositeConfigType', key: string, description: string | null } | { __typename: 'EnumConfigType', key: string, description: string | null } | { __typename: 'MapConfigType', key: string, description: string | null } | { __typename: 'NullableConfigType', key: string, description: string | null } | { __typename: 'RegularConfigType', key: string, description: string | null } | { __typename: 'ScalarUnionConfigType', key: string, description: string | null } } | null, metadata: Array<{ __typename: 'MetadataItemDefinition', key: string, value: string }>, assetNodes: Array<{ __typename: 'AssetNode', id: string, assetKey: { __typename: 'AssetKey', path: Array<string> } }>, inputDefinitions: Array<{ __typename: 'InputDefinition', name: string, type: { __typename: 'ListDagsterType', displayName: string } | { __typename: 'NullableDagsterType', displayName: string } | { __typename: 'RegularDagsterType', displayName: string } }>, outputDefinitions: Array<{ __typename: 'OutputDefinition', name: string, isDynamic: boolean | null, type: { __typename: 'ListDagsterType', displayName: string } | { __typename: 'NullableDagsterType', displayName: string } | { __typename: 'RegularDagsterType', displayName: string } }> }, inputs: Array<{ __typename: 'Input', isDynamicCollect: boolean, definition: { __typename: 'InputDefinition', name: string }, dependsOn: Array<{ __typename: 'Output', definition: { __typename: 'OutputDefinition', name: string, type: { __typename: 'ListDagsterType', displayName: string } | { __typename: 'NullableDagsterType', displayName: string } | { __typename: 'RegularDagsterType', displayName: string } }, solid: { __typename: 'Solid', name: string } }> }>, outputs: Array<{ __typename: 'Output', definition: { __typename: 'OutputDefinition', name: string }, dependedBy: Array<{ __typename: 'Input', solid: { __typename: 'Solid', name: string }, definition: { __typename: 'InputDefinition', name: string, type: { __typename: 'ListDagsterType', displayName: string } | { __typename: 'NullableDagsterType', displayName: string } | { __typename: 'RegularDagsterType', displayName: string } } }> }> } }>, modes: Array<{ __typename: 'Mode', id: string, name: string, description: string | null, resources: Array<{ __typename: 'Resource', name: string, description: string | null, configField: { __typename: 'ConfigTypeField', configType: { __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } } | null }>, loggers: Array<{ __typename: 'Logger', name: string, description: string | null, configField: { __typename: 'ConfigTypeField', configType: { __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, recursiveConfigTypes: Array<{ __typename: 'ArrayConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'CompositeConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, fields: Array<{ __typename: 'ConfigTypeField', name: string, description: string | null, isRequired: boolean, configTypeKey: string, defaultValueAsJson: string | null }> } | { __typename: 'EnumConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string>, values: Array<{ __typename: 'EnumConfigValue', value: string, description: string | null }> } | { __typename: 'MapConfigType', keyLabelName: string | null, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'NullableConfigType', key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'RegularConfigType', givenName: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> } | { __typename: 'ScalarUnionConfigType', scalarTypeKey: string, nonScalarTypeKey: string, key: string, description: string | null, isSelector: boolean, typeParamKeys: Array<string> }> } } | null }> }> } | { __typename: 'GraphNotFoundError', message: string } | { __typename: 'PythonError', message: string, stack: Array<string>, errorChain: Array<{ __typename: 'ErrorChainLink', isExplicitLink: boolean, error: { __typename: 'PythonError', message: string, stack: Array<string> } }> } };

export type RepositoryAssetsListQueryQueryVariables = Exact<{
  repositorySelector: RepositorySelector;
}>;


export type RepositoryAssetsListQueryQuery = { __typename: 'DagitQuery', repositoryOrError: { __typename: 'PythonError' } | { __typename: 'Repository', id: string, assetNodes: Array<{ __typename: 'AssetNode', id: string, opNames: Array<string>, description: string | null, assetKey: { __typename: 'AssetKey', path: Array<string> }, repository: { __typename: 'Repository', id: string, name: string, location: { __typename: 'RepositoryLocation', id: string, name: string } } }> } | { __typename: 'RepositoryNotFoundError', message: string } };

export type RepositoryGraphsListQueryQueryVariables = Exact<{
  repositorySelector: RepositorySelector;
}>;


export type RepositoryGraphsListQueryQuery = { __typename: 'DagitQuery', repositoryOrError: { __typename: 'PythonError' } | { __typename: 'Repository', id: string, usedSolids: Array<{ __typename: 'UsedSolid', definition: { __typename: 'CompositeSolidDefinition', id: string, name: string, description: string | null } | { __typename: 'SolidDefinition' }, invocations: Array<{ __typename: 'NodeInvocationSite', pipeline: { __typename: 'Pipeline', id: string, name: string }, solidHandle: { __typename: 'SolidHandle', handleID: string } }> }>, pipelines: Array<{ __typename: 'Pipeline', id: string, description: string | null, name: string, isJob: boolean, graphName: string }> } | { __typename: 'RepositoryNotFoundError', message: string } };

export type RepositoryInfoFragmentFragment = { __typename: 'Repository', id: string, name: string, location: { __typename: 'RepositoryLocation', id: string, name: string }, displayMetadata: Array<{ __typename: 'RepositoryMetadata', key: string, value: string }> };

export type RepositoryPipelinesListQueryQueryVariables = Exact<{
  repositorySelector: RepositorySelector;
}>;


export type RepositoryPipelinesListQueryQuery = { __typename: 'DagitQuery', repositoryOrError: { __typename: 'PythonError' } | { __typename: 'Repository', id: string, pipelines: Array<{ __typename: 'Pipeline', id: string, description: string | null, isJob: boolean, name: string, modes: Array<{ __typename: 'Mode', id: string, name: string }>, runs: Array<{ __typename: 'Run', id: string, mode: string, runId: string, status: RunStatus }>, schedules: Array<{ __typename: 'Schedule', id: string, name: string, mode: string }>, sensors: Array<{ __typename: 'Sensor', id: string, name: string, targets: Array<{ __typename: 'Target', mode: string, pipelineName: string }> | null }> }> } | { __typename: 'RepositoryNotFoundError', message: string } };

export type SingleAssetQueryQueryVariables = Exact<{
  input: AssetKeyInput;
}>;


export type SingleAssetQueryQuery = { __typename: 'DagitQuery', assetOrError: { __typename: 'Asset', id: string, assetMaterializations: Array<{ __typename: 'MaterializationEvent', runId: string, timestamp: string }>, definition: { __typename: 'AssetNode', id: string, opNames: Array<string>, currentLogicalVersion: string | null, projectedLogicalVersion: string | null, groupName: string | null, isSource: boolean, description: string | null, repository: { __typename: 'Repository', id: string, name: string, location: { __typename: 'RepositoryLocation', id: string, name: string } }, assetKey: { __typename: 'AssetKey', path: Array<string> }, assetMaterializations: Array<{ __typename: 'MaterializationEvent', timestamp: string, runId: string }>, freshnessPolicy: { __typename: 'FreshnessPolicy', maximumLagMinutes: number, cronSchedule: string | null } | null, freshnessInfo: { __typename: 'AssetFreshnessInfo', currentMinutesLate: number | null } | null, assetObservations: Array<{ __typename: 'ObservationEvent', timestamp: string, runId: string }>, partitionDefinition: { __typename: 'PartitionDefinition', description: string } | null } | null, key: { __typename: 'AssetKey', path: Array<string> } } | { __typename: 'AssetNotFoundError' }, assetsLatestInfo: Array<{ __typename: 'AssetLatestInfo', unstartedRunIds: Array<string>, inProgressRunIds: Array<string>, assetKey: { __typename: 'AssetKey', path: Array<string> }, latestRun: { __typename: 'Run', id: string, status: RunStatus, endTime: number | null } | null }> };

export type SingleGraphQueryQueryVariables = Exact<{
  selector: GraphSelector;
}>;


export type SingleGraphQueryQuery = { __typename: 'DagitQuery', graphOrError: { __typename: 'Graph', id: string, name: string, description: string | null } | { __typename: 'GraphNotFoundError' } | { __typename: 'PythonError' } };

export type SingleJobQueryQueryVariables = Exact<{
  selector: PipelineSelector;
}>;


export type SingleJobQueryQuery = { __typename: 'DagitQuery', pipelineOrError: { __typename: 'InvalidSubsetError' } | { __typename: 'Pipeline', id: string, name: string, isJob: boolean, description: string | null, runs: Array<{ __typename: 'Run', id: string, runId: string, status: RunStatus, startTime: number | null, endTime: number | null, updateTime: number | null }>, schedules: Array<{ __typename: 'Schedule', id: string, name: string, cronSchedule: string, executionTimezone: string | null, scheduleState: { __typename: 'InstigationState', id: string, selectorId: string, status: InstigationStatus } }>, sensors: Array<{ __typename: 'Sensor', id: string, jobOriginId: string, name: string, sensorState: { __typename: 'InstigationState', id: string, selectorId: string, status: InstigationStatus } }> } | { __typename: 'PipelineNotFoundError' } | { __typename: 'PythonError' } };

export type SingleScheduleQueryQueryVariables = Exact<{
  selector: ScheduleSelector;
}>;


export type SingleScheduleQueryQuery = { __typename: 'DagitQuery', scheduleOrError: { __typename: 'PythonError' } | { __typename: 'Schedule', id: string, name: string, pipelineName: string, description: string | null, cronSchedule: string, executionTimezone: string | null, scheduleState: { __typename: 'InstigationState', id: string, runningCount: number, selectorId: string, status: InstigationStatus, ticks: Array<{ __typename: 'InstigationTick', id: string, status: InstigationTickStatus, timestamp: number, skipReason: string | null, runIds: Array<string>, runKeys: Array<string>, error: { __typename: 'PythonError', message: string, stack: Array<string>, errorChain: Array<{ __typename: 'ErrorChainLink', isExplicitLink: boolean, error: { __typename: 'PythonError', message: string, stack: Array<string> } }> } | null }>, runs: Array<{ __typename: 'Run', id: string, runId: string, status: RunStatus, startTime: number | null, endTime: number | null, updateTime: number | null }>, nextTick: { __typename: 'FutureInstigationTick', timestamp: number } | null }, partitionSet: { __typename: 'PartitionSet', id: string, name: string } | null } | { __typename: 'ScheduleNotFoundError' } };

export type SingleSensorQueryQueryVariables = Exact<{
  selector: SensorSelector;
}>;


export type SingleSensorQueryQuery = { __typename: 'DagitQuery', sensorOrError: { __typename: 'PythonError' } | { __typename: 'Sensor', id: string, description: string | null, name: string, minIntervalSeconds: number, jobOriginId: string, targets: Array<{ __typename: 'Target', pipelineName: string }> | null, metadata: { __typename: 'SensorMetadata', assetKeys: Array<{ __typename: 'AssetKey', path: Array<string> }> | null }, sensorState: { __typename: 'InstigationState', id: string, runningCount: number, selectorId: string, status: InstigationStatus, ticks: Array<{ __typename: 'InstigationTick', id: string, status: InstigationTickStatus, timestamp: number, skipReason: string | null, runIds: Array<string>, runKeys: Array<string>, error: { __typename: 'PythonError', message: string, stack: Array<string>, errorChain: Array<{ __typename: 'ErrorChainLink', isExplicitLink: boolean, error: { __typename: 'PythonError', message: string, stack: Array<string> } }> } | null }>, runs: Array<{ __typename: 'Run', id: string, runId: string, status: RunStatus, startTime: number | null, endTime: number | null, updateTime: number | null }>, nextTick: { __typename: 'FutureInstigationTick', timestamp: number } | null } } | { __typename: 'SensorNotFoundError' } | { __typename: 'UnauthorizedError' } };

export type WorkspaceAssetsQueryQueryVariables = Exact<{
  selector: RepositorySelector;
}>;


export type WorkspaceAssetsQueryQuery = { __typename: 'DagitQuery', repositoryOrError: { __typename: 'PythonError', message: string, stack: Array<string>, errorChain: Array<{ __typename: 'ErrorChainLink', isExplicitLink: boolean, error: { __typename: 'PythonError', message: string, stack: Array<string> } }> } | { __typename: 'Repository', id: string, name: string, assetNodes: Array<{ __typename: 'AssetNode', id: string, groupName: string | null, assetKey: { __typename: 'AssetKey', path: Array<string> } }> } | { __typename: 'RepositoryNotFoundError' } };

export type RootWorkspaceQueryQueryVariables = Exact<{ [key: string]: never; }>;


export type RootWorkspaceQueryQuery = { __typename: 'DagitQuery', workspaceOrError: { __typename: 'PythonError', message: string, stack: Array<string>, errorChain: Array<{ __typename: 'ErrorChainLink', isExplicitLink: boolean, error: { __typename: 'PythonError', message: string, stack: Array<string> } }> } | { __typename: 'Workspace', locationEntries: Array<{ __typename: 'WorkspaceLocationEntry', id: string, name: string, loadStatus: RepositoryLocationLoadStatus, updatedTimestamp: number, displayMetadata: Array<{ __typename: 'RepositoryMetadata', key: string, value: string }>, locationOrLoadError: { __typename: 'PythonError', message: string, stack: Array<string>, errorChain: Array<{ __typename: 'ErrorChainLink', isExplicitLink: boolean, error: { __typename: 'PythonError', message: string, stack: Array<string> } }> } | { __typename: 'RepositoryLocation', id: string, isReloadSupported: boolean, serverId: string | null, name: string, repositories: Array<{ __typename: 'Repository', id: string, name: string, pipelines: Array<{ __typename: 'Pipeline', id: string, name: string, isJob: boolean, isAssetJob: boolean, pipelineSnapshotId: string }>, schedules: Array<{ __typename: 'Schedule', id: string, cronSchedule: string, executionTimezone: string | null, mode: string, name: string, pipelineName: string, scheduleState: { __typename: 'InstigationState', id: string, selectorId: string, status: InstigationStatus } }>, sensors: Array<{ __typename: 'Sensor', id: string, jobOriginId: string, name: string, targets: Array<{ __typename: 'Target', mode: string, pipelineName: string }> | null, sensorState: { __typename: 'InstigationState', id: string, selectorId: string, status: InstigationStatus } }>, partitionSets: Array<{ __typename: 'PartitionSet', id: string, mode: string, pipelineName: string }>, assetGroups: Array<{ __typename: 'AssetGroup', groupName: string }>, location: { __typename: 'RepositoryLocation', id: string, name: string }, displayMetadata: Array<{ __typename: 'RepositoryMetadata', key: string, value: string }> }> } | null }> } };

export type WorkspaceLocationNodeFragment = { __typename: 'WorkspaceLocationEntry', id: string, name: string, loadStatus: RepositoryLocationLoadStatus, updatedTimestamp: number, displayMetadata: Array<{ __typename: 'RepositoryMetadata', key: string, value: string }>, locationOrLoadError: { __typename: 'PythonError', message: string, stack: Array<string>, errorChain: Array<{ __typename: 'ErrorChainLink', isExplicitLink: boolean, error: { __typename: 'PythonError', message: string, stack: Array<string> } }> } | { __typename: 'RepositoryLocation', id: string, isReloadSupported: boolean, serverId: string | null, name: string, repositories: Array<{ __typename: 'Repository', id: string, name: string, pipelines: Array<{ __typename: 'Pipeline', id: string, name: string, isJob: boolean, isAssetJob: boolean, pipelineSnapshotId: string }>, schedules: Array<{ __typename: 'Schedule', id: string, cronSchedule: string, executionTimezone: string | null, mode: string, name: string, pipelineName: string, scheduleState: { __typename: 'InstigationState', id: string, selectorId: string, status: InstigationStatus } }>, sensors: Array<{ __typename: 'Sensor', id: string, jobOriginId: string, name: string, targets: Array<{ __typename: 'Target', mode: string, pipelineName: string }> | null, sensorState: { __typename: 'InstigationState', id: string, selectorId: string, status: InstigationStatus } }>, partitionSets: Array<{ __typename: 'PartitionSet', id: string, mode: string, pipelineName: string }>, assetGroups: Array<{ __typename: 'AssetGroup', groupName: string }>, location: { __typename: 'RepositoryLocation', id: string, name: string }, displayMetadata: Array<{ __typename: 'RepositoryMetadata', key: string, value: string }> }> } | null };

export type WorkspaceDisplayMetadataFragment = { __typename: 'RepositoryMetadata', key: string, value: string };

export type WorkspaceLocationFragment = { __typename: 'RepositoryLocation', id: string, isReloadSupported: boolean, serverId: string | null, name: string, repositories: Array<{ __typename: 'Repository', id: string, name: string, pipelines: Array<{ __typename: 'Pipeline', id: string, name: string, isJob: boolean, isAssetJob: boolean, pipelineSnapshotId: string }>, schedules: Array<{ __typename: 'Schedule', id: string, cronSchedule: string, executionTimezone: string | null, mode: string, name: string, pipelineName: string, scheduleState: { __typename: 'InstigationState', id: string, selectorId: string, status: InstigationStatus } }>, sensors: Array<{ __typename: 'Sensor', id: string, jobOriginId: string, name: string, targets: Array<{ __typename: 'Target', mode: string, pipelineName: string }> | null, sensorState: { __typename: 'InstigationState', id: string, selectorId: string, status: InstigationStatus } }>, partitionSets: Array<{ __typename: 'PartitionSet', id: string, mode: string, pipelineName: string }>, assetGroups: Array<{ __typename: 'AssetGroup', groupName: string }>, location: { __typename: 'RepositoryLocation', id: string, name: string }, displayMetadata: Array<{ __typename: 'RepositoryMetadata', key: string, value: string }> }> };

export type WorkspaceRepositoryFragment = { __typename: 'Repository', id: string, name: string, pipelines: Array<{ __typename: 'Pipeline', id: string, name: string, isJob: boolean, isAssetJob: boolean, pipelineSnapshotId: string }>, schedules: Array<{ __typename: 'Schedule', id: string, cronSchedule: string, executionTimezone: string | null, mode: string, name: string, pipelineName: string, scheduleState: { __typename: 'InstigationState', id: string, selectorId: string, status: InstigationStatus } }>, sensors: Array<{ __typename: 'Sensor', id: string, jobOriginId: string, name: string, targets: Array<{ __typename: 'Target', mode: string, pipelineName: string }> | null, sensorState: { __typename: 'InstigationState', id: string, selectorId: string, status: InstigationStatus } }>, partitionSets: Array<{ __typename: 'PartitionSet', id: string, mode: string, pipelineName: string }>, assetGroups: Array<{ __typename: 'AssetGroup', groupName: string }>, location: { __typename: 'RepositoryLocation', id: string, name: string }, displayMetadata: Array<{ __typename: 'RepositoryMetadata', key: string, value: string }> };

export type WorkspaceScheduleFragment = { __typename: 'Schedule', id: string, cronSchedule: string, executionTimezone: string | null, mode: string, name: string, pipelineName: string, scheduleState: { __typename: 'InstigationState', id: string, selectorId: string, status: InstigationStatus } };

export type WorkspaceSensorFragment = { __typename: 'Sensor', id: string, jobOriginId: string, name: string, targets: Array<{ __typename: 'Target', mode: string, pipelineName: string }> | null, sensorState: { __typename: 'InstigationState', id: string, selectorId: string, status: InstigationStatus } };

export type WorkspaceGraphsQueryQueryVariables = Exact<{
  selector: RepositorySelector;
}>;


export type WorkspaceGraphsQueryQuery = { __typename: 'DagitQuery', repositoryOrError: { __typename: 'PythonError', message: string, stack: Array<string>, errorChain: Array<{ __typename: 'ErrorChainLink', isExplicitLink: boolean, error: { __typename: 'PythonError', message: string, stack: Array<string> } }> } | { __typename: 'Repository', id: string, usedSolids: Array<{ __typename: 'UsedSolid', definition: { __typename: 'CompositeSolidDefinition', id: string, name: string, description: string | null } | { __typename: 'SolidDefinition' }, invocations: Array<{ __typename: 'NodeInvocationSite', pipeline: { __typename: 'Pipeline', id: string, name: string }, solidHandle: { __typename: 'SolidHandle', handleID: string } }> }>, pipelines: Array<{ __typename: 'Pipeline', id: string, name: string, isJob: boolean, graphName: string }> } | { __typename: 'RepositoryNotFoundError' } };

export type WorkspaceJobsQueryQueryVariables = Exact<{
  selector: RepositorySelector;
}>;


export type WorkspaceJobsQueryQuery = { __typename: 'DagitQuery', repositoryOrError: { __typename: 'PythonError', message: string, stack: Array<string>, errorChain: Array<{ __typename: 'ErrorChainLink', isExplicitLink: boolean, error: { __typename: 'PythonError', message: string, stack: Array<string> } }> } | { __typename: 'Repository', id: string, name: string, pipelines: Array<{ __typename: 'Pipeline', id: string, name: string, isJob: boolean }> } | { __typename: 'RepositoryNotFoundError' } };

export type WorkspaceSchedulesQueryQueryVariables = Exact<{
  selector: RepositorySelector;
}>;


export type WorkspaceSchedulesQueryQuery = { __typename: 'DagitQuery', repositoryOrError: { __typename: 'PythonError', message: string, stack: Array<string>, errorChain: Array<{ __typename: 'ErrorChainLink', isExplicitLink: boolean, error: { __typename: 'PythonError', message: string, stack: Array<string> } }> } | { __typename: 'Repository', id: string, name: string, schedules: Array<{ __typename: 'Schedule', id: string, name: string, description: string | null }> } | { __typename: 'RepositoryNotFoundError' } };

export type WorkspaceSensorsQueryQueryVariables = Exact<{
  selector: RepositorySelector;
}>;


export type WorkspaceSensorsQueryQuery = { __typename: 'DagitQuery', repositoryOrError: { __typename: 'PythonError', message: string, stack: Array<string>, errorChain: Array<{ __typename: 'ErrorChainLink', isExplicitLink: boolean, error: { __typename: 'PythonError', message: string, stack: Array<string> } }> } | { __typename: 'Repository', id: string, name: string, sensors: Array<{ __typename: 'Sensor', id: string, name: string, description: string | null }> } | { __typename: 'RepositoryNotFoundError' } };

export const CapturedLogFragmentDoc = {"kind":"Document","definitions":[{"kind":"FragmentDefinition","name":{"kind":"Name","value":"CapturedLog"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"CapturedLogs"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"stdout"}},{"kind":"Field","name":{"kind":"Name","value":"stderr"}},{"kind":"Field","name":{"kind":"Name","value":"cursor"}}]}}]} as unknown as DocumentNode<CapturedLogFragment, unknown>;
export const TickLogEventFragmentDoc = {"kind":"Document","definitions":[{"kind":"FragmentDefinition","name":{"kind":"Name","value":"TickLogEvent"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"InstigationEvent"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"message"}},{"kind":"Field","name":{"kind":"Name","value":"timestamp"}},{"kind":"Field","name":{"kind":"Name","value":"level"}}]}}]} as unknown as DocumentNode<TickLogEventFragment, unknown>;
export const PermissionFragmentFragmentDoc = {"kind":"Document","definitions":[{"kind":"FragmentDefinition","name":{"kind":"Name","value":"PermissionFragment"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"Permission"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"permission"}},{"kind":"Field","name":{"kind":"Name","value":"value"}},{"kind":"Field","name":{"kind":"Name","value":"disabledReason"}}]}}]} as unknown as DocumentNode<PermissionFragmentFragment, unknown>;
export const UnauthorizedErrorFragmentFragmentDoc = {"kind":"Document","definitions":[{"kind":"FragmentDefinition","name":{"kind":"Name","value":"UnauthorizedErrorFragment"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"UnauthorizedError"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"message"}}]}}]} as unknown as DocumentNode<UnauthorizedErrorFragmentFragment, unknown>;
export const AssetNodeLiveMaterializationFragmentDoc = {"kind":"Document","definitions":[{"kind":"FragmentDefinition","name":{"kind":"Name","value":"AssetNodeLiveMaterialization"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"MaterializationEvent"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"timestamp"}},{"kind":"Field","name":{"kind":"Name","value":"runId"}}]}}]} as unknown as DocumentNode<AssetNodeLiveMaterializationFragment, unknown>;
export const AssetNodeLiveFreshnessPolicyFragmentDoc = {"kind":"Document","definitions":[{"kind":"FragmentDefinition","name":{"kind":"Name","value":"AssetNodeLiveFreshnessPolicy"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"FreshnessPolicy"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"maximumLagMinutes"}},{"kind":"Field","name":{"kind":"Name","value":"cronSchedule"}}]}}]} as unknown as DocumentNode<AssetNodeLiveFreshnessPolicyFragment, unknown>;
export const AssetNodeLiveFreshnessInfoFragmentDoc = {"kind":"Document","definitions":[{"kind":"FragmentDefinition","name":{"kind":"Name","value":"AssetNodeLiveFreshnessInfo"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"AssetFreshnessInfo"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"currentMinutesLate"}}]}}]} as unknown as DocumentNode<AssetNodeLiveFreshnessInfoFragment, unknown>;
export const AssetNodeLiveObservationFragmentDoc = {"kind":"Document","definitions":[{"kind":"FragmentDefinition","name":{"kind":"Name","value":"AssetNodeLiveObservation"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"ObservationEvent"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"timestamp"}},{"kind":"Field","name":{"kind":"Name","value":"runId"}}]}}]} as unknown as DocumentNode<AssetNodeLiveObservationFragment, unknown>;
export const AssetNodeLiveFragmentFragmentDoc = {"kind":"Document","definitions":[{"kind":"FragmentDefinition","name":{"kind":"Name","value":"AssetNodeLiveFragment"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"AssetNode"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"opNames"}},{"kind":"Field","name":{"kind":"Name","value":"repository"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}}]}},{"kind":"Field","name":{"kind":"Name","value":"assetKey"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"path"}}]}},{"kind":"Field","name":{"kind":"Name","value":"assetMaterializations"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"limit"},"value":{"kind":"IntValue","value":"1"}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"FragmentSpread","name":{"kind":"Name","value":"AssetNodeLiveMaterialization"}}]}},{"kind":"Field","name":{"kind":"Name","value":"freshnessPolicy"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"FragmentSpread","name":{"kind":"Name","value":"AssetNodeLiveFreshnessPolicy"}}]}},{"kind":"Field","name":{"kind":"Name","value":"freshnessInfo"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"FragmentSpread","name":{"kind":"Name","value":"AssetNodeLiveFreshnessInfo"}}]}},{"kind":"Field","name":{"kind":"Name","value":"assetObservations"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"limit"},"value":{"kind":"IntValue","value":"1"}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"FragmentSpread","name":{"kind":"Name","value":"AssetNodeLiveObservation"}}]}},{"kind":"Field","name":{"kind":"Name","value":"currentLogicalVersion"}},{"kind":"Field","name":{"kind":"Name","value":"projectedLogicalVersion"}}]}}]} as unknown as DocumentNode<AssetNodeLiveFragmentFragment, unknown>;
export const ConfigTypeSchemaFragmentFragmentDoc = {"kind":"Document","definitions":[{"kind":"FragmentDefinition","name":{"kind":"Name","value":"ConfigTypeSchemaFragment"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"ConfigType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"__typename"}},{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"EnumConfigType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"givenName"}},{"kind":"Field","name":{"kind":"Name","value":"values"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"value"}},{"kind":"Field","name":{"kind":"Name","value":"description"}}]}}]}},{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"RegularConfigType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"givenName"}}]}},{"kind":"Field","name":{"kind":"Name","value":"key"}},{"kind":"Field","name":{"kind":"Name","value":"description"}},{"kind":"Field","name":{"kind":"Name","value":"isSelector"}},{"kind":"Field","name":{"kind":"Name","value":"typeParamKeys"}},{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"CompositeConfigType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"fields"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"name"}},{"kind":"Field","name":{"kind":"Name","value":"description"}},{"kind":"Field","name":{"kind":"Name","value":"isRequired"}},{"kind":"Field","name":{"kind":"Name","value":"configTypeKey"}},{"kind":"Field","name":{"kind":"Name","value":"defaultValueAsJson"}}]}}]}},{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"ScalarUnionConfigType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"scalarTypeKey"}},{"kind":"Field","name":{"kind":"Name","value":"nonScalarTypeKey"}}]}},{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"MapConfigType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"keyLabelName"}}]}}]}}]} as unknown as DocumentNode<ConfigTypeSchemaFragmentFragment, unknown>;
export const AssetNodeConfigFragmentFragmentDoc = {"kind":"Document","definitions":[{"kind":"FragmentDefinition","name":{"kind":"Name","value":"AssetNodeConfigFragment"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"AssetNode"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"configField"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"name"}},{"kind":"Field","name":{"kind":"Name","value":"isRequired"}},{"kind":"Field","name":{"kind":"Name","value":"configType"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"FragmentSpread","name":{"kind":"Name","value":"ConfigTypeSchemaFragment"}},{"kind":"Field","name":{"kind":"Name","value":"recursiveConfigTypes"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"FragmentSpread","name":{"kind":"Name","value":"ConfigTypeSchemaFragment"}}]}}]}}]}}]}}]} as unknown as DocumentNode<AssetNodeConfigFragmentFragment, unknown>;
export const ConstraintsForTableColumnFragmentDoc = {"kind":"Document","definitions":[{"kind":"FragmentDefinition","name":{"kind":"Name","value":"ConstraintsForTableColumn"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"TableColumnConstraints"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"nullable"}},{"kind":"Field","name":{"kind":"Name","value":"unique"}},{"kind":"Field","name":{"kind":"Name","value":"other"}}]}}]} as unknown as DocumentNode<ConstraintsForTableColumnFragment, unknown>;
export const TableSchemaFragmentFragmentDoc = {"kind":"Document","definitions":[{"kind":"FragmentDefinition","name":{"kind":"Name","value":"TableSchemaFragment"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"TableSchema"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"__typename"}},{"kind":"Field","name":{"kind":"Name","value":"columns"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"name"}},{"kind":"Field","name":{"kind":"Name","value":"description"}},{"kind":"Field","name":{"kind":"Name","value":"type"}},{"kind":"Field","name":{"kind":"Name","value":"constraints"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"FragmentSpread","name":{"kind":"Name","value":"ConstraintsForTableColumn"}}]}}]}},{"kind":"Field","name":{"kind":"Name","value":"constraints"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"other"}}]}}]}}]} as unknown as DocumentNode<TableSchemaFragmentFragment, unknown>;
export const TableSchemaForMetadataEntryFragmentDoc = {"kind":"Document","definitions":[{"kind":"FragmentDefinition","name":{"kind":"Name","value":"TableSchemaForMetadataEntry"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"TableSchemaMetadataEntry"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"schema"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"FragmentSpread","name":{"kind":"Name","value":"TableSchemaFragment"}}]}}]}}]} as unknown as DocumentNode<TableSchemaForMetadataEntryFragment, unknown>;
export const MetadataEntryFragmentFragmentDoc = {"kind":"Document","definitions":[{"kind":"FragmentDefinition","name":{"kind":"Name","value":"MetadataEntryFragment"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"MetadataEntry"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"label"}},{"kind":"Field","name":{"kind":"Name","value":"description"}},{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"PathMetadataEntry"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"path"}}]}},{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"NotebookMetadataEntry"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"path"}}]}},{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"JsonMetadataEntry"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"jsonString"}}]}},{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"UrlMetadataEntry"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"url"}}]}},{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"TextMetadataEntry"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"text"}}]}},{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"MarkdownMetadataEntry"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"mdStr"}}]}},{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"PythonArtifactMetadataEntry"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"module"}},{"kind":"Field","name":{"kind":"Name","value":"name"}}]}},{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"FloatMetadataEntry"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"floatValue"}}]}},{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"IntMetadataEntry"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"intValue"}},{"kind":"Field","name":{"kind":"Name","value":"intRepr"}}]}},{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"BoolMetadataEntry"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"boolValue"}}]}},{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"PipelineRunMetadataEntry"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"runId"}}]}},{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"AssetMetadataEntry"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"assetKey"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"path"}}]}}]}},{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"TableMetadataEntry"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"table"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"records"}},{"kind":"Field","name":{"kind":"Name","value":"schema"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"FragmentSpread","name":{"kind":"Name","value":"TableSchemaFragment"}}]}}]}}]}},{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"TableSchemaMetadataEntry"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"FragmentSpread","name":{"kind":"Name","value":"TableSchemaForMetadataEntry"}}]}}]}}]} as unknown as DocumentNode<MetadataEntryFragmentFragment, unknown>;
export const _DagsterTypeFragmentFragmentDoc = {"kind":"Document","definitions":[{"kind":"FragmentDefinition","name":{"kind":"Name","value":"_DagsterTypeFragment"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"DagsterType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"key"}},{"kind":"Field","name":{"kind":"Name","value":"name"}},{"kind":"Field","name":{"kind":"Name","value":"displayName"}},{"kind":"Field","name":{"kind":"Name","value":"description"}},{"kind":"Field","name":{"kind":"Name","value":"isNullable"}},{"kind":"Field","name":{"kind":"Name","value":"isList"}},{"kind":"Field","name":{"kind":"Name","value":"isBuiltin"}},{"kind":"Field","name":{"kind":"Name","value":"isNothing"}},{"kind":"Field","name":{"kind":"Name","value":"metadataEntries"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"FragmentSpread","name":{"kind":"Name","value":"MetadataEntryFragment"}}]}},{"kind":"Field","name":{"kind":"Name","value":"inputSchemaType"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"FragmentSpread","name":{"kind":"Name","value":"ConfigTypeSchemaFragment"}},{"kind":"Field","name":{"kind":"Name","value":"recursiveConfigTypes"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"FragmentSpread","name":{"kind":"Name","value":"ConfigTypeSchemaFragment"}}]}}]}},{"kind":"Field","name":{"kind":"Name","value":"outputSchemaType"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"FragmentSpread","name":{"kind":"Name","value":"ConfigTypeSchemaFragment"}},{"kind":"Field","name":{"kind":"Name","value":"recursiveConfigTypes"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"FragmentSpread","name":{"kind":"Name","value":"ConfigTypeSchemaFragment"}}]}}]}}]}}]} as unknown as DocumentNode<_DagsterTypeFragmentFragment, unknown>;
export const DagsterTypeFragmentFragmentDoc = {"kind":"Document","definitions":[{"kind":"FragmentDefinition","name":{"kind":"Name","value":"DagsterTypeFragment"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"DagsterType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"FragmentSpread","name":{"kind":"Name","value":"_DagsterTypeFragment"}},{"kind":"Field","name":{"kind":"Name","value":"innerTypes"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"FragmentSpread","name":{"kind":"Name","value":"_DagsterTypeFragment"}}]}}]}}]} as unknown as DocumentNode<DagsterTypeFragmentFragment, unknown>;
export const AssetNodeOpMetadataFragmentFragmentDoc = {"kind":"Document","definitions":[{"kind":"FragmentDefinition","name":{"kind":"Name","value":"AssetNodeOpMetadataFragment"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"AssetNode"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"metadataEntries"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"FragmentSpread","name":{"kind":"Name","value":"MetadataEntryFragment"}}]}},{"kind":"Field","name":{"kind":"Name","value":"type"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"FragmentSpread","name":{"kind":"Name","value":"DagsterTypeFragment"}}]}}]}}]} as unknown as DocumentNode<AssetNodeOpMetadataFragmentFragment, unknown>;
export const SidebarAssetFragmentFragmentDoc = {"kind":"Document","definitions":[{"kind":"FragmentDefinition","name":{"kind":"Name","value":"SidebarAssetFragment"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"AssetNode"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"description"}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"AssetNodeConfigFragment"}},{"kind":"Field","name":{"kind":"Name","value":"metadataEntries"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"FragmentSpread","name":{"kind":"Name","value":"MetadataEntryFragment"}}]}},{"kind":"Field","name":{"kind":"Name","value":"partitionDefinition"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"description"}}]}},{"kind":"Field","name":{"kind":"Name","value":"assetKey"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"path"}}]}},{"kind":"Field","name":{"kind":"Name","value":"op"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"name"}},{"kind":"Field","name":{"kind":"Name","value":"description"}},{"kind":"Field","name":{"kind":"Name","value":"metadata"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"key"}},{"kind":"Field","name":{"kind":"Name","value":"value"}}]}}]}},{"kind":"Field","name":{"kind":"Name","value":"opVersion"}},{"kind":"Field","name":{"kind":"Name","value":"repository"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"name"}},{"kind":"Field","name":{"kind":"Name","value":"location"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"name"}}]}}]}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"AssetNodeOpMetadataFragment"}}]}}]} as unknown as DocumentNode<SidebarAssetFragmentFragment, unknown>;
export const AssetNodeKeyFragmentDoc = {"kind":"Document","definitions":[{"kind":"FragmentDefinition","name":{"kind":"Name","value":"AssetNodeKey"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"AssetKey"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"path"}}]}}]} as unknown as DocumentNode<AssetNodeKeyFragment, unknown>;
export const AssetNodeFragmentFragmentDoc = {"kind":"Document","definitions":[{"kind":"FragmentDefinition","name":{"kind":"Name","value":"AssetNodeFragment"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"AssetNode"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"graphName"}},{"kind":"Field","name":{"kind":"Name","value":"jobNames"}},{"kind":"Field","name":{"kind":"Name","value":"opNames"}},{"kind":"Field","name":{"kind":"Name","value":"opVersion"}},{"kind":"Field","name":{"kind":"Name","value":"description"}},{"kind":"Field","name":{"kind":"Name","value":"computeKind"}},{"kind":"Field","name":{"kind":"Name","value":"isPartitioned"}},{"kind":"Field","name":{"kind":"Name","value":"isObservable"}},{"kind":"Field","name":{"kind":"Name","value":"isSource"}},{"kind":"Field","name":{"kind":"Name","value":"assetKey"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"FragmentSpread","name":{"kind":"Name","value":"AssetNodeKey"}}]}}]}}]} as unknown as DocumentNode<AssetNodeFragmentFragment, unknown>;
export const AssetNodeForGraphQueryFragmentDoc = {"kind":"Document","definitions":[{"kind":"FragmentDefinition","name":{"kind":"Name","value":"AssetNodeForGraphQuery"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"AssetNode"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"groupName"}},{"kind":"Field","name":{"kind":"Name","value":"repository"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"name"}},{"kind":"Field","name":{"kind":"Name","value":"location"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"name"}}]}}]}},{"kind":"Field","name":{"kind":"Name","value":"dependencyKeys"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"path"}}]}},{"kind":"Field","name":{"kind":"Name","value":"dependedByKeys"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"path"}}]}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"AssetNodeFragment"}}]}}]} as unknown as DocumentNode<AssetNodeForGraphQueryFragment, unknown>;
export const AssetLatestInfoRunFragmentDoc = {"kind":"Document","definitions":[{"kind":"FragmentDefinition","name":{"kind":"Name","value":"AssetLatestInfoRun"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"Run"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"status"}},{"kind":"Field","name":{"kind":"Name","value":"endTime"}},{"kind":"Field","name":{"kind":"Name","value":"id"}}]}}]} as unknown as DocumentNode<AssetLatestInfoRunFragment, unknown>;
export const AssetLatestInfoFragmentFragmentDoc = {"kind":"Document","definitions":[{"kind":"FragmentDefinition","name":{"kind":"Name","value":"AssetLatestInfoFragment"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"AssetLatestInfo"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"assetKey"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"path"}}]}},{"kind":"Field","name":{"kind":"Name","value":"unstartedRunIds"}},{"kind":"Field","name":{"kind":"Name","value":"inProgressRunIds"}},{"kind":"Field","name":{"kind":"Name","value":"latestRun"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"AssetLatestInfoRun"}}]}}]}}]} as unknown as DocumentNode<AssetLatestInfoFragmentFragment, unknown>;
export const AssetTableDefinitionFragmentFragmentDoc = {"kind":"Document","definitions":[{"kind":"FragmentDefinition","name":{"kind":"Name","value":"AssetTableDefinitionFragment"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"AssetNode"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"groupName"}},{"kind":"Field","name":{"kind":"Name","value":"isSource"}},{"kind":"Field","name":{"kind":"Name","value":"partitionDefinition"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"description"}}]}},{"kind":"Field","name":{"kind":"Name","value":"description"}},{"kind":"Field","name":{"kind":"Name","value":"repository"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"name"}},{"kind":"Field","name":{"kind":"Name","value":"location"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"name"}}]}}]}}]}}]} as unknown as DocumentNode<AssetTableDefinitionFragmentFragment, unknown>;
export const AssetTableFragmentFragmentDoc = {"kind":"Document","definitions":[{"kind":"FragmentDefinition","name":{"kind":"Name","value":"AssetTableFragment"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"Asset"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"__typename"}},{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"key"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"path"}}]}},{"kind":"Field","name":{"kind":"Name","value":"definition"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"AssetTableDefinitionFragment"}}]}}]}}]} as unknown as DocumentNode<AssetTableFragmentFragment, unknown>;
export const ScheduleSwitchFragmentFragmentDoc = {"kind":"Document","definitions":[{"kind":"FragmentDefinition","name":{"kind":"Name","value":"ScheduleSwitchFragment"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"Schedule"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"name"}},{"kind":"Field","name":{"kind":"Name","value":"cronSchedule"}},{"kind":"Field","name":{"kind":"Name","value":"executionTimezone"}},{"kind":"Field","name":{"kind":"Name","value":"scheduleState"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"selectorId"}},{"kind":"Field","name":{"kind":"Name","value":"status"}}]}}]}}]} as unknown as DocumentNode<ScheduleSwitchFragmentFragment, unknown>;
export const SensorSwitchFragmentFragmentDoc = {"kind":"Document","definitions":[{"kind":"FragmentDefinition","name":{"kind":"Name","value":"SensorSwitchFragment"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"Sensor"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"jobOriginId"}},{"kind":"Field","name":{"kind":"Name","value":"name"}},{"kind":"Field","name":{"kind":"Name","value":"sensorState"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"selectorId"}},{"kind":"Field","name":{"kind":"Name","value":"status"}}]}}]}}]} as unknown as DocumentNode<SensorSwitchFragmentFragment, unknown>;
export const AssetNodeInstigatorsFragmentFragmentDoc = {"kind":"Document","definitions":[{"kind":"FragmentDefinition","name":{"kind":"Name","value":"AssetNodeInstigatorsFragment"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"AssetNode"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"jobs"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"name"}},{"kind":"Field","name":{"kind":"Name","value":"schedules"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"__typename"}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"ScheduleSwitchFragment"}}]}},{"kind":"Field","name":{"kind":"Name","value":"sensors"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"__typename"}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"SensorSwitchFragment"}}]}}]}}]}}]} as unknown as DocumentNode<AssetNodeInstigatorsFragmentFragment, unknown>;
export const AssetNodeDefinitionFragmentFragmentDoc = {"kind":"Document","definitions":[{"kind":"FragmentDefinition","name":{"kind":"Name","value":"AssetNodeDefinitionFragment"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"AssetNode"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"AssetNodeConfigFragment"}},{"kind":"Field","name":{"kind":"Name","value":"description"}},{"kind":"Field","name":{"kind":"Name","value":"graphName"}},{"kind":"Field","name":{"kind":"Name","value":"opNames"}},{"kind":"Field","name":{"kind":"Name","value":"opVersion"}},{"kind":"Field","name":{"kind":"Name","value":"jobNames"}},{"kind":"Field","name":{"kind":"Name","value":"partitionDefinition"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"description"}}]}},{"kind":"Field","name":{"kind":"Name","value":"repository"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"name"}},{"kind":"Field","name":{"kind":"Name","value":"location"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"name"}}]}}]}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"AssetNodeFragment"}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"AssetNodeOpMetadataFragment"}}]}}]} as unknown as DocumentNode<AssetNodeDefinitionFragmentFragment, unknown>;
export const AssetViewDefinitionNodeFragmentDoc = {"kind":"Document","definitions":[{"kind":"FragmentDefinition","name":{"kind":"Name","value":"AssetViewDefinitionNode"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"AssetNode"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"groupName"}},{"kind":"Field","name":{"kind":"Name","value":"partitionDefinition"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"__typename"}},{"kind":"Field","name":{"kind":"Name","value":"description"}}]}},{"kind":"Field","name":{"kind":"Name","value":"partitionKeysByDimension"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"name"}}]}},{"kind":"Field","name":{"kind":"Name","value":"repository"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"name"}},{"kind":"Field","name":{"kind":"Name","value":"location"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"name"}}]}}]}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"AssetNodeInstigatorsFragment"}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"AssetNodeDefinitionFragment"}}]}}]} as unknown as DocumentNode<AssetViewDefinitionNodeFragment, unknown>;
export const AssetCatalogGroupTableNodeFragmentDoc = {"kind":"Document","definitions":[{"kind":"FragmentDefinition","name":{"kind":"Name","value":"AssetCatalogGroupTableNode"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"AssetNode"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"assetKey"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"path"}}]}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"AssetTableDefinitionFragment"}}]}}]} as unknown as DocumentNode<AssetCatalogGroupTableNodeFragment, unknown>;
export const LatestMaterializationMetadataFragmentFragmentDoc = {"kind":"Document","definitions":[{"kind":"FragmentDefinition","name":{"kind":"Name","value":"LatestMaterializationMetadataFragment"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"MaterializationEvent"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"partition"}},{"kind":"Field","name":{"kind":"Name","value":"runOrError"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"PipelineRun"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"runId"}},{"kind":"Field","name":{"kind":"Name","value":"mode"}},{"kind":"Field","name":{"kind":"Name","value":"pipelineName"}},{"kind":"Field","name":{"kind":"Name","value":"pipelineSnapshotId"}},{"kind":"Field","name":{"kind":"Name","value":"repositoryOrigin"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"repositoryName"}},{"kind":"Field","name":{"kind":"Name","value":"repositoryLocationName"}}]}}]}}]}},{"kind":"Field","name":{"kind":"Name","value":"runId"}},{"kind":"Field","name":{"kind":"Name","value":"timestamp"}},{"kind":"Field","name":{"kind":"Name","value":"stepKey"}},{"kind":"Field","name":{"kind":"Name","value":"metadataEntries"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"FragmentSpread","name":{"kind":"Name","value":"MetadataEntryFragment"}}]}},{"kind":"Field","name":{"kind":"Name","value":"assetLineage"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"assetKey"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"path"}}]}},{"kind":"Field","name":{"kind":"Name","value":"partitions"}}]}}]}}]} as unknown as DocumentNode<LatestMaterializationMetadataFragmentFragment, unknown>;
export const PartitionDefinitionForLaunchAssetFragmentDoc = {"kind":"Document","definitions":[{"kind":"FragmentDefinition","name":{"kind":"Name","value":"PartitionDefinitionForLaunchAsset"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"PartitionDefinition"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"description"}},{"kind":"Field","name":{"kind":"Name","value":"dimensionTypes"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"name"}}]}}]}}]} as unknown as DocumentNode<PartitionDefinitionForLaunchAssetFragment, unknown>;
export const LaunchAssetExecutionAssetNodeFragmentFragmentDoc = {"kind":"Document","definitions":[{"kind":"FragmentDefinition","name":{"kind":"Name","value":"LaunchAssetExecutionAssetNodeFragment"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"AssetNode"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"opNames"}},{"kind":"Field","name":{"kind":"Name","value":"jobNames"}},{"kind":"Field","name":{"kind":"Name","value":"graphName"}},{"kind":"Field","name":{"kind":"Name","value":"partitionDefinition"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"FragmentSpread","name":{"kind":"Name","value":"PartitionDefinitionForLaunchAsset"}}]}},{"kind":"Field","name":{"kind":"Name","value":"isObservable"}},{"kind":"Field","name":{"kind":"Name","value":"isSource"}},{"kind":"Field","name":{"kind":"Name","value":"assetKey"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"path"}}]}},{"kind":"Field","name":{"kind":"Name","value":"dependencyKeys"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"path"}}]}},{"kind":"Field","name":{"kind":"Name","value":"repository"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"name"}},{"kind":"Field","name":{"kind":"Name","value":"location"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"name"}}]}}]}},{"kind":"Field","name":{"kind":"Name","value":"requiredResources"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"resourceKey"}}]}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"AssetNodeConfigFragment"}}]}}]} as unknown as DocumentNode<LaunchAssetExecutionAssetNodeFragmentFragment, unknown>;
export const AssetLineageFragmentFragmentDoc = {"kind":"Document","definitions":[{"kind":"FragmentDefinition","name":{"kind":"Name","value":"AssetLineageFragment"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"AssetLineageInfo"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"assetKey"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"path"}}]}},{"kind":"Field","name":{"kind":"Name","value":"partitions"}}]}}]} as unknown as DocumentNode<AssetLineageFragmentFragment, unknown>;
export const AssetMaterializationFragmentFragmentDoc = {"kind":"Document","definitions":[{"kind":"FragmentDefinition","name":{"kind":"Name","value":"AssetMaterializationFragment"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"MaterializationEvent"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"partition"}},{"kind":"Field","name":{"kind":"Name","value":"runOrError"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"PipelineRun"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"runId"}},{"kind":"Field","name":{"kind":"Name","value":"mode"}},{"kind":"Field","name":{"kind":"Name","value":"repositoryOrigin"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"repositoryName"}},{"kind":"Field","name":{"kind":"Name","value":"repositoryLocationName"}}]}},{"kind":"Field","name":{"kind":"Name","value":"status"}},{"kind":"Field","name":{"kind":"Name","value":"pipelineName"}},{"kind":"Field","name":{"kind":"Name","value":"pipelineSnapshotId"}}]}}]}},{"kind":"Field","name":{"kind":"Name","value":"runId"}},{"kind":"Field","name":{"kind":"Name","value":"timestamp"}},{"kind":"Field","name":{"kind":"Name","value":"stepKey"}},{"kind":"Field","name":{"kind":"Name","value":"label"}},{"kind":"Field","name":{"kind":"Name","value":"description"}},{"kind":"Field","name":{"kind":"Name","value":"metadataEntries"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"FragmentSpread","name":{"kind":"Name","value":"MetadataEntryFragment"}}]}},{"kind":"Field","name":{"kind":"Name","value":"assetLineage"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"FragmentSpread","name":{"kind":"Name","value":"AssetLineageFragment"}}]}}]}}]} as unknown as DocumentNode<AssetMaterializationFragmentFragment, unknown>;
export const AssetObservationFragmentFragmentDoc = {"kind":"Document","definitions":[{"kind":"FragmentDefinition","name":{"kind":"Name","value":"AssetObservationFragment"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"ObservationEvent"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"partition"}},{"kind":"Field","name":{"kind":"Name","value":"runOrError"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"PipelineRun"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"runId"}},{"kind":"Field","name":{"kind":"Name","value":"mode"}},{"kind":"Field","name":{"kind":"Name","value":"repositoryOrigin"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"repositoryName"}},{"kind":"Field","name":{"kind":"Name","value":"repositoryLocationName"}}]}},{"kind":"Field","name":{"kind":"Name","value":"status"}},{"kind":"Field","name":{"kind":"Name","value":"pipelineName"}},{"kind":"Field","name":{"kind":"Name","value":"pipelineSnapshotId"}}]}}]}},{"kind":"Field","name":{"kind":"Name","value":"runId"}},{"kind":"Field","name":{"kind":"Name","value":"timestamp"}},{"kind":"Field","name":{"kind":"Name","value":"stepKey"}},{"kind":"Field","name":{"kind":"Name","value":"label"}},{"kind":"Field","name":{"kind":"Name","value":"description"}},{"kind":"Field","name":{"kind":"Name","value":"metadataEntries"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"FragmentSpread","name":{"kind":"Name","value":"MetadataEntryFragment"}}]}}]}}]} as unknown as DocumentNode<AssetObservationFragmentFragment, unknown>;
export const ConfigEditorValidationFragmentFragmentDoc = {"kind":"Document","definitions":[{"kind":"FragmentDefinition","name":{"kind":"Name","value":"ConfigEditorValidationFragment"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"PipelineConfigValidationResult"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"__typename"}},{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"RunConfigValidationInvalid"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"errors"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"__typename"}},{"kind":"Field","name":{"kind":"Name","value":"reason"}},{"kind":"Field","name":{"kind":"Name","value":"message"}},{"kind":"Field","name":{"kind":"Name","value":"stack"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"entries"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"__typename"}},{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"EvaluationStackPathEntry"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"fieldName"}}]}},{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"EvaluationStackListItemEntry"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"listIndex"}}]}},{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"EvaluationStackMapKeyEntry"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"mapKey"}}]}},{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"EvaluationStackMapValueEntry"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"mapKey"}}]}}]}}]}}]}}]}}]}}]} as unknown as DocumentNode<ConfigEditorValidationFragmentFragment, unknown>;
export const RunTimeFragmentFragmentDoc = {"kind":"Document","definitions":[{"kind":"FragmentDefinition","name":{"kind":"Name","value":"RunTimeFragment"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"Run"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"runId"}},{"kind":"Field","name":{"kind":"Name","value":"status"}},{"kind":"Field","name":{"kind":"Name","value":"startTime"}},{"kind":"Field","name":{"kind":"Name","value":"endTime"}},{"kind":"Field","name":{"kind":"Name","value":"updateTime"}}]}}]} as unknown as DocumentNode<RunTimeFragmentFragment, unknown>;
export const RunGroupPanelRunFragmentDoc = {"kind":"Document","definitions":[{"kind":"FragmentDefinition","name":{"kind":"Name","value":"RunGroupPanelRun"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"Run"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"runId"}},{"kind":"Field","name":{"kind":"Name","value":"parentRunId"}},{"kind":"Field","name":{"kind":"Name","value":"status"}},{"kind":"Field","name":{"kind":"Name","value":"stepKeysToExecute"}},{"kind":"Field","name":{"kind":"Name","value":"pipelineName"}},{"kind":"Field","name":{"kind":"Name","value":"tags"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"key"}},{"kind":"Field","name":{"kind":"Name","value":"value"}}]}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"RunTimeFragment"}}]}}]} as unknown as DocumentNode<RunGroupPanelRunFragment, unknown>;
export const PartitionStatusesForBackfillFragmentDoc = {"kind":"Document","definitions":[{"kind":"FragmentDefinition","name":{"kind":"Name","value":"PartitionStatusesForBackfill"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"PartitionStatuses"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"results"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"partitionName"}},{"kind":"Field","name":{"kind":"Name","value":"runId"}},{"kind":"Field","name":{"kind":"Name","value":"runStatus"}}]}}]}}]} as unknown as DocumentNode<PartitionStatusesForBackfillFragment, unknown>;
export const PartitionSetForBackfillTableFragmentDoc = {"kind":"Document","definitions":[{"kind":"FragmentDefinition","name":{"kind":"Name","value":"PartitionSetForBackfillTable"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"PartitionSet"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"name"}},{"kind":"Field","name":{"kind":"Name","value":"mode"}},{"kind":"Field","name":{"kind":"Name","value":"pipelineName"}},{"kind":"Field","name":{"kind":"Name","value":"repositoryOrigin"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"repositoryName"}},{"kind":"Field","name":{"kind":"Name","value":"repositoryLocationName"}}]}}]}}]} as unknown as DocumentNode<PartitionSetForBackfillTableFragment, unknown>;
export const PythonErrorChainFragmentDoc = {"kind":"Document","definitions":[{"kind":"FragmentDefinition","name":{"kind":"Name","value":"PythonErrorChain"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"ErrorChainLink"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"isExplicitLink"}},{"kind":"Field","name":{"kind":"Name","value":"error"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"message"}},{"kind":"Field","name":{"kind":"Name","value":"stack"}}]}}]}}]} as unknown as DocumentNode<PythonErrorChainFragment, unknown>;
export const PythonErrorFragmentFragmentDoc = {"kind":"Document","definitions":[{"kind":"FragmentDefinition","name":{"kind":"Name","value":"PythonErrorFragment"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"PythonError"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"__typename"}},{"kind":"Field","name":{"kind":"Name","value":"message"}},{"kind":"Field","name":{"kind":"Name","value":"stack"}},{"kind":"Field","name":{"kind":"Name","value":"errorChain"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"FragmentSpread","name":{"kind":"Name","value":"PythonErrorChain"}}]}}]}}]} as unknown as DocumentNode<PythonErrorFragmentFragment, unknown>;
export const BackfillTableFragmentFragmentDoc = {"kind":"Document","definitions":[{"kind":"FragmentDefinition","name":{"kind":"Name","value":"BackfillTableFragment"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"PartitionBackfill"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"backfillId"}},{"kind":"Field","name":{"kind":"Name","value":"status"}},{"kind":"Field","name":{"kind":"Name","value":"numCancelable"}},{"kind":"Field","name":{"kind":"Name","value":"partitionNames"}},{"kind":"Field","name":{"kind":"Name","value":"numPartitions"}},{"kind":"Field","name":{"kind":"Name","value":"timestamp"}},{"kind":"Field","name":{"kind":"Name","value":"partitionSetName"}},{"kind":"Field","name":{"kind":"Name","value":"partitionSet"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"PartitionSetForBackfillTable"}}]}},{"kind":"Field","name":{"kind":"Name","value":"assetSelection"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"path"}}]}},{"kind":"Field","name":{"kind":"Name","value":"error"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"FragmentSpread","name":{"kind":"Name","value":"PythonErrorFragment"}}]}}]}}]} as unknown as DocumentNode<BackfillTableFragmentFragment, unknown>;
export const DaemonStatusForListFragmentDoc = {"kind":"Document","definitions":[{"kind":"FragmentDefinition","name":{"kind":"Name","value":"DaemonStatusForList"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"DaemonStatus"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"daemonType"}},{"kind":"Field","name":{"kind":"Name","value":"required"}},{"kind":"Field","name":{"kind":"Name","value":"healthy"}},{"kind":"Field","name":{"kind":"Name","value":"lastHeartbeatErrors"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"FragmentSpread","name":{"kind":"Name","value":"PythonErrorFragment"}}]}},{"kind":"Field","name":{"kind":"Name","value":"lastHeartbeatTime"}}]}}]} as unknown as DocumentNode<DaemonStatusForListFragment, unknown>;
export const DaemonHealthFragmentFragmentDoc = {"kind":"Document","definitions":[{"kind":"FragmentDefinition","name":{"kind":"Name","value":"DaemonHealthFragment"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"DaemonHealth"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"allDaemonStatuses"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"DaemonStatusForList"}}]}}]}}]} as unknown as DocumentNode<DaemonHealthFragmentFragment, unknown>;
export const InstanceHealthFragmentFragmentDoc = {"kind":"Document","definitions":[{"kind":"FragmentDefinition","name":{"kind":"Name","value":"InstanceHealthFragment"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"Instance"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"daemonHealth"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"DaemonHealthFragment"}}]}},{"kind":"Field","name":{"kind":"Name","value":"hasInfo"}}]}}]} as unknown as DocumentNode<InstanceHealthFragmentFragment, unknown>;
export const ScheduleFutureTicksFragmentFragmentDoc = {"kind":"Document","definitions":[{"kind":"FragmentDefinition","name":{"kind":"Name","value":"ScheduleFutureTicksFragment"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"Schedule"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"executionTimezone"}},{"kind":"Field","name":{"kind":"Name","value":"scheduleState"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"status"}}]}},{"kind":"Field","name":{"kind":"Name","value":"futureTicks"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"cursor"},"value":{"kind":"Variable","name":{"kind":"Name","value":"tickCursor"}}},{"kind":"Argument","name":{"kind":"Name","value":"until"},"value":{"kind":"Variable","name":{"kind":"Name","value":"ticksUntil"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"results"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"timestamp"}}]}}]}}]}}]} as unknown as DocumentNode<ScheduleFutureTicksFragmentFragment, unknown>;
export const NextTickForHistoyFragmentDoc = {"kind":"Document","definitions":[{"kind":"FragmentDefinition","name":{"kind":"Name","value":"NextTickForHistoy"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"FutureInstigationTick"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"timestamp"}}]}}]} as unknown as DocumentNode<NextTickForHistoyFragment, unknown>;
export const RunStatusFragmentFragmentDoc = {"kind":"Document","definitions":[{"kind":"FragmentDefinition","name":{"kind":"Name","value":"RunStatusFragment"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"Run"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"runId"}},{"kind":"Field","name":{"kind":"Name","value":"status"}}]}}]} as unknown as DocumentNode<RunStatusFragmentFragment, unknown>;
export const TickTagFragmentFragmentDoc = {"kind":"Document","definitions":[{"kind":"FragmentDefinition","name":{"kind":"Name","value":"TickTagFragment"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"InstigationTick"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"status"}},{"kind":"Field","name":{"kind":"Name","value":"timestamp"}},{"kind":"Field","name":{"kind":"Name","value":"skipReason"}},{"kind":"Field","name":{"kind":"Name","value":"runIds"}},{"kind":"Field","name":{"kind":"Name","value":"runKeys"}},{"kind":"Field","name":{"kind":"Name","value":"error"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"FragmentSpread","name":{"kind":"Name","value":"PythonErrorFragment"}}]}}]}}]} as unknown as DocumentNode<TickTagFragmentFragment, unknown>;
export const HistoryTickFragmentDoc = {"kind":"Document","definitions":[{"kind":"FragmentDefinition","name":{"kind":"Name","value":"HistoryTick"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"InstigationTick"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"status"}},{"kind":"Field","name":{"kind":"Name","value":"timestamp"}},{"kind":"Field","name":{"kind":"Name","value":"cursor"}},{"kind":"Field","name":{"kind":"Name","value":"skipReason"}},{"kind":"Field","name":{"kind":"Name","value":"runIds"}},{"kind":"Field","name":{"kind":"Name","value":"runs"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"status"}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"RunStatusFragment"}}]}},{"kind":"Field","name":{"kind":"Name","value":"originRunIds"}},{"kind":"Field","name":{"kind":"Name","value":"error"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"FragmentSpread","name":{"kind":"Name","value":"PythonErrorFragment"}}]}},{"kind":"Field","name":{"kind":"Name","value":"logKey"}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"TickTagFragment"}}]}}]} as unknown as DocumentNode<HistoryTickFragment, unknown>;
export const ConfigPartitionResultFragmentDoc = {"kind":"Document","definitions":[{"kind":"FragmentDefinition","name":{"kind":"Name","value":"ConfigPartitionResult"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"Partition"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"name"}}]}}]} as unknown as DocumentNode<ConfigPartitionResultFragment, unknown>;
export const PartitionSetForConfigEditorFragmentDoc = {"kind":"Document","definitions":[{"kind":"FragmentDefinition","name":{"kind":"Name","value":"PartitionSetForConfigEditor"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"PartitionSet"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"name"}},{"kind":"Field","name":{"kind":"Name","value":"mode"}},{"kind":"Field","name":{"kind":"Name","value":"solidSelection"}}]}}]} as unknown as DocumentNode<PartitionSetForConfigEditorFragment, unknown>;
export const ConfigEditorGeneratorPartitionSetsFragmentFragmentDoc = {"kind":"Document","definitions":[{"kind":"FragmentDefinition","name":{"kind":"Name","value":"ConfigEditorGeneratorPartitionSetsFragment"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"PartitionSets"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"results"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"PartitionSetForConfigEditor"}}]}}]}}]} as unknown as DocumentNode<ConfigEditorGeneratorPartitionSetsFragmentFragment, unknown>;
export const LaunchpadSessionPartitionSetsFragmentFragmentDoc = {"kind":"Document","definitions":[{"kind":"FragmentDefinition","name":{"kind":"Name","value":"LaunchpadSessionPartitionSetsFragment"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"PartitionSets"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"FragmentSpread","name":{"kind":"Name","value":"ConfigEditorGeneratorPartitionSetsFragment"}}]}}]} as unknown as DocumentNode<LaunchpadSessionPartitionSetsFragmentFragment, unknown>;
export const ConfigEditorPipelinePresetFragmentDoc = {"kind":"Document","definitions":[{"kind":"FragmentDefinition","name":{"kind":"Name","value":"ConfigEditorPipelinePreset"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"PipelinePreset"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"name"}},{"kind":"Field","name":{"kind":"Name","value":"mode"}},{"kind":"Field","name":{"kind":"Name","value":"solidSelection"}},{"kind":"Field","name":{"kind":"Name","value":"runConfigYaml"}},{"kind":"Field","name":{"kind":"Name","value":"tags"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"key"}},{"kind":"Field","name":{"kind":"Name","value":"value"}}]}}]}}]} as unknown as DocumentNode<ConfigEditorPipelinePresetFragment, unknown>;
export const ConfigEditorGeneratorPipelineFragmentFragmentDoc = {"kind":"Document","definitions":[{"kind":"FragmentDefinition","name":{"kind":"Name","value":"ConfigEditorGeneratorPipelineFragment"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"Pipeline"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"isJob"}},{"kind":"Field","name":{"kind":"Name","value":"name"}},{"kind":"Field","name":{"kind":"Name","value":"presets"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"FragmentSpread","name":{"kind":"Name","value":"ConfigEditorPipelinePreset"}}]}},{"kind":"Field","name":{"kind":"Name","value":"tags"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"key"}},{"kind":"Field","name":{"kind":"Name","value":"value"}}]}}]}}]} as unknown as DocumentNode<ConfigEditorGeneratorPipelineFragmentFragment, unknown>;
export const LaunchpadSessionPipelineFragmentFragmentDoc = {"kind":"Document","definitions":[{"kind":"FragmentDefinition","name":{"kind":"Name","value":"LaunchpadSessionPipelineFragment"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"Pipeline"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"isJob"}},{"kind":"Field","name":{"kind":"Name","value":"isAssetJob"}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"ConfigEditorGeneratorPipelineFragment"}},{"kind":"Field","name":{"kind":"Name","value":"modes"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"name"}},{"kind":"Field","name":{"kind":"Name","value":"description"}}]}}]}}]} as unknown as DocumentNode<LaunchpadSessionPipelineFragmentFragment, unknown>;
export const CompositeConfigTypeForSchemaFragmentDoc = {"kind":"Document","definitions":[{"kind":"FragmentDefinition","name":{"kind":"Name","value":"CompositeConfigTypeForSchema"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"CompositeConfigType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"fields"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"name"}},{"kind":"Field","name":{"kind":"Name","value":"description"}},{"kind":"Field","name":{"kind":"Name","value":"isRequired"}},{"kind":"Field","name":{"kind":"Name","value":"configTypeKey"}},{"kind":"Field","name":{"kind":"Name","value":"defaultValueAsJson"}}]}}]}}]} as unknown as DocumentNode<CompositeConfigTypeForSchemaFragment, unknown>;
export const AllConfigTypesForEditorFragmentDoc = {"kind":"Document","definitions":[{"kind":"FragmentDefinition","name":{"kind":"Name","value":"AllConfigTypesForEditor"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"ConfigType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"key"}},{"kind":"Field","name":{"kind":"Name","value":"description"}},{"kind":"Field","name":{"kind":"Name","value":"isSelector"}},{"kind":"Field","name":{"kind":"Name","value":"typeParamKeys"}},{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"RegularConfigType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"givenName"}}]}},{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"MapConfigType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"keyLabelName"}}]}},{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"EnumConfigType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"givenName"}},{"kind":"Field","name":{"kind":"Name","value":"values"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"value"}},{"kind":"Field","name":{"kind":"Name","value":"description"}}]}}]}},{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"CompositeConfigType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"FragmentSpread","name":{"kind":"Name","value":"CompositeConfigTypeForSchema"}}]}},{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"ScalarUnionConfigType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"key"}},{"kind":"Field","name":{"kind":"Name","value":"scalarTypeKey"}},{"kind":"Field","name":{"kind":"Name","value":"nonScalarTypeKey"}}]}}]}}]} as unknown as DocumentNode<AllConfigTypesForEditorFragment, unknown>;
export const ConfigEditorRunConfigSchemaFragmentFragmentDoc = {"kind":"Document","definitions":[{"kind":"FragmentDefinition","name":{"kind":"Name","value":"ConfigEditorRunConfigSchemaFragment"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"RunConfigSchema"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"rootConfigType"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"key"}}]}},{"kind":"Field","name":{"kind":"Name","value":"allConfigTypes"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"FragmentSpread","name":{"kind":"Name","value":"AllConfigTypesForEditor"}}]}}]}}]} as unknown as DocumentNode<ConfigEditorRunConfigSchemaFragmentFragment, unknown>;
export const LaunchpadSessionModeNotFoundFragmentDoc = {"kind":"Document","definitions":[{"kind":"FragmentDefinition","name":{"kind":"Name","value":"LaunchpadSessionModeNotFound"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"ModeNotFoundError"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"message"}}]}}]} as unknown as DocumentNode<LaunchpadSessionModeNotFoundFragment, unknown>;
export const LaunchpadSessionRunConfigSchemaFragmentFragmentDoc = {"kind":"Document","definitions":[{"kind":"FragmentDefinition","name":{"kind":"Name","value":"LaunchpadSessionRunConfigSchemaFragment"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"RunConfigSchemaOrError"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"__typename"}},{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"RunConfigSchema"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"FragmentSpread","name":{"kind":"Name","value":"ConfigEditorRunConfigSchemaFragment"}}]}},{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"ModeNotFoundError"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"FragmentSpread","name":{"kind":"Name","value":"LaunchpadSessionModeNotFound"}}]}}]}}]} as unknown as DocumentNode<LaunchpadSessionRunConfigSchemaFragmentFragment, unknown>;
export const RunPreviewValidationErrorsFragmentDoc = {"kind":"Document","definitions":[{"kind":"FragmentDefinition","name":{"kind":"Name","value":"RunPreviewValidationErrors"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"PipelineConfigValidationError"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"reason"}},{"kind":"Field","name":{"kind":"Name","value":"message"}},{"kind":"Field","name":{"kind":"Name","value":"stack"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"entries"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"__typename"}},{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"EvaluationStackPathEntry"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"fieldName"}}]}},{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"EvaluationStackListItemEntry"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"listIndex"}}]}},{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"EvaluationStackMapKeyEntry"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"mapKey"}}]}},{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"EvaluationStackMapValueEntry"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"mapKey"}}]}}]}}]}},{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"MissingFieldConfigError"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"field"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"name"}}]}}]}},{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"MissingFieldsConfigError"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"fields"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"name"}}]}}]}},{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"FieldNotDefinedConfigError"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"fieldName"}}]}},{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"FieldsNotDefinedConfigError"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"fieldNames"}}]}}]}}]} as unknown as DocumentNode<RunPreviewValidationErrorsFragment, unknown>;
export const RunPreviewValidationFragmentFragmentDoc = {"kind":"Document","definitions":[{"kind":"FragmentDefinition","name":{"kind":"Name","value":"RunPreviewValidationFragment"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"PipelineConfigValidationResult"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"__typename"}},{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"RunConfigValidationInvalid"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"errors"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"FragmentSpread","name":{"kind":"Name","value":"RunPreviewValidationErrors"}}]}}]}},{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"PipelineNotFoundError"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"message"}}]}},{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"InvalidSubsetError"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"message"}}]}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"PythonErrorFragment"}}]}}]} as unknown as DocumentNode<RunPreviewValidationFragmentFragment, unknown>;
export const JobMetadataAssetNodeFragmentDoc = {"kind":"Document","definitions":[{"kind":"FragmentDefinition","name":{"kind":"Name","value":"JobMetadataAssetNode"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"AssetNode"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"assetKey"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"path"}}]}}]}}]} as unknown as DocumentNode<JobMetadataAssetNodeFragment, unknown>;
export const JobMetadataFragmentFragmentDoc = {"kind":"Document","definitions":[{"kind":"FragmentDefinition","name":{"kind":"Name","value":"JobMetadataFragment"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"Pipeline"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"isJob"}},{"kind":"Field","name":{"kind":"Name","value":"name"}},{"kind":"Field","name":{"kind":"Name","value":"schedules"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"mode"}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"ScheduleSwitchFragment"}}]}},{"kind":"Field","name":{"kind":"Name","value":"sensors"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"targets"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"pipelineName"}},{"kind":"Field","name":{"kind":"Name","value":"mode"}}]}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"SensorSwitchFragment"}}]}}]}}]} as unknown as DocumentNode<JobMetadataFragmentFragment, unknown>;
export const RunMetadataFragmentFragmentDoc = {"kind":"Document","definitions":[{"kind":"FragmentDefinition","name":{"kind":"Name","value":"RunMetadataFragment"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"PipelineRun"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"status"}},{"kind":"Field","name":{"kind":"Name","value":"assets"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"key"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"path"}}]}}]}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"RunTimeFragment"}}]}}]} as unknown as DocumentNode<RunMetadataFragmentFragment, unknown>;
export const OpNodeInputDefinitionFragmentDoc = {"kind":"Document","definitions":[{"kind":"FragmentDefinition","name":{"kind":"Name","value":"OpNodeInputDefinition"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"InputDefinition"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"name"}},{"kind":"Field","name":{"kind":"Name","value":"type"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"displayName"}}]}}]}}]} as unknown as DocumentNode<OpNodeInputDefinitionFragment, unknown>;
export const OpNodeOutputDefinitionFragmentDoc = {"kind":"Document","definitions":[{"kind":"FragmentDefinition","name":{"kind":"Name","value":"OpNodeOutputDefinition"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"OutputDefinition"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"name"}},{"kind":"Field","name":{"kind":"Name","value":"isDynamic"}},{"kind":"Field","name":{"kind":"Name","value":"type"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"displayName"}}]}}]}}]} as unknown as DocumentNode<OpNodeOutputDefinitionFragment, unknown>;
export const OpNodeDefinitionFragmentFragmentDoc = {"kind":"Document","definitions":[{"kind":"FragmentDefinition","name":{"kind":"Name","value":"OpNodeDefinitionFragment"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"ISolidDefinition"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"__typename"}},{"kind":"Field","name":{"kind":"Name","value":"name"}},{"kind":"Field","name":{"kind":"Name","value":"description"}},{"kind":"Field","name":{"kind":"Name","value":"metadata"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"key"}},{"kind":"Field","name":{"kind":"Name","value":"value"}}]}},{"kind":"Field","name":{"kind":"Name","value":"assetNodes"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"assetKey"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"path"}}]}}]}},{"kind":"Field","name":{"kind":"Name","value":"inputDefinitions"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"FragmentSpread","name":{"kind":"Name","value":"OpNodeInputDefinition"}}]}},{"kind":"Field","name":{"kind":"Name","value":"outputDefinitions"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"FragmentSpread","name":{"kind":"Name","value":"OpNodeOutputDefinition"}}]}},{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"SolidDefinition"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"configField"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"configType"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"key"}},{"kind":"Field","name":{"kind":"Name","value":"description"}}]}}]}}]}},{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"CompositeSolidDefinition"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"inputMappings"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"definition"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"name"}}]}},{"kind":"Field","name":{"kind":"Name","value":"mappedInput"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"definition"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"name"}}]}},{"kind":"Field","name":{"kind":"Name","value":"solid"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"name"}}]}}]}}]}},{"kind":"Field","name":{"kind":"Name","value":"outputMappings"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"definition"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"name"}}]}},{"kind":"Field","name":{"kind":"Name","value":"mappedOutput"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"definition"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"name"}}]}},{"kind":"Field","name":{"kind":"Name","value":"solid"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"name"}}]}}]}}]}}]}}]}}]} as unknown as DocumentNode<OpNodeDefinitionFragmentFragment, unknown>;
export const OpCardSolidDefinitionFragmentFragmentDoc = {"kind":"Document","definitions":[{"kind":"FragmentDefinition","name":{"kind":"Name","value":"OpCardSolidDefinitionFragment"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"ISolidDefinition"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"FragmentSpread","name":{"kind":"Name","value":"OpNodeDefinitionFragment"}},{"kind":"Field","name":{"kind":"Name","value":"__typename"}},{"kind":"Field","name":{"kind":"Name","value":"name"}},{"kind":"Field","name":{"kind":"Name","value":"description"}},{"kind":"Field","name":{"kind":"Name","value":"metadata"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"key"}},{"kind":"Field","name":{"kind":"Name","value":"value"}}]}},{"kind":"Field","name":{"kind":"Name","value":"inputDefinitions"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"name"}}]}},{"kind":"Field","name":{"kind":"Name","value":"outputDefinitions"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"name"}}]}}]}}]} as unknown as DocumentNode<OpCardSolidDefinitionFragmentFragment, unknown>;
export const DagsterTypeWithTooltipFragmentFragmentDoc = {"kind":"Document","definitions":[{"kind":"FragmentDefinition","name":{"kind":"Name","value":"DagsterTypeWithTooltipFragment"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"DagsterType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"name"}},{"kind":"Field","name":{"kind":"Name","value":"displayName"}},{"kind":"Field","name":{"kind":"Name","value":"description"}}]}}]} as unknown as DocumentNode<DagsterTypeWithTooltipFragmentFragment, unknown>;
export const OpTypeSignatureFragmentFragmentDoc = {"kind":"Document","definitions":[{"kind":"FragmentDefinition","name":{"kind":"Name","value":"OpTypeSignatureFragment"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"ISolidDefinition"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"outputDefinitions"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"name"}},{"kind":"Field","name":{"kind":"Name","value":"type"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"FragmentSpread","name":{"kind":"Name","value":"DagsterTypeWithTooltipFragment"}}]}}]}},{"kind":"Field","name":{"kind":"Name","value":"inputDefinitions"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"name"}},{"kind":"Field","name":{"kind":"Name","value":"type"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"FragmentSpread","name":{"kind":"Name","value":"DagsterTypeWithTooltipFragment"}}]}}]}}]}}]} as unknown as DocumentNode<OpTypeSignatureFragmentFragment, unknown>;
export const OpsRootUsedSolidFragmentDoc = {"kind":"Document","definitions":[{"kind":"FragmentDefinition","name":{"kind":"Name","value":"OpsRootUsedSolid"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"UsedSolid"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"definition"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"name"}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"OpTypeSignatureFragment"}}]}},{"kind":"Field","name":{"kind":"Name","value":"invocations"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"pipeline"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"isJob"}},{"kind":"Field","name":{"kind":"Name","value":"name"}}]}}]}}]}}]} as unknown as DocumentNode<OpsRootUsedSolidFragment, unknown>;
export const OpJobPartitionStatusFragmentDoc = {"kind":"Document","definitions":[{"kind":"FragmentDefinition","name":{"kind":"Name","value":"OpJobPartitionStatus"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"PartitionStatus"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"partitionName"}},{"kind":"Field","name":{"kind":"Name","value":"runStatus"}},{"kind":"Field","name":{"kind":"Name","value":"runDuration"}}]}}]} as unknown as DocumentNode<OpJobPartitionStatusFragment, unknown>;
export const OpJobPartitionSetFragmentDoc = {"kind":"Document","definitions":[{"kind":"FragmentDefinition","name":{"kind":"Name","value":"OpJobPartitionSet"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"PartitionSet"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"name"}},{"kind":"Field","name":{"kind":"Name","value":"pipelineName"}},{"kind":"Field","name":{"kind":"Name","value":"partitionsOrError"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"Partitions"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"results"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"name"}}]}}]}}]}},{"kind":"Field","name":{"kind":"Name","value":"partitionStatusesOrError"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"__typename"}},{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"PartitionStatuses"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"results"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"OpJobPartitionStatus"}}]}}]}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"PythonErrorFragment"}}]}}]}}]} as unknown as DocumentNode<OpJobPartitionSetFragment, unknown>;
export const PartitionGraphFragmentFragmentDoc = {"kind":"Document","definitions":[{"kind":"FragmentDefinition","name":{"kind":"Name","value":"PartitionGraphFragment"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"PipelineRun"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"runId"}},{"kind":"Field","name":{"kind":"Name","value":"stats"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"RunStatsSnapshot"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"startTime"}},{"kind":"Field","name":{"kind":"Name","value":"endTime"}},{"kind":"Field","name":{"kind":"Name","value":"materializations"}}]}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"PythonErrorFragment"}}]}},{"kind":"Field","name":{"kind":"Name","value":"stepStats"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"__typename"}},{"kind":"Field","name":{"kind":"Name","value":"stepKey"}},{"kind":"Field","name":{"kind":"Name","value":"startTime"}},{"kind":"Field","name":{"kind":"Name","value":"endTime"}},{"kind":"Field","name":{"kind":"Name","value":"status"}},{"kind":"Field","name":{"kind":"Name","value":"materializations"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"__typename"}}]}},{"kind":"Field","name":{"kind":"Name","value":"expectationResults"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"success"}}]}}]}}]}}]} as unknown as DocumentNode<PartitionGraphFragmentFragment, unknown>;
export const PartitionGraphSetRunFragmentFragmentDoc = {"kind":"Document","definitions":[{"kind":"FragmentDefinition","name":{"kind":"Name","value":"PartitionGraphSetRunFragment"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"PipelineRun"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"tags"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"key"}},{"kind":"Field","name":{"kind":"Name","value":"value"}}]}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"PartitionGraphFragment"}}]}}]} as unknown as DocumentNode<PartitionGraphSetRunFragmentFragment, unknown>;
export const PartitionStepStatusRunFragmentDoc = {"kind":"Document","definitions":[{"kind":"FragmentDefinition","name":{"kind":"Name","value":"PartitionStepStatusRun"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"Run"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"runId"}},{"kind":"Field","name":{"kind":"Name","value":"tags"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"key"}},{"kind":"Field","name":{"kind":"Name","value":"value"}}]}},{"kind":"Field","name":{"kind":"Name","value":"stepStats"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"__typename"}},{"kind":"Field","name":{"kind":"Name","value":"stepKey"}},{"kind":"Field","name":{"kind":"Name","value":"status"}}]}}]}}]} as unknown as DocumentNode<PartitionStepStatusRunFragment, unknown>;
export const PartitionMatrixStepRunFragmentFragmentDoc = {"kind":"Document","definitions":[{"kind":"FragmentDefinition","name":{"kind":"Name","value":"PartitionMatrixStepRunFragment"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"Run"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"runId"}},{"kind":"Field","name":{"kind":"Name","value":"status"}},{"kind":"Field","name":{"kind":"Name","value":"startTime"}},{"kind":"Field","name":{"kind":"Name","value":"endTime"}},{"kind":"Field","name":{"kind":"Name","value":"stepStats"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"stepKey"}},{"kind":"Field","name":{"kind":"Name","value":"startTime"}},{"kind":"Field","name":{"kind":"Name","value":"endTime"}},{"kind":"Field","name":{"kind":"Name","value":"status"}}]}},{"kind":"Field","name":{"kind":"Name","value":"tags"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"key"}},{"kind":"Field","name":{"kind":"Name","value":"value"}}]}}]}}]} as unknown as DocumentNode<PartitionMatrixStepRunFragmentFragment, unknown>;
export const OpNodeInvocationFragmentFragmentDoc = {"kind":"Document","definitions":[{"kind":"FragmentDefinition","name":{"kind":"Name","value":"OpNodeInvocationFragment"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"Solid"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"name"}},{"kind":"Field","name":{"kind":"Name","value":"isDynamicMapped"}},{"kind":"Field","name":{"kind":"Name","value":"inputs"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"definition"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"name"}}]}},{"kind":"Field","name":{"kind":"Name","value":"isDynamicCollect"}},{"kind":"Field","name":{"kind":"Name","value":"dependsOn"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"definition"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"name"}},{"kind":"Field","name":{"kind":"Name","value":"type"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"displayName"}}]}}]}},{"kind":"Field","name":{"kind":"Name","value":"solid"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"name"}}]}}]}}]}},{"kind":"Field","name":{"kind":"Name","value":"outputs"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"definition"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"name"}}]}},{"kind":"Field","name":{"kind":"Name","value":"dependedBy"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"solid"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"name"}}]}},{"kind":"Field","name":{"kind":"Name","value":"definition"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"name"}},{"kind":"Field","name":{"kind":"Name","value":"type"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"displayName"}}]}}]}}]}}]}}]}}]} as unknown as DocumentNode<OpNodeInvocationFragmentFragment, unknown>;
export const OpGraphOpFragmentFragmentDoc = {"kind":"Document","definitions":[{"kind":"FragmentDefinition","name":{"kind":"Name","value":"OpGraphOpFragment"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"Solid"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"name"}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"OpNodeInvocationFragment"}},{"kind":"Field","name":{"kind":"Name","value":"definition"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"name"}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"OpNodeDefinitionFragment"}}]}}]}}]} as unknown as DocumentNode<OpGraphOpFragmentFragment, unknown>;
export const GraphExplorerSolidFragmentDoc = {"kind":"Document","definitions":[{"kind":"FragmentDefinition","name":{"kind":"Name","value":"GraphExplorerSolid"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"Solid"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"name"}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"OpGraphOpFragment"}}]}}]} as unknown as DocumentNode<GraphExplorerSolidFragment, unknown>;
export const GraphExplorerSolidHandleFragmentFragmentDoc = {"kind":"Document","definitions":[{"kind":"FragmentDefinition","name":{"kind":"Name","value":"GraphExplorerSolidHandleFragment"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"SolidHandle"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"handleID"}},{"kind":"Field","name":{"kind":"Name","value":"solid"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"FragmentSpread","name":{"kind":"Name","value":"GraphExplorerSolid"}}]}}]}}]} as unknown as DocumentNode<GraphExplorerSolidHandleFragmentFragment, unknown>;
export const PartitionMatrixSolidHandleFragmentFragmentDoc = {"kind":"Document","definitions":[{"kind":"FragmentDefinition","name":{"kind":"Name","value":"PartitionMatrixSolidHandleFragment"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"SolidHandle"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"handleID"}},{"kind":"Field","name":{"kind":"Name","value":"solid"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"name"}},{"kind":"Field","name":{"kind":"Name","value":"definition"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"name"}}]}},{"kind":"Field","name":{"kind":"Name","value":"inputs"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"dependsOn"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"solid"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"name"}}]}}]}}]}},{"kind":"Field","name":{"kind":"Name","value":"outputs"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"dependedBy"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"solid"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"name"}}]}}]}}]}}]}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"GraphExplorerSolidHandleFragment"}}]}}]} as unknown as DocumentNode<PartitionMatrixSolidHandleFragmentFragment, unknown>;
export const SidebarResourcesSectionFragmentFragmentDoc = {"kind":"Document","definitions":[{"kind":"FragmentDefinition","name":{"kind":"Name","value":"SidebarResourcesSectionFragment"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"Mode"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"name"}},{"kind":"Field","name":{"kind":"Name","value":"description"}},{"kind":"Field","name":{"kind":"Name","value":"resources"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"name"}},{"kind":"Field","name":{"kind":"Name","value":"description"}},{"kind":"Field","name":{"kind":"Name","value":"configField"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"configType"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"FragmentSpread","name":{"kind":"Name","value":"ConfigTypeSchemaFragment"}},{"kind":"Field","name":{"kind":"Name","value":"recursiveConfigTypes"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"FragmentSpread","name":{"kind":"Name","value":"ConfigTypeSchemaFragment"}}]}}]}}]}}]}},{"kind":"Field","name":{"kind":"Name","value":"loggers"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"name"}},{"kind":"Field","name":{"kind":"Name","value":"description"}},{"kind":"Field","name":{"kind":"Name","value":"configField"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"configType"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"FragmentSpread","name":{"kind":"Name","value":"ConfigTypeSchemaFragment"}},{"kind":"Field","name":{"kind":"Name","value":"recursiveConfigTypes"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"FragmentSpread","name":{"kind":"Name","value":"ConfigTypeSchemaFragment"}}]}}]}}]}}]}}]}}]} as unknown as DocumentNode<SidebarResourcesSectionFragmentFragment, unknown>;
export const SidebarRootContainerFragmentFragmentDoc = {"kind":"Document","definitions":[{"kind":"FragmentDefinition","name":{"kind":"Name","value":"SidebarRootContainerFragment"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"SolidContainer"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"name"}},{"kind":"Field","name":{"kind":"Name","value":"description"}},{"kind":"Field","name":{"kind":"Name","value":"modes"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"SidebarResourcesSectionFragment"}}]}},{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"PipelineSnapshot"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"pipelineSnapshotId"}},{"kind":"Field","name":{"kind":"Name","value":"parentSnapshotId"}},{"kind":"Field","name":{"kind":"Name","value":"metadataEntries"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"FragmentSpread","name":{"kind":"Name","value":"MetadataEntryFragment"}}]}}]}}]}}]} as unknown as DocumentNode<SidebarRootContainerFragmentFragment, unknown>;
export const GraphExplorerFragmentFragmentDoc = {"kind":"Document","definitions":[{"kind":"FragmentDefinition","name":{"kind":"Name","value":"GraphExplorerFragment"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"SolidContainer"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"name"}},{"kind":"Field","name":{"kind":"Name","value":"description"}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"SidebarRootContainerFragment"}}]}}]} as unknown as DocumentNode<GraphExplorerFragmentFragment, unknown>;
export const GraphExplorerAssetNodeFragmentFragmentDoc = {"kind":"Document","definitions":[{"kind":"FragmentDefinition","name":{"kind":"Name","value":"GraphExplorerAssetNodeFragment"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"AssetNode"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"opNames"}},{"kind":"Field","name":{"kind":"Name","value":"assetKey"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"path"}}]}}]}}]} as unknown as DocumentNode<GraphExplorerAssetNodeFragmentFragment, unknown>;
export const PipelineTableFragmentFragmentDoc = {"kind":"Document","definitions":[{"kind":"FragmentDefinition","name":{"kind":"Name","value":"PipelineTableFragment"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"Pipeline"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"description"}},{"kind":"Field","name":{"kind":"Name","value":"isJob"}},{"kind":"Field","name":{"kind":"Name","value":"name"}},{"kind":"Field","name":{"kind":"Name","value":"modes"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"name"}}]}},{"kind":"Field","name":{"kind":"Name","value":"runs"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"limit"},"value":{"kind":"IntValue","value":"5"}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"mode"}},{"kind":"Field","name":{"kind":"Name","value":"runId"}},{"kind":"Field","name":{"kind":"Name","value":"status"}}]}},{"kind":"Field","name":{"kind":"Name","value":"schedules"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"name"}},{"kind":"Field","name":{"kind":"Name","value":"mode"}}]}},{"kind":"Field","name":{"kind":"Name","value":"sensors"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"name"}},{"kind":"Field","name":{"kind":"Name","value":"targets"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"mode"}},{"kind":"Field","name":{"kind":"Name","value":"pipelineName"}}]}}]}}]}}]} as unknown as DocumentNode<PipelineTableFragmentFragment, unknown>;
export const SidebarOpInvocationFragmentFragmentDoc = {"kind":"Document","definitions":[{"kind":"FragmentDefinition","name":{"kind":"Name","value":"SidebarOpInvocationFragment"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"Solid"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"name"}},{"kind":"Field","name":{"kind":"Name","value":"inputs"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"isDynamicCollect"}},{"kind":"Field","name":{"kind":"Name","value":"definition"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"name"}},{"kind":"Field","name":{"kind":"Name","value":"description"}},{"kind":"Field","name":{"kind":"Name","value":"type"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"FragmentSpread","name":{"kind":"Name","value":"DagsterTypeWithTooltipFragment"}}]}}]}},{"kind":"Field","name":{"kind":"Name","value":"dependsOn"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"definition"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"name"}}]}},{"kind":"Field","name":{"kind":"Name","value":"solid"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"name"}}]}}]}}]}},{"kind":"Field","name":{"kind":"Name","value":"outputs"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"definition"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"name"}},{"kind":"Field","name":{"kind":"Name","value":"description"}},{"kind":"Field","name":{"kind":"Name","value":"isDynamic"}},{"kind":"Field","name":{"kind":"Name","value":"type"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"FragmentSpread","name":{"kind":"Name","value":"DagsterTypeWithTooltipFragment"}}]}}]}},{"kind":"Field","name":{"kind":"Name","value":"dependedBy"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"definition"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"name"}}]}},{"kind":"Field","name":{"kind":"Name","value":"solid"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"name"}}]}}]}}]}}]}}]} as unknown as DocumentNode<SidebarOpInvocationFragmentFragment, unknown>;
export const SidebarOpDefinitionFragmentFragmentDoc = {"kind":"Document","definitions":[{"kind":"FragmentDefinition","name":{"kind":"Name","value":"SidebarOpDefinitionFragment"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"ISolidDefinition"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"FragmentSpread","name":{"kind":"Name","value":"OpTypeSignatureFragment"}},{"kind":"Field","name":{"kind":"Name","value":"__typename"}},{"kind":"Field","name":{"kind":"Name","value":"name"}},{"kind":"Field","name":{"kind":"Name","value":"description"}},{"kind":"Field","name":{"kind":"Name","value":"metadata"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"key"}},{"kind":"Field","name":{"kind":"Name","value":"value"}}]}},{"kind":"Field","name":{"kind":"Name","value":"assetNodes"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"assetKey"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"path"}}]}}]}},{"kind":"Field","name":{"kind":"Name","value":"outputDefinitions"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"name"}},{"kind":"Field","name":{"kind":"Name","value":"description"}},{"kind":"Field","name":{"kind":"Name","value":"isDynamic"}},{"kind":"Field","name":{"kind":"Name","value":"type"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"FragmentSpread","name":{"kind":"Name","value":"DagsterTypeWithTooltipFragment"}}]}}]}},{"kind":"Field","name":{"kind":"Name","value":"inputDefinitions"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"name"}},{"kind":"Field","name":{"kind":"Name","value":"description"}},{"kind":"Field","name":{"kind":"Name","value":"type"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"FragmentSpread","name":{"kind":"Name","value":"DagsterTypeWithTooltipFragment"}}]}}]}},{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"SolidDefinition"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"requiredResources"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"resourceKey"}}]}},{"kind":"Field","name":{"kind":"Name","value":"configField"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"configType"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"FragmentSpread","name":{"kind":"Name","value":"ConfigTypeSchemaFragment"}},{"kind":"Field","name":{"kind":"Name","value":"recursiveConfigTypes"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"FragmentSpread","name":{"kind":"Name","value":"ConfigTypeSchemaFragment"}}]}}]}}]}}]}},{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"CompositeSolidDefinition"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"inputMappings"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"definition"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"name"}}]}},{"kind":"Field","name":{"kind":"Name","value":"mappedInput"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"definition"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"name"}}]}},{"kind":"Field","name":{"kind":"Name","value":"solid"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"name"}}]}}]}}]}},{"kind":"Field","name":{"kind":"Name","value":"outputMappings"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"definition"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"name"}}]}},{"kind":"Field","name":{"kind":"Name","value":"mappedOutput"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"definition"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"name"}}]}},{"kind":"Field","name":{"kind":"Name","value":"solid"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"name"}}]}}]}}]}}]}}]}}]} as unknown as DocumentNode<SidebarOpDefinitionFragmentFragment, unknown>;
export const SidebarOpFragmentFragmentDoc = {"kind":"Document","definitions":[{"kind":"FragmentDefinition","name":{"kind":"Name","value":"SidebarOpFragment"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"SolidContainer"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"name"}},{"kind":"Field","name":{"kind":"Name","value":"solidHandle"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"handleID"},"value":{"kind":"Variable","name":{"kind":"Name","value":"handleID"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"solid"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"FragmentSpread","name":{"kind":"Name","value":"SidebarOpInvocationFragment"}},{"kind":"Field","name":{"kind":"Name","value":"definition"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"__typename"}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"SidebarOpDefinitionFragment"}}]}}]}}]}}]}}]} as unknown as DocumentNode<SidebarOpFragmentFragment, unknown>;
export const LogsRowStructuredFragmentFragmentDoc = {"kind":"Document","definitions":[{"kind":"FragmentDefinition","name":{"kind":"Name","value":"LogsRowStructuredFragment"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"DagsterRunEvent"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"__typename"}},{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"MessageEvent"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"message"}},{"kind":"Field","name":{"kind":"Name","value":"eventType"}},{"kind":"Field","name":{"kind":"Name","value":"timestamp"}},{"kind":"Field","name":{"kind":"Name","value":"level"}},{"kind":"Field","name":{"kind":"Name","value":"stepKey"}}]}},{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"DisplayableEvent"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"label"}},{"kind":"Field","name":{"kind":"Name","value":"description"}},{"kind":"Field","name":{"kind":"Name","value":"metadataEntries"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"FragmentSpread","name":{"kind":"Name","value":"MetadataEntryFragment"}}]}}]}},{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"MarkerEvent"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"markerStart"}},{"kind":"Field","name":{"kind":"Name","value":"markerEnd"}}]}},{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"ErrorEvent"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"error"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"FragmentSpread","name":{"kind":"Name","value":"PythonErrorFragment"}}]}}]}},{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"MaterializationEvent"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"assetKey"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"path"}}]}}]}},{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"ObservationEvent"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"assetKey"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"path"}}]}}]}},{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"ExecutionStepFailureEvent"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"errorSource"}},{"kind":"Field","name":{"kind":"Name","value":"failureMetadata"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"metadataEntries"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"FragmentSpread","name":{"kind":"Name","value":"MetadataEntryFragment"}}]}}]}}]}},{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"ExecutionStepInputEvent"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"inputName"}},{"kind":"Field","name":{"kind":"Name","value":"typeCheck"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"label"}},{"kind":"Field","name":{"kind":"Name","value":"description"}},{"kind":"Field","name":{"kind":"Name","value":"success"}},{"kind":"Field","name":{"kind":"Name","value":"metadataEntries"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"FragmentSpread","name":{"kind":"Name","value":"MetadataEntryFragment"}}]}}]}}]}},{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"ExecutionStepOutputEvent"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"outputName"}},{"kind":"Field","name":{"kind":"Name","value":"typeCheck"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"label"}},{"kind":"Field","name":{"kind":"Name","value":"description"}},{"kind":"Field","name":{"kind":"Name","value":"success"}},{"kind":"Field","name":{"kind":"Name","value":"metadataEntries"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"FragmentSpread","name":{"kind":"Name","value":"MetadataEntryFragment"}}]}}]}}]}},{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"StepExpectationResultEvent"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"expectationResult"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"success"}},{"kind":"Field","name":{"kind":"Name","value":"label"}},{"kind":"Field","name":{"kind":"Name","value":"description"}},{"kind":"Field","name":{"kind":"Name","value":"metadataEntries"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"FragmentSpread","name":{"kind":"Name","value":"MetadataEntryFragment"}}]}}]}}]}},{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"ObjectStoreOperationEvent"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"operationResult"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"op"}},{"kind":"Field","name":{"kind":"Name","value":"metadataEntries"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"FragmentSpread","name":{"kind":"Name","value":"MetadataEntryFragment"}}]}}]}}]}},{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"HandledOutputEvent"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"outputName"}},{"kind":"Field","name":{"kind":"Name","value":"managerKey"}}]}},{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"LoadedInputEvent"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"inputName"}},{"kind":"Field","name":{"kind":"Name","value":"managerKey"}},{"kind":"Field","name":{"kind":"Name","value":"upstreamOutputName"}},{"kind":"Field","name":{"kind":"Name","value":"upstreamStepKey"}}]}},{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"LogsCapturedEvent"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"fileKey"}},{"kind":"Field","name":{"kind":"Name","value":"stepKeys"}},{"kind":"Field","name":{"kind":"Name","value":"externalUrl"}}]}}]}}]} as unknown as DocumentNode<LogsRowStructuredFragmentFragment, unknown>;
export const LogsRowUnstructuredFragmentFragmentDoc = {"kind":"Document","definitions":[{"kind":"FragmentDefinition","name":{"kind":"Name","value":"LogsRowUnstructuredFragment"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"DagsterRunEvent"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"__typename"}},{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"MessageEvent"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"message"}},{"kind":"Field","name":{"kind":"Name","value":"timestamp"}},{"kind":"Field","name":{"kind":"Name","value":"level"}},{"kind":"Field","name":{"kind":"Name","value":"stepKey"}}]}}]}}]} as unknown as DocumentNode<LogsRowUnstructuredFragmentFragment, unknown>;
export const LogsScrollingTableMessageFragmentFragmentDoc = {"kind":"Document","definitions":[{"kind":"FragmentDefinition","name":{"kind":"Name","value":"LogsScrollingTableMessageFragment"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"DagsterRunEvent"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"__typename"}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"LogsRowStructuredFragment"}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"LogsRowUnstructuredFragment"}}]}}]} as unknown as DocumentNode<LogsScrollingTableMessageFragmentFragment, unknown>;
export const RunMetadataProviderMessageFragmentFragmentDoc = {"kind":"Document","definitions":[{"kind":"FragmentDefinition","name":{"kind":"Name","value":"RunMetadataProviderMessageFragment"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"DagsterRunEvent"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"__typename"}},{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"MessageEvent"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"message"}},{"kind":"Field","name":{"kind":"Name","value":"timestamp"}},{"kind":"Field","name":{"kind":"Name","value":"stepKey"}}]}},{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"MarkerEvent"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"markerStart"}},{"kind":"Field","name":{"kind":"Name","value":"markerEnd"}}]}},{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"ObjectStoreOperationEvent"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"operationResult"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"op"}},{"kind":"Field","name":{"kind":"Name","value":"metadataEntries"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"FragmentSpread","name":{"kind":"Name","value":"MetadataEntryFragment"}}]}}]}}]}},{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"LogsCapturedEvent"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"fileKey"}},{"kind":"Field","name":{"kind":"Name","value":"stepKeys"}},{"kind":"Field","name":{"kind":"Name","value":"pid"}},{"kind":"Field","name":{"kind":"Name","value":"externalUrl"}}]}}]}}]} as unknown as DocumentNode<RunMetadataProviderMessageFragmentFragment, unknown>;
export const RunDagsterRunEventFragmentFragmentDoc = {"kind":"Document","definitions":[{"kind":"FragmentDefinition","name":{"kind":"Name","value":"RunDagsterRunEventFragment"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"DagsterRunEvent"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"MessageEvent"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"message"}},{"kind":"Field","name":{"kind":"Name","value":"timestamp"}},{"kind":"Field","name":{"kind":"Name","value":"level"}},{"kind":"Field","name":{"kind":"Name","value":"stepKey"}}]}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"LogsScrollingTableMessageFragment"}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"RunMetadataProviderMessageFragment"}}]}}]} as unknown as DocumentNode<RunDagsterRunEventFragmentFragment, unknown>;
export const RunLogsSubscriptionSuccessFragmentDoc = {"kind":"Document","definitions":[{"kind":"FragmentDefinition","name":{"kind":"Name","value":"RunLogsSubscriptionSuccess"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"PipelineRunLogsSubscriptionSuccess"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"messages"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"MessageEvent"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"runId"}}]}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"RunDagsterRunEventFragment"}}]}},{"kind":"Field","name":{"kind":"Name","value":"hasMorePastEvents"}},{"kind":"Field","name":{"kind":"Name","value":"cursor"}}]}}]} as unknown as DocumentNode<RunLogsSubscriptionSuccessFragment, unknown>;
export const PipelineRunLogsSubscriptionStatusFragmentFragmentDoc = {"kind":"Document","definitions":[{"kind":"FragmentDefinition","name":{"kind":"Name","value":"PipelineRunLogsSubscriptionStatusFragment"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"Run"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"runId"}},{"kind":"Field","name":{"kind":"Name","value":"status"}},{"kind":"Field","name":{"kind":"Name","value":"canTerminate"}}]}}]} as unknown as DocumentNode<PipelineRunLogsSubscriptionStatusFragmentFragment, unknown>;
export const ExecutionPlanToGraphFragmentFragmentDoc = {"kind":"Document","definitions":[{"kind":"FragmentDefinition","name":{"kind":"Name","value":"ExecutionPlanToGraphFragment"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"ExecutionPlan"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"steps"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"key"}},{"kind":"Field","name":{"kind":"Name","value":"kind"}},{"kind":"Field","name":{"kind":"Name","value":"inputs"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"dependsOn"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"key"}},{"kind":"Field","name":{"kind":"Name","value":"kind"}}]}}]}}]}}]}}]} as unknown as DocumentNode<ExecutionPlanToGraphFragmentFragment, unknown>;
export const RunFragmentForRepositoryMatchFragmentDoc = {"kind":"Document","definitions":[{"kind":"FragmentDefinition","name":{"kind":"Name","value":"RunFragmentForRepositoryMatch"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"Run"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"pipelineName"}},{"kind":"Field","name":{"kind":"Name","value":"pipelineSnapshotId"}},{"kind":"Field","name":{"kind":"Name","value":"parentPipelineSnapshotId"}},{"kind":"Field","name":{"kind":"Name","value":"repositoryOrigin"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"repositoryName"}},{"kind":"Field","name":{"kind":"Name","value":"repositoryLocationName"}}]}}]}}]} as unknown as DocumentNode<RunFragmentForRepositoryMatchFragment, unknown>;
export const RunDetailsFragmentFragmentDoc = {"kind":"Document","definitions":[{"kind":"FragmentDefinition","name":{"kind":"Name","value":"RunDetailsFragment"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"Run"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"startTime"}},{"kind":"Field","name":{"kind":"Name","value":"endTime"}},{"kind":"Field","name":{"kind":"Name","value":"status"}}]}}]} as unknown as DocumentNode<RunDetailsFragmentFragment, unknown>;
export const RunFragmentFragmentDoc = {"kind":"Document","definitions":[{"kind":"FragmentDefinition","name":{"kind":"Name","value":"RunFragment"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"Run"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"runConfigYaml"}},{"kind":"Field","name":{"kind":"Name","value":"runId"}},{"kind":"Field","name":{"kind":"Name","value":"canTerminate"}},{"kind":"Field","name":{"kind":"Name","value":"status"}},{"kind":"Field","name":{"kind":"Name","value":"mode"}},{"kind":"Field","name":{"kind":"Name","value":"tags"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"key"}},{"kind":"Field","name":{"kind":"Name","value":"value"}}]}},{"kind":"Field","name":{"kind":"Name","value":"assets"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"key"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"path"}}]}}]}},{"kind":"Field","name":{"kind":"Name","value":"rootRunId"}},{"kind":"Field","name":{"kind":"Name","value":"parentRunId"}},{"kind":"Field","name":{"kind":"Name","value":"pipelineName"}},{"kind":"Field","name":{"kind":"Name","value":"solidSelection"}},{"kind":"Field","name":{"kind":"Name","value":"assetSelection"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"AssetKey"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"path"}}]}}]}},{"kind":"Field","name":{"kind":"Name","value":"pipelineSnapshotId"}},{"kind":"Field","name":{"kind":"Name","value":"parentPipelineSnapshotId"}},{"kind":"Field","name":{"kind":"Name","value":"executionPlan"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"artifactsPersisted"}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"ExecutionPlanToGraphFragment"}}]}},{"kind":"Field","name":{"kind":"Name","value":"stepKeysToExecute"}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"RunFragmentForRepositoryMatch"}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"RunDetailsFragment"}},{"kind":"Field","name":{"kind":"Name","value":"updateTime"}},{"kind":"Field","name":{"kind":"Name","value":"stepStats"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"stepKey"}},{"kind":"Field","name":{"kind":"Name","value":"status"}},{"kind":"Field","name":{"kind":"Name","value":"startTime"}},{"kind":"Field","name":{"kind":"Name","value":"endTime"}},{"kind":"Field","name":{"kind":"Name","value":"attempts"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"startTime"}},{"kind":"Field","name":{"kind":"Name","value":"endTime"}}]}},{"kind":"Field","name":{"kind":"Name","value":"markers"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"startTime"}},{"kind":"Field","name":{"kind":"Name","value":"endTime"}}]}}]}}]}}]} as unknown as DocumentNode<RunFragmentFragment, unknown>;
export const RunTableRunFragmentFragmentDoc = {"kind":"Document","definitions":[{"kind":"FragmentDefinition","name":{"kind":"Name","value":"RunTableRunFragment"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"Run"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"runId"}},{"kind":"Field","name":{"kind":"Name","value":"status"}},{"kind":"Field","name":{"kind":"Name","value":"stepKeysToExecute"}},{"kind":"Field","name":{"kind":"Name","value":"canTerminate"}},{"kind":"Field","name":{"kind":"Name","value":"mode"}},{"kind":"Field","name":{"kind":"Name","value":"rootRunId"}},{"kind":"Field","name":{"kind":"Name","value":"parentRunId"}},{"kind":"Field","name":{"kind":"Name","value":"pipelineSnapshotId"}},{"kind":"Field","name":{"kind":"Name","value":"parentPipelineSnapshotId"}},{"kind":"Field","name":{"kind":"Name","value":"pipelineName"}},{"kind":"Field","name":{"kind":"Name","value":"repositoryOrigin"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"repositoryName"}},{"kind":"Field","name":{"kind":"Name","value":"repositoryLocationName"}}]}},{"kind":"Field","name":{"kind":"Name","value":"solidSelection"}},{"kind":"Field","name":{"kind":"Name","value":"assetSelection"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"AssetKey"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"path"}}]}}]}},{"kind":"Field","name":{"kind":"Name","value":"status"}},{"kind":"Field","name":{"kind":"Name","value":"tags"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"key"}},{"kind":"Field","name":{"kind":"Name","value":"value"}}]}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"RunTimeFragment"}}]}}]} as unknown as DocumentNode<RunTableRunFragmentFragment, unknown>;
export const ComputeLogForSubscriptionFragmentDoc = {"kind":"Document","definitions":[{"kind":"FragmentDefinition","name":{"kind":"Name","value":"ComputeLogForSubscription"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"ComputeLogFile"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"path"}},{"kind":"Field","name":{"kind":"Name","value":"cursor"}},{"kind":"Field","name":{"kind":"Name","value":"data"}},{"kind":"Field","name":{"kind":"Name","value":"downloadUrl"}}]}}]} as unknown as DocumentNode<ComputeLogForSubscriptionFragment, unknown>;
export const SchedulePartitionStatusResultFragmentDoc = {"kind":"Document","definitions":[{"kind":"FragmentDefinition","name":{"kind":"Name","value":"SchedulePartitionStatusResult"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"PartitionStatus"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"partitionName"}},{"kind":"Field","name":{"kind":"Name","value":"runStatus"}}]}}]} as unknown as DocumentNode<SchedulePartitionStatusResultFragment, unknown>;
export const SchedulePartitionStatusFragmentFragmentDoc = {"kind":"Document","definitions":[{"kind":"FragmentDefinition","name":{"kind":"Name","value":"SchedulePartitionStatusFragment"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"Schedule"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"mode"}},{"kind":"Field","name":{"kind":"Name","value":"pipelineName"}},{"kind":"Field","name":{"kind":"Name","value":"partitionSet"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"name"}},{"kind":"Field","name":{"kind":"Name","value":"partitionStatusesOrError"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"PartitionStatuses"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"results"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"SchedulePartitionStatusResult"}}]}}]}}]}}]}}]}}]} as unknown as DocumentNode<SchedulePartitionStatusFragmentFragment, unknown>;
export const InstigationStateFragmentFragmentDoc = {"kind":"Document","definitions":[{"kind":"FragmentDefinition","name":{"kind":"Name","value":"InstigationStateFragment"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"InstigationState"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"selectorId"}},{"kind":"Field","name":{"kind":"Name","value":"name"}},{"kind":"Field","name":{"kind":"Name","value":"instigationType"}},{"kind":"Field","name":{"kind":"Name","value":"status"}},{"kind":"Field","name":{"kind":"Name","value":"repositoryName"}},{"kind":"Field","name":{"kind":"Name","value":"repositoryLocationName"}},{"kind":"Field","name":{"kind":"Name","value":"typeSpecificData"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"SensorData"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"lastRunKey"}},{"kind":"Field","name":{"kind":"Name","value":"lastCursor"}}]}},{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"ScheduleData"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"cronSchedule"}}]}}]}},{"kind":"Field","name":{"kind":"Name","value":"runs"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"limit"},"value":{"kind":"IntValue","value":"1"}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"RunStatusFragment"}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"RunTimeFragment"}}]}},{"kind":"Field","name":{"kind":"Name","value":"status"}},{"kind":"Field","name":{"kind":"Name","value":"ticks"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"limit"},"value":{"kind":"IntValue","value":"1"}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"cursor"}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"TickTagFragment"}}]}},{"kind":"Field","name":{"kind":"Name","value":"runningCount"}}]}}]} as unknown as DocumentNode<InstigationStateFragmentFragment, unknown>;
export const ScheduleFragmentFragmentDoc = {"kind":"Document","definitions":[{"kind":"FragmentDefinition","name":{"kind":"Name","value":"ScheduleFragment"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"Schedule"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"name"}},{"kind":"Field","name":{"kind":"Name","value":"cronSchedule"}},{"kind":"Field","name":{"kind":"Name","value":"executionTimezone"}},{"kind":"Field","name":{"kind":"Name","value":"pipelineName"}},{"kind":"Field","name":{"kind":"Name","value":"solidSelection"}},{"kind":"Field","name":{"kind":"Name","value":"mode"}},{"kind":"Field","name":{"kind":"Name","value":"description"}},{"kind":"Field","name":{"kind":"Name","value":"partitionSet"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"name"}}]}},{"kind":"Field","name":{"kind":"Name","value":"scheduleState"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"InstigationStateFragment"}}]}},{"kind":"Field","name":{"kind":"Name","value":"futureTicks"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"limit"},"value":{"kind":"IntValue","value":"5"}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"results"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"timestamp"}}]}}]}}]}}]} as unknown as DocumentNode<ScheduleFragmentFragment, unknown>;
export const RepositoryInfoFragmentFragmentDoc = {"kind":"Document","definitions":[{"kind":"FragmentDefinition","name":{"kind":"Name","value":"RepositoryInfoFragment"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"Repository"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"name"}},{"kind":"Field","name":{"kind":"Name","value":"location"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"name"}}]}},{"kind":"Field","name":{"kind":"Name","value":"displayMetadata"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"key"}},{"kind":"Field","name":{"kind":"Name","value":"value"}}]}}]}}]} as unknown as DocumentNode<RepositoryInfoFragmentFragment, unknown>;
export const RepositorySchedulesFragmentFragmentDoc = {"kind":"Document","definitions":[{"kind":"FragmentDefinition","name":{"kind":"Name","value":"RepositorySchedulesFragment"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"Repository"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"name"}},{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"location"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"name"}}]}},{"kind":"Field","name":{"kind":"Name","value":"schedules"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"ScheduleFragment"}}]}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"RepositoryInfoFragment"}}]}}]} as unknown as DocumentNode<RepositorySchedulesFragmentFragment, unknown>;
export const ScheduleFutureTickRunRequestFragmentDoc = {"kind":"Document","definitions":[{"kind":"FragmentDefinition","name":{"kind":"Name","value":"ScheduleFutureTickRunRequest"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"RunRequest"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"runKey"}},{"kind":"Field","name":{"kind":"Name","value":"runConfigYaml"}},{"kind":"Field","name":{"kind":"Name","value":"tags"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"key"}},{"kind":"Field","name":{"kind":"Name","value":"value"}}]}}]}}]} as unknown as DocumentNode<ScheduleFutureTickRunRequestFragment, unknown>;
export const ScheduleFutureTickEvaluationResultFragmentDoc = {"kind":"Document","definitions":[{"kind":"FragmentDefinition","name":{"kind":"Name","value":"ScheduleFutureTickEvaluationResult"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"TickEvaluation"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"runRequests"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"FragmentSpread","name":{"kind":"Name","value":"ScheduleFutureTickRunRequest"}}]}},{"kind":"Field","name":{"kind":"Name","value":"skipReason"}},{"kind":"Field","name":{"kind":"Name","value":"error"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"FragmentSpread","name":{"kind":"Name","value":"PythonErrorFragment"}}]}}]}}]} as unknown as DocumentNode<ScheduleFutureTickEvaluationResultFragment, unknown>;
export const SensorFragmentFragmentDoc = {"kind":"Document","definitions":[{"kind":"FragmentDefinition","name":{"kind":"Name","value":"SensorFragment"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"Sensor"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"jobOriginId"}},{"kind":"Field","name":{"kind":"Name","value":"name"}},{"kind":"Field","name":{"kind":"Name","value":"description"}},{"kind":"Field","name":{"kind":"Name","value":"minIntervalSeconds"}},{"kind":"Field","name":{"kind":"Name","value":"nextTick"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"timestamp"}}]}},{"kind":"Field","name":{"kind":"Name","value":"sensorState"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"InstigationStateFragment"}}]}},{"kind":"Field","name":{"kind":"Name","value":"targets"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"pipelineName"}},{"kind":"Field","name":{"kind":"Name","value":"solidSelection"}},{"kind":"Field","name":{"kind":"Name","value":"mode"}}]}},{"kind":"Field","name":{"kind":"Name","value":"metadata"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"assetKeys"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"path"}}]}}]}}]}}]} as unknown as DocumentNode<SensorFragmentFragment, unknown>;
export const TypeExplorerFragmentFragmentDoc = {"kind":"Document","definitions":[{"kind":"FragmentDefinition","name":{"kind":"Name","value":"TypeExplorerFragment"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"DagsterType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"name"}},{"kind":"Field","name":{"kind":"Name","value":"description"}},{"kind":"Field","name":{"kind":"Name","value":"metadataEntries"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"FragmentSpread","name":{"kind":"Name","value":"MetadataEntryFragment"}}]}},{"kind":"Field","name":{"kind":"Name","value":"inputSchemaType"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"FragmentSpread","name":{"kind":"Name","value":"ConfigTypeSchemaFragment"}},{"kind":"Field","name":{"kind":"Name","value":"recursiveConfigTypes"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"FragmentSpread","name":{"kind":"Name","value":"ConfigTypeSchemaFragment"}}]}}]}},{"kind":"Field","name":{"kind":"Name","value":"outputSchemaType"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"FragmentSpread","name":{"kind":"Name","value":"ConfigTypeSchemaFragment"}},{"kind":"Field","name":{"kind":"Name","value":"recursiveConfigTypes"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"FragmentSpread","name":{"kind":"Name","value":"ConfigTypeSchemaFragment"}}]}}]}}]}}]} as unknown as DocumentNode<TypeExplorerFragmentFragment, unknown>;
export const TypeListFragmentFragmentDoc = {"kind":"Document","definitions":[{"kind":"FragmentDefinition","name":{"kind":"Name","value":"TypeListFragment"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"DagsterType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"name"}},{"kind":"Field","name":{"kind":"Name","value":"isBuiltin"}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"DagsterTypeWithTooltipFragment"}}]}}]} as unknown as DocumentNode<TypeListFragmentFragment, unknown>;
export const WorkspaceDisplayMetadataFragmentDoc = {"kind":"Document","definitions":[{"kind":"FragmentDefinition","name":{"kind":"Name","value":"WorkspaceDisplayMetadata"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"RepositoryMetadata"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"key"}},{"kind":"Field","name":{"kind":"Name","value":"value"}}]}}]} as unknown as DocumentNode<WorkspaceDisplayMetadataFragment, unknown>;
export const WorkspaceScheduleFragmentDoc = {"kind":"Document","definitions":[{"kind":"FragmentDefinition","name":{"kind":"Name","value":"WorkspaceSchedule"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"Schedule"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"cronSchedule"}},{"kind":"Field","name":{"kind":"Name","value":"executionTimezone"}},{"kind":"Field","name":{"kind":"Name","value":"mode"}},{"kind":"Field","name":{"kind":"Name","value":"name"}},{"kind":"Field","name":{"kind":"Name","value":"pipelineName"}},{"kind":"Field","name":{"kind":"Name","value":"scheduleState"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"selectorId"}},{"kind":"Field","name":{"kind":"Name","value":"status"}}]}}]}}]} as unknown as DocumentNode<WorkspaceScheduleFragment, unknown>;
export const WorkspaceSensorFragmentDoc = {"kind":"Document","definitions":[{"kind":"FragmentDefinition","name":{"kind":"Name","value":"WorkspaceSensor"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"Sensor"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"jobOriginId"}},{"kind":"Field","name":{"kind":"Name","value":"name"}},{"kind":"Field","name":{"kind":"Name","value":"targets"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"mode"}},{"kind":"Field","name":{"kind":"Name","value":"pipelineName"}}]}},{"kind":"Field","name":{"kind":"Name","value":"sensorState"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"selectorId"}},{"kind":"Field","name":{"kind":"Name","value":"status"}}]}}]}}]} as unknown as DocumentNode<WorkspaceSensorFragment, unknown>;
export const WorkspaceRepositoryFragmentDoc = {"kind":"Document","definitions":[{"kind":"FragmentDefinition","name":{"kind":"Name","value":"WorkspaceRepository"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"Repository"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"name"}},{"kind":"Field","name":{"kind":"Name","value":"pipelines"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"name"}},{"kind":"Field","name":{"kind":"Name","value":"isJob"}},{"kind":"Field","name":{"kind":"Name","value":"isAssetJob"}},{"kind":"Field","name":{"kind":"Name","value":"pipelineSnapshotId"}}]}},{"kind":"Field","name":{"kind":"Name","value":"schedules"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"WorkspaceSchedule"}}]}},{"kind":"Field","name":{"kind":"Name","value":"sensors"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"WorkspaceSensor"}}]}},{"kind":"Field","name":{"kind":"Name","value":"partitionSets"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"mode"}},{"kind":"Field","name":{"kind":"Name","value":"pipelineName"}}]}},{"kind":"Field","name":{"kind":"Name","value":"assetGroups"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"groupName"}}]}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"RepositoryInfoFragment"}}]}}]} as unknown as DocumentNode<WorkspaceRepositoryFragment, unknown>;
export const WorkspaceLocationFragmentDoc = {"kind":"Document","definitions":[{"kind":"FragmentDefinition","name":{"kind":"Name","value":"WorkspaceLocation"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"RepositoryLocation"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"isReloadSupported"}},{"kind":"Field","name":{"kind":"Name","value":"serverId"}},{"kind":"Field","name":{"kind":"Name","value":"name"}},{"kind":"Field","name":{"kind":"Name","value":"repositories"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"WorkspaceRepository"}}]}}]}}]} as unknown as DocumentNode<WorkspaceLocationFragment, unknown>;
export const WorkspaceLocationNodeFragmentDoc = {"kind":"Document","definitions":[{"kind":"FragmentDefinition","name":{"kind":"Name","value":"WorkspaceLocationNode"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"WorkspaceLocationEntry"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"name"}},{"kind":"Field","name":{"kind":"Name","value":"loadStatus"}},{"kind":"Field","name":{"kind":"Name","value":"displayMetadata"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"FragmentSpread","name":{"kind":"Name","value":"WorkspaceDisplayMetadata"}}]}},{"kind":"Field","name":{"kind":"Name","value":"updatedTimestamp"}},{"kind":"Field","name":{"kind":"Name","value":"locationOrLoadError"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"RepositoryLocation"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"WorkspaceLocation"}}]}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"PythonErrorFragment"}}]}}]}}]} as unknown as DocumentNode<WorkspaceLocationNodeFragment, unknown>;
export const CapturedLogsSubscriptionDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"subscription","name":{"kind":"Name","value":"CapturedLogsSubscription"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"logKey"}},"type":{"kind":"NonNullType","type":{"kind":"ListType","type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"String"}}}}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"cursor"}},"type":{"kind":"NamedType","name":{"kind":"Name","value":"String"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"capturedLogs"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"logKey"},"value":{"kind":"Variable","name":{"kind":"Name","value":"logKey"}}},{"kind":"Argument","name":{"kind":"Name","value":"cursor"},"value":{"kind":"Variable","name":{"kind":"Name","value":"cursor"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"FragmentSpread","name":{"kind":"Name","value":"CapturedLog"}}]}}]}},...CapturedLogFragmentDoc.definitions]} as unknown as DocumentNode<CapturedLogsSubscriptionSubscription, CapturedLogsSubscriptionSubscriptionVariables>;
export const CapturedLogsMetadataQueryDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"query","name":{"kind":"Name","value":"CapturedLogsMetadataQuery"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"logKey"}},"type":{"kind":"NonNullType","type":{"kind":"ListType","type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"String"}}}}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"capturedLogsMetadata"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"logKey"},"value":{"kind":"Variable","name":{"kind":"Name","value":"logKey"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"stdoutDownloadUrl"}},{"kind":"Field","name":{"kind":"Name","value":"stdoutLocation"}},{"kind":"Field","name":{"kind":"Name","value":"stderrDownloadUrl"}},{"kind":"Field","name":{"kind":"Name","value":"stderrLocation"}}]}}]}}]} as unknown as DocumentNode<CapturedLogsMetadataQueryQuery, CapturedLogsMetadataQueryQueryVariables>;
export const CapturedLogsQueryDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"query","name":{"kind":"Name","value":"CapturedLogsQuery"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"logKey"}},"type":{"kind":"NonNullType","type":{"kind":"ListType","type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"String"}}}}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"cursor"}},"type":{"kind":"NamedType","name":{"kind":"Name","value":"String"}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"limit"}},"type":{"kind":"NamedType","name":{"kind":"Name","value":"Int"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"capturedLogs"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"logKey"},"value":{"kind":"Variable","name":{"kind":"Name","value":"logKey"}}},{"kind":"Argument","name":{"kind":"Name","value":"cursor"},"value":{"kind":"Variable","name":{"kind":"Name","value":"cursor"}}},{"kind":"Argument","name":{"kind":"Name","value":"limit"},"value":{"kind":"Variable","name":{"kind":"Name","value":"limit"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"stdout"}},{"kind":"Field","name":{"kind":"Name","value":"stderr"}},{"kind":"Field","name":{"kind":"Name","value":"cursor"}}]}}]}}]} as unknown as DocumentNode<CapturedLogsQueryQuery, CapturedLogsQueryQueryVariables>;
export const TickLogEventsQueryDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"query","name":{"kind":"Name","value":"TickLogEventsQuery"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"instigationSelector"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"InstigationSelector"}}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"timestamp"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"Float"}}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"instigationStateOrError"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"instigationSelector"},"value":{"kind":"Variable","name":{"kind":"Name","value":"instigationSelector"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"__typename"}},{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"InstigationState"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"tick"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"timestamp"},"value":{"kind":"Variable","name":{"kind":"Name","value":"timestamp"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"status"}},{"kind":"Field","name":{"kind":"Name","value":"timestamp"}},{"kind":"Field","name":{"kind":"Name","value":"logEvents"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"events"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"FragmentSpread","name":{"kind":"Name","value":"TickLogEvent"}}]}}]}}]}}]}}]}}]}},...TickLogEventFragmentDoc.definitions]} as unknown as DocumentNode<TickLogEventsQueryQuery, TickLogEventsQueryQueryVariables>;
export const PermissionsQueryDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"query","name":{"kind":"Name","value":"PermissionsQuery"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","alias":{"kind":"Name","value":"unscopedPermissions"},"name":{"kind":"Name","value":"permissions"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"FragmentSpread","name":{"kind":"Name","value":"PermissionFragment"}}]}},{"kind":"Field","name":{"kind":"Name","value":"workspaceOrError"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"Workspace"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"locationEntries"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"name"}},{"kind":"Field","name":{"kind":"Name","value":"permissions"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"FragmentSpread","name":{"kind":"Name","value":"PermissionFragment"}}]}}]}}]}}]}}]}},...PermissionFragmentFragmentDoc.definitions]} as unknown as DocumentNode<PermissionsQueryQuery, PermissionsQueryQueryVariables>;
export const LogTelemetryMutationDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"mutation","name":{"kind":"Name","value":"LogTelemetryMutation"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"action"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"String"}}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"metadata"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"String"}}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"clientTime"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"String"}}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"clientId"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"String"}}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"logTelemetry"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"action"},"value":{"kind":"Variable","name":{"kind":"Name","value":"action"}}},{"kind":"Argument","name":{"kind":"Name","value":"metadata"},"value":{"kind":"Variable","name":{"kind":"Name","value":"metadata"}}},{"kind":"Argument","name":{"kind":"Name","value":"clientTime"},"value":{"kind":"Variable","name":{"kind":"Name","value":"clientTime"}}},{"kind":"Argument","name":{"kind":"Name","value":"clientId"},"value":{"kind":"Variable","name":{"kind":"Name","value":"clientId"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"LogTelemetrySuccess"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"action"}}]}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"PythonErrorFragment"}}]}}]}},...PythonErrorFragmentFragmentDoc.definitions,...PythonErrorChainFragmentDoc.definitions]} as unknown as DocumentNode<LogTelemetryMutationMutation, LogTelemetryMutationMutationVariables>;
export const AssetGraphSidebarQueryDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"query","name":{"kind":"Name","value":"AssetGraphSidebarQuery"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"pipelineSelector"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"PipelineSelector"}}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"pipelineSnapshotOrError"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"activePipelineSelector"},"value":{"kind":"Variable","name":{"kind":"Name","value":"pipelineSelector"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"PipelineSnapshot"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"SidebarRootContainerFragment"}}]}},{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"PipelineNotFoundError"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"message"}}]}},{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"PipelineSnapshotNotFoundError"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"message"}}]}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"PythonErrorFragment"}}]}}]}},...SidebarRootContainerFragmentFragmentDoc.definitions,...SidebarResourcesSectionFragmentFragmentDoc.definitions,...ConfigTypeSchemaFragmentFragmentDoc.definitions,...MetadataEntryFragmentFragmentDoc.definitions,...TableSchemaFragmentFragmentDoc.definitions,...ConstraintsForTableColumnFragmentDoc.definitions,...TableSchemaForMetadataEntryFragmentDoc.definitions,...PythonErrorFragmentFragmentDoc.definitions,...PythonErrorChainFragmentDoc.definitions]} as unknown as DocumentNode<AssetGraphSidebarQueryQuery, AssetGraphSidebarQueryQueryVariables>;
export const SidebarAssetQueryDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"query","name":{"kind":"Name","value":"SidebarAssetQuery"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"assetKey"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"AssetKeyInput"}}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"assetNodeOrError"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"assetKey"},"value":{"kind":"Variable","name":{"kind":"Name","value":"assetKey"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"__typename"}},{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"AssetNode"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"SidebarAssetFragment"}}]}}]}}]}},...SidebarAssetFragmentFragmentDoc.definitions,...AssetNodeConfigFragmentFragmentDoc.definitions,...ConfigTypeSchemaFragmentFragmentDoc.definitions,...MetadataEntryFragmentFragmentDoc.definitions,...TableSchemaFragmentFragmentDoc.definitions,...ConstraintsForTableColumnFragmentDoc.definitions,...TableSchemaForMetadataEntryFragmentDoc.definitions,...AssetNodeOpMetadataFragmentFragmentDoc.definitions,...DagsterTypeFragmentFragmentDoc.definitions,..._DagsterTypeFragmentFragmentDoc.definitions]} as unknown as DocumentNode<SidebarAssetQueryQuery, SidebarAssetQueryQueryVariables>;
export const AssetGraphQueryDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"query","name":{"kind":"Name","value":"AssetGraphQuery"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"pipelineSelector"}},"type":{"kind":"NamedType","name":{"kind":"Name","value":"PipelineSelector"}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"groupSelector"}},"type":{"kind":"NamedType","name":{"kind":"Name","value":"AssetGroupSelector"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"assetNodes"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"pipeline"},"value":{"kind":"Variable","name":{"kind":"Name","value":"pipelineSelector"}}},{"kind":"Argument","name":{"kind":"Name","value":"group"},"value":{"kind":"Variable","name":{"kind":"Name","value":"groupSelector"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"AssetNodeForGraphQuery"}}]}}]}},...AssetNodeForGraphQueryFragmentDoc.definitions,...AssetNodeFragmentFragmentDoc.definitions,...AssetNodeKeyFragmentDoc.definitions]} as unknown as DocumentNode<AssetGraphQueryQuery, AssetGraphQueryQueryVariables>;
export const AssetForNavigationQueryDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"query","name":{"kind":"Name","value":"AssetForNavigationQuery"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"key"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"AssetKeyInput"}}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"assetOrError"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"assetKey"},"value":{"kind":"Variable","name":{"kind":"Name","value":"key"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"__typename"}},{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"Asset"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"definition"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"opNames"}},{"kind":"Field","name":{"kind":"Name","value":"jobNames"}},{"kind":"Field","name":{"kind":"Name","value":"groupName"}},{"kind":"Field","name":{"kind":"Name","value":"repository"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"name"}},{"kind":"Field","name":{"kind":"Name","value":"location"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"name"}}]}}]}}]}}]}}]}}]}}]} as unknown as DocumentNode<AssetForNavigationQueryQuery, AssetForNavigationQueryQueryVariables>;
export const AssetGraphLiveQueryDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"query","name":{"kind":"Name","value":"AssetGraphLiveQuery"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"assetKeys"}},"type":{"kind":"NonNullType","type":{"kind":"ListType","type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"AssetKeyInput"}}}}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"assetNodes"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"assetKeys"},"value":{"kind":"Variable","name":{"kind":"Name","value":"assetKeys"}}},{"kind":"Argument","name":{"kind":"Name","value":"loadMaterializations"},"value":{"kind":"BooleanValue","value":true}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"AssetNodeLiveFragment"}}]}},{"kind":"Field","name":{"kind":"Name","value":"assetsLatestInfo"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"assetKeys"},"value":{"kind":"Variable","name":{"kind":"Name","value":"assetKeys"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"FragmentSpread","name":{"kind":"Name","value":"AssetLatestInfoFragment"}}]}}]}},...AssetNodeLiveFragmentFragmentDoc.definitions,...AssetNodeLiveMaterializationFragmentDoc.definitions,...AssetNodeLiveFreshnessPolicyFragmentDoc.definitions,...AssetNodeLiveFreshnessInfoFragmentDoc.definitions,...AssetNodeLiveObservationFragmentDoc.definitions,...AssetLatestInfoFragmentFragmentDoc.definitions,...AssetLatestInfoRunFragmentDoc.definitions]} as unknown as DocumentNode<AssetGraphLiveQueryQuery, AssetGraphLiveQueryQueryVariables>;
export const AssetLiveRunLogsSubscriptionDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"subscription","name":{"kind":"Name","value":"AssetLiveRunLogsSubscription"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"runId"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"ID"}}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"pipelineRunLogs"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"runId"},"value":{"kind":"Variable","name":{"kind":"Name","value":"runId"}}},{"kind":"Argument","name":{"kind":"Name","value":"cursor"},"value":{"kind":"StringValue","value":"HEAD","block":false}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"__typename"}},{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"PipelineRunLogsSubscriptionSuccess"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"messages"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"__typename"}},{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"AssetMaterializationPlannedEvent"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"assetKey"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"path"}}]}}]}},{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"MaterializationEvent"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"assetKey"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"path"}}]}}]}},{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"ObservationEvent"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"assetKey"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"path"}}]}}]}},{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"ExecutionStepStartEvent"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"stepKey"}}]}},{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"ExecutionStepFailureEvent"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"stepKey"}}]}}]}}]}}]}}]}}]} as unknown as DocumentNode<AssetLiveRunLogsSubscriptionSubscription, AssetLiveRunLogsSubscriptionSubscriptionVariables>;
export const AssetDefinitionCollisionQueryDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"query","name":{"kind":"Name","value":"AssetDefinitionCollisionQuery"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"assetKeys"}},"type":{"kind":"NonNullType","type":{"kind":"ListType","type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"AssetKeyInput"}}}}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"assetNodeDefinitionCollisions"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"assetKeys"},"value":{"kind":"Variable","name":{"kind":"Name","value":"assetKeys"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"assetKey"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"path"}}]}},{"kind":"Field","name":{"kind":"Name","value":"repositories"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"name"}},{"kind":"Field","name":{"kind":"Name","value":"location"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"name"}}]}}]}}]}}]}}]} as unknown as DocumentNode<AssetDefinitionCollisionQueryQuery, AssetDefinitionCollisionQueryQueryVariables>;
export const AssetPartitionDetailQueryDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"query","name":{"kind":"Name","value":"AssetPartitionDetailQuery"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"assetKey"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"AssetKeyInput"}}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"partitionKey"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"String"}}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"assetNodeOrError"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"assetKey"},"value":{"kind":"Variable","name":{"kind":"Name","value":"assetKey"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"__typename"}},{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"AssetNode"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"assetMaterializations"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"partitions"},"value":{"kind":"ListValue","values":[{"kind":"Variable","name":{"kind":"Name","value":"partitionKey"}}]}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"MaterializationEvent"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"runId"}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"AssetMaterializationFragment"}}]}}]}},{"kind":"Field","name":{"kind":"Name","value":"assetObservations"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"partitions"},"value":{"kind":"ListValue","values":[{"kind":"Variable","name":{"kind":"Name","value":"partitionKey"}}]}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"ObservationEvent"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"runId"}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"AssetObservationFragment"}}]}}]}}]}}]}}]}},...AssetMaterializationFragmentFragmentDoc.definitions,...MetadataEntryFragmentFragmentDoc.definitions,...TableSchemaFragmentFragmentDoc.definitions,...ConstraintsForTableColumnFragmentDoc.definitions,...TableSchemaForMetadataEntryFragmentDoc.definitions,...AssetLineageFragmentFragmentDoc.definitions,...AssetObservationFragmentFragmentDoc.definitions]} as unknown as DocumentNode<AssetPartitionDetailQueryQuery, AssetPartitionDetailQueryQueryVariables>;
export const AssetViewDefinitionQueryDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"query","name":{"kind":"Name","value":"AssetViewDefinitionQuery"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"assetKey"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"AssetKeyInput"}}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"assetOrError"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"assetKey"},"value":{"kind":"Variable","name":{"kind":"Name","value":"assetKey"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"Asset"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"key"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"path"}}]}},{"kind":"Field","name":{"kind":"Name","value":"assetMaterializations"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"limit"},"value":{"kind":"IntValue","value":"1"}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"timestamp"}}]}},{"kind":"Field","name":{"kind":"Name","value":"definition"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"AssetViewDefinitionNode"}}]}}]}}]}}]}},...AssetViewDefinitionNodeFragmentDoc.definitions,...AssetNodeInstigatorsFragmentFragmentDoc.definitions,...ScheduleSwitchFragmentFragmentDoc.definitions,...SensorSwitchFragmentFragmentDoc.definitions,...AssetNodeDefinitionFragmentFragmentDoc.definitions,...AssetNodeConfigFragmentFragmentDoc.definitions,...ConfigTypeSchemaFragmentFragmentDoc.definitions,...AssetNodeFragmentFragmentDoc.definitions,...AssetNodeKeyFragmentDoc.definitions,...AssetNodeOpMetadataFragmentFragmentDoc.definitions,...MetadataEntryFragmentFragmentDoc.definitions,...TableSchemaFragmentFragmentDoc.definitions,...ConstraintsForTableColumnFragmentDoc.definitions,...TableSchemaForMetadataEntryFragmentDoc.definitions,...DagsterTypeFragmentFragmentDoc.definitions,..._DagsterTypeFragmentFragmentDoc.definitions]} as unknown as DocumentNode<AssetViewDefinitionQueryQuery, AssetViewDefinitionQueryQueryVariables>;
export const AssetWipeMutationDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"mutation","name":{"kind":"Name","value":"AssetWipeMutation"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"assetKeys"}},"type":{"kind":"NonNullType","type":{"kind":"ListType","type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"AssetKeyInput"}}}}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"wipeAssets"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"assetKeys"},"value":{"kind":"Variable","name":{"kind":"Name","value":"assetKeys"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"AssetWipeSuccess"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"assetKeys"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"path"}}]}}]}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"PythonErrorFragment"}}]}}]}},...PythonErrorFragmentFragmentDoc.definitions,...PythonErrorChainFragmentDoc.definitions]} as unknown as DocumentNode<AssetWipeMutationMutation, AssetWipeMutationMutationVariables>;
export const AssetsCatalogRootQueryDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"query","name":{"kind":"Name","value":"AssetsCatalogRootQuery"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"assetKey"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"AssetKeyInput"}}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"assetOrError"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"assetKey"},"value":{"kind":"Variable","name":{"kind":"Name","value":"assetKey"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"__typename"}},{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"Asset"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"key"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"path"}}]}}]}}]}}]}}]} as unknown as DocumentNode<AssetsCatalogRootQueryQuery, AssetsCatalogRootQueryQueryVariables>;
export const AssetCatalogTableQueryDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"query","name":{"kind":"Name","value":"AssetCatalogTableQuery"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"assetsOrError"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"__typename"}},{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"AssetConnection"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"nodes"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"AssetTableFragment"}}]}}]}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"PythonErrorFragment"}}]}}]}},...AssetTableFragmentFragmentDoc.definitions,...AssetTableDefinitionFragmentFragmentDoc.definitions,...PythonErrorFragmentFragmentDoc.definitions,...PythonErrorChainFragmentDoc.definitions]} as unknown as DocumentNode<AssetCatalogTableQueryQuery, AssetCatalogTableQueryQueryVariables>;
export const AssetCatalogGroupTableQueryDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"query","name":{"kind":"Name","value":"AssetCatalogGroupTableQuery"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"group"}},"type":{"kind":"NamedType","name":{"kind":"Name","value":"AssetGroupSelector"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"assetNodes"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"group"},"value":{"kind":"Variable","name":{"kind":"Name","value":"group"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"AssetCatalogGroupTableNode"}}]}}]}},...AssetCatalogGroupTableNodeFragmentDoc.definitions,...AssetTableDefinitionFragmentFragmentDoc.definitions]} as unknown as DocumentNode<AssetCatalogGroupTableQueryQuery, AssetCatalogGroupTableQueryQueryVariables>;
export const LaunchAssetLoaderQueryDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"query","name":{"kind":"Name","value":"LaunchAssetLoaderQuery"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"assetKeys"}},"type":{"kind":"NonNullType","type":{"kind":"ListType","type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"AssetKeyInput"}}}}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"assetNodes"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"assetKeys"},"value":{"kind":"Variable","name":{"kind":"Name","value":"assetKeys"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"LaunchAssetExecutionAssetNodeFragment"}}]}},{"kind":"Field","name":{"kind":"Name","value":"assetNodeDefinitionCollisions"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"assetKeys"},"value":{"kind":"Variable","name":{"kind":"Name","value":"assetKeys"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"assetKey"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"path"}}]}},{"kind":"Field","name":{"kind":"Name","value":"repositories"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"name"}},{"kind":"Field","name":{"kind":"Name","value":"location"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"name"}}]}}]}}]}}]}},...LaunchAssetExecutionAssetNodeFragmentFragmentDoc.definitions,...PartitionDefinitionForLaunchAssetFragmentDoc.definitions,...AssetNodeConfigFragmentFragmentDoc.definitions,...ConfigTypeSchemaFragmentFragmentDoc.definitions]} as unknown as DocumentNode<LaunchAssetLoaderQueryQuery, LaunchAssetLoaderQueryQueryVariables>;
export const LaunchAssetLoaderResourceQueryDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"query","name":{"kind":"Name","value":"LaunchAssetLoaderResourceQuery"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"pipelineName"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"String"}}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"repositoryLocationName"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"String"}}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"repositoryName"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"String"}}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"partitionSetsOrError"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"pipelineName"},"value":{"kind":"Variable","name":{"kind":"Name","value":"pipelineName"}}},{"kind":"Argument","name":{"kind":"Name","value":"repositorySelector"},"value":{"kind":"ObjectValue","fields":[{"kind":"ObjectField","name":{"kind":"Name","value":"repositoryName"},"value":{"kind":"Variable","name":{"kind":"Name","value":"repositoryName"}}},{"kind":"ObjectField","name":{"kind":"Name","value":"repositoryLocationName"},"value":{"kind":"Variable","name":{"kind":"Name","value":"repositoryLocationName"}}}]}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"PythonError"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"message"}}]}},{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"PipelineNotFoundError"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"message"}}]}},{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"PartitionSets"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"results"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"name"}}]}}]}}]}},{"kind":"Field","name":{"kind":"Name","value":"pipelineOrError"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"params"},"value":{"kind":"ObjectValue","fields":[{"kind":"ObjectField","name":{"kind":"Name","value":"pipelineName"},"value":{"kind":"Variable","name":{"kind":"Name","value":"pipelineName"}}},{"kind":"ObjectField","name":{"kind":"Name","value":"repositoryName"},"value":{"kind":"Variable","name":{"kind":"Name","value":"repositoryName"}}},{"kind":"ObjectField","name":{"kind":"Name","value":"repositoryLocationName"},"value":{"kind":"Variable","name":{"kind":"Name","value":"repositoryLocationName"}}}]}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"PythonError"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"message"}}]}},{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"InvalidSubsetError"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"message"}}]}},{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"PipelineNotFoundError"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"message"}}]}},{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"Pipeline"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"modes"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"resources"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"name"}},{"kind":"Field","name":{"kind":"Name","value":"description"}},{"kind":"Field","name":{"kind":"Name","value":"configField"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"name"}},{"kind":"Field","name":{"kind":"Name","value":"isRequired"}},{"kind":"Field","name":{"kind":"Name","value":"configType"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"FragmentSpread","name":{"kind":"Name","value":"ConfigTypeSchemaFragment"}},{"kind":"Field","name":{"kind":"Name","value":"recursiveConfigTypes"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"FragmentSpread","name":{"kind":"Name","value":"ConfigTypeSchemaFragment"}}]}}]}}]}}]}}]}}]}}]}}]}},...ConfigTypeSchemaFragmentFragmentDoc.definitions]} as unknown as DocumentNode<LaunchAssetLoaderResourceQueryQuery, LaunchAssetLoaderResourceQueryQueryVariables>;
export const LaunchAssetCheckUpstreamQueryDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"query","name":{"kind":"Name","value":"LaunchAssetCheckUpstreamQuery"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"assetKeys"}},"type":{"kind":"NonNullType","type":{"kind":"ListType","type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"AssetKeyInput"}}}}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"assetNodes"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"assetKeys"},"value":{"kind":"Variable","name":{"kind":"Name","value":"assetKeys"}}},{"kind":"Argument","name":{"kind":"Name","value":"loadMaterializations"},"value":{"kind":"BooleanValue","value":true}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"assetKey"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"path"}}]}},{"kind":"Field","name":{"kind":"Name","value":"isSource"}},{"kind":"Field","name":{"kind":"Name","value":"opNames"}},{"kind":"Field","name":{"kind":"Name","value":"graphName"}},{"kind":"Field","name":{"kind":"Name","value":"assetMaterializations"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"limit"},"value":{"kind":"IntValue","value":"1"}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"runId"}}]}}]}}]}}]} as unknown as DocumentNode<LaunchAssetCheckUpstreamQueryQuery, LaunchAssetCheckUpstreamQueryQueryVariables>;
export const RunningBackfillsNoticeQueryDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"query","name":{"kind":"Name","value":"RunningBackfillsNoticeQuery"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"partitionBackfillsOrError"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"status"},"value":{"kind":"EnumValue","value":"REQUESTED"}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"__typename"}},{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"PartitionBackfills"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"results"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"partitionSetName"}},{"kind":"Field","name":{"kind":"Name","value":"backfillId"}}]}}]}}]}}]}}]} as unknown as DocumentNode<RunningBackfillsNoticeQueryQuery, RunningBackfillsNoticeQueryQueryVariables>;
export const PartitionHealthQueryDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"query","name":{"kind":"Name","value":"PartitionHealthQuery"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"assetKey"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"AssetKeyInput"}}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"assetNodeOrError"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"assetKey"},"value":{"kind":"Variable","name":{"kind":"Name","value":"assetKey"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"AssetNode"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"partitionKeysByDimension"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"name"}},{"kind":"Field","name":{"kind":"Name","value":"partitionKeys"}}]}},{"kind":"Field","name":{"kind":"Name","value":"partitionMaterializationCounts"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"MaterializationCountGroupedByDimension"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"materializationCountsGrouped"}}]}},{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"MaterializationCountSingleDimension"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"materializationCounts"}}]}}]}}]}}]}}]}}]} as unknown as DocumentNode<PartitionHealthQueryQuery, PartitionHealthQueryQueryVariables>;
export const AssetJobPartitionSetsQueryDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"query","name":{"kind":"Name","value":"AssetJobPartitionSetsQuery"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"pipelineName"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"String"}}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"repositoryName"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"String"}}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"repositoryLocationName"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"String"}}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"partitionSetsOrError"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"pipelineName"},"value":{"kind":"Variable","name":{"kind":"Name","value":"pipelineName"}}},{"kind":"Argument","name":{"kind":"Name","value":"repositorySelector"},"value":{"kind":"ObjectValue","fields":[{"kind":"ObjectField","name":{"kind":"Name","value":"repositoryName"},"value":{"kind":"Variable","name":{"kind":"Name","value":"repositoryName"}}},{"kind":"ObjectField","name":{"kind":"Name","value":"repositoryLocationName"},"value":{"kind":"Variable","name":{"kind":"Name","value":"repositoryLocationName"}}}]}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"__typename"}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"PythonErrorFragment"}},{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"PipelineNotFoundError"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"__typename"}},{"kind":"Field","name":{"kind":"Name","value":"message"}}]}},{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"PartitionSets"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"__typename"}},{"kind":"Field","name":{"kind":"Name","value":"results"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"name"}},{"kind":"Field","name":{"kind":"Name","value":"mode"}},{"kind":"Field","name":{"kind":"Name","value":"solidSelection"}}]}}]}}]}}]}},...PythonErrorFragmentFragmentDoc.definitions,...PythonErrorChainFragmentDoc.definitions]} as unknown as DocumentNode<AssetJobPartitionSetsQueryQuery, AssetJobPartitionSetsQueryQueryVariables>;
export const AssetEventsQueryDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"query","name":{"kind":"Name","value":"AssetEventsQuery"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"assetKey"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"AssetKeyInput"}}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"limit"}},"type":{"kind":"NamedType","name":{"kind":"Name","value":"Int"}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"before"}},"type":{"kind":"NamedType","name":{"kind":"Name","value":"String"}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"partitionInLast"}},"type":{"kind":"NamedType","name":{"kind":"Name","value":"Int"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"assetOrError"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"assetKey"},"value":{"kind":"Variable","name":{"kind":"Name","value":"assetKey"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"Asset"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"key"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"path"}}]}},{"kind":"Field","name":{"kind":"Name","value":"assetObservations"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"limit"},"value":{"kind":"Variable","name":{"kind":"Name","value":"limit"}}},{"kind":"Argument","name":{"kind":"Name","value":"beforeTimestampMillis"},"value":{"kind":"Variable","name":{"kind":"Name","value":"before"}}},{"kind":"Argument","name":{"kind":"Name","value":"partitionInLast"},"value":{"kind":"Variable","name":{"kind":"Name","value":"partitionInLast"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"FragmentSpread","name":{"kind":"Name","value":"AssetObservationFragment"}}]}},{"kind":"Field","name":{"kind":"Name","value":"assetMaterializations"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"limit"},"value":{"kind":"Variable","name":{"kind":"Name","value":"limit"}}},{"kind":"Argument","name":{"kind":"Name","value":"beforeTimestampMillis"},"value":{"kind":"Variable","name":{"kind":"Name","value":"before"}}},{"kind":"Argument","name":{"kind":"Name","value":"partitionInLast"},"value":{"kind":"Variable","name":{"kind":"Name","value":"partitionInLast"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"FragmentSpread","name":{"kind":"Name","value":"AssetMaterializationFragment"}}]}},{"kind":"Field","name":{"kind":"Name","value":"definition"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"partitionKeys"}}]}}]}}]}}]}},...AssetObservationFragmentFragmentDoc.definitions,...MetadataEntryFragmentFragmentDoc.definitions,...TableSchemaFragmentFragmentDoc.definitions,...ConstraintsForTableColumnFragmentDoc.definitions,...TableSchemaForMetadataEntryFragmentDoc.definitions,...AssetMaterializationFragmentFragmentDoc.definitions,...AssetLineageFragmentFragmentDoc.definitions]} as unknown as DocumentNode<AssetEventsQueryQuery, AssetEventsQueryQueryVariables>;
export const RunGroupPanelQueryDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"query","name":{"kind":"Name","value":"RunGroupPanelQuery"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"runId"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"ID"}}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"runGroupOrError"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"runId"},"value":{"kind":"Variable","name":{"kind":"Name","value":"runId"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"__typename"}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"PythonErrorFragment"}},{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"RunGroup"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"rootRunId"}},{"kind":"Field","name":{"kind":"Name","value":"runs"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"RunGroupPanelRun"}}]}}]}}]}}]}},...PythonErrorFragmentFragmentDoc.definitions,...PythonErrorChainFragmentDoc.definitions,...RunGroupPanelRunFragmentDoc.definitions,...RunTimeFragmentFragmentDoc.definitions]} as unknown as DocumentNode<RunGroupPanelQueryQuery, RunGroupPanelQueryQueryVariables>;
export const SingleBackfillQueryDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"query","name":{"kind":"Name","value":"SingleBackfillQuery"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"backfillId"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"String"}}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"partitionBackfillOrError"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"backfillId"},"value":{"kind":"Variable","name":{"kind":"Name","value":"backfillId"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"PartitionBackfill"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"partitionStatuses"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"FragmentSpread","name":{"kind":"Name","value":"PartitionStatusesForBackfill"}}]}}]}}]}}]}},...PartitionStatusesForBackfillFragmentDoc.definitions]} as unknown as DocumentNode<SingleBackfillQueryQuery, SingleBackfillQueryQueryVariables>;
export const CancelBackfillDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"mutation","name":{"kind":"Name","value":"CancelBackfill"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"backfillId"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"String"}}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"cancelPartitionBackfill"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"backfillId"},"value":{"kind":"Variable","name":{"kind":"Name","value":"backfillId"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"__typename"}},{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"CancelBackfillSuccess"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"backfillId"}}]}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"PythonErrorFragment"}}]}}]}},...PythonErrorFragmentFragmentDoc.definitions,...PythonErrorChainFragmentDoc.definitions]} as unknown as DocumentNode<CancelBackfillMutation, CancelBackfillMutationVariables>;
export const ResumeBackfillDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"mutation","name":{"kind":"Name","value":"resumeBackfill"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"backfillId"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"String"}}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"resumePartitionBackfill"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"backfillId"},"value":{"kind":"Variable","name":{"kind":"Name","value":"backfillId"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"__typename"}},{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"ResumeBackfillSuccess"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"backfillId"}}]}},{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"UnauthorizedError"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"message"}}]}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"PythonErrorFragment"}}]}}]}},...PythonErrorFragmentFragmentDoc.definitions,...PythonErrorChainFragmentDoc.definitions]} as unknown as DocumentNode<ResumeBackfillMutation, ResumeBackfillMutationVariables>;
export const LaunchPartitionBackfillDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"mutation","name":{"kind":"Name","value":"LaunchPartitionBackfill"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"backfillParams"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"LaunchBackfillParams"}}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"launchPartitionBackfill"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"backfillParams"},"value":{"kind":"Variable","name":{"kind":"Name","value":"backfillParams"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"__typename"}},{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"LaunchBackfillSuccess"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"backfillId"}}]}},{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"PartitionSetNotFoundError"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"message"}}]}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"PythonErrorFragment"}},{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"InvalidStepError"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"invalidStepKey"}}]}},{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"InvalidOutputError"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"stepKey"}},{"kind":"Field","name":{"kind":"Name","value":"invalidOutputName"}}]}},{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"UnauthorizedError"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"message"}}]}},{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"PipelineNotFoundError"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"message"}}]}},{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"RunConflict"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"message"}}]}},{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"ConflictingExecutionParamsError"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"message"}}]}},{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"PresetNotFoundError"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"message"}}]}},{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"RunConfigValidationInvalid"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"pipelineName"}},{"kind":"Field","name":{"kind":"Name","value":"errors"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"__typename"}},{"kind":"Field","name":{"kind":"Name","value":"message"}},{"kind":"Field","name":{"kind":"Name","value":"path"}},{"kind":"Field","name":{"kind":"Name","value":"reason"}}]}}]}}]}}]}},...PythonErrorFragmentFragmentDoc.definitions,...PythonErrorChainFragmentDoc.definitions]} as unknown as DocumentNode<LaunchPartitionBackfillMutation, LaunchPartitionBackfillMutationVariables>;
export const InstanceHealthForBackfillsQueryDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"query","name":{"kind":"Name","value":"InstanceHealthForBackfillsQuery"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"instance"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"FragmentSpread","name":{"kind":"Name","value":"InstanceHealthFragment"}}]}}]}},...InstanceHealthFragmentFragmentDoc.definitions,...DaemonHealthFragmentFragmentDoc.definitions,...DaemonStatusForListFragmentDoc.definitions,...PythonErrorFragmentFragmentDoc.definitions,...PythonErrorChainFragmentDoc.definitions]} as unknown as DocumentNode<InstanceHealthForBackfillsQueryQuery, InstanceHealthForBackfillsQueryQueryVariables>;
export const InstanceBackfillsQueryDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"query","name":{"kind":"Name","value":"InstanceBackfillsQuery"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"cursor"}},"type":{"kind":"NamedType","name":{"kind":"Name","value":"String"}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"limit"}},"type":{"kind":"NamedType","name":{"kind":"Name","value":"Int"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"partitionBackfillsOrError"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"cursor"},"value":{"kind":"Variable","name":{"kind":"Name","value":"cursor"}}},{"kind":"Argument","name":{"kind":"Name","value":"limit"},"value":{"kind":"Variable","name":{"kind":"Name","value":"limit"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"PartitionBackfills"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"results"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"backfillId"}},{"kind":"Field","name":{"kind":"Name","value":"status"}},{"kind":"Field","name":{"kind":"Name","value":"numPartitions"}},{"kind":"Field","name":{"kind":"Name","value":"timestamp"}},{"kind":"Field","name":{"kind":"Name","value":"partitionSetName"}},{"kind":"Field","name":{"kind":"Name","value":"partitionSet"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"name"}},{"kind":"Field","name":{"kind":"Name","value":"mode"}},{"kind":"Field","name":{"kind":"Name","value":"pipelineName"}},{"kind":"Field","name":{"kind":"Name","value":"repositoryOrigin"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"repositoryName"}},{"kind":"Field","name":{"kind":"Name","value":"repositoryLocationName"}}]}}]}},{"kind":"Field","name":{"kind":"Name","value":"error"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"FragmentSpread","name":{"kind":"Name","value":"PythonErrorFragment"}}]}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"BackfillTableFragment"}}]}}]}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"PythonErrorFragment"}}]}}]}},...PythonErrorFragmentFragmentDoc.definitions,...PythonErrorChainFragmentDoc.definitions,...BackfillTableFragmentFragmentDoc.definitions,...PartitionSetForBackfillTableFragmentDoc.definitions]} as unknown as DocumentNode<InstanceBackfillsQueryQuery, InstanceBackfillsQueryQueryVariables>;
export const InstanceConfigQueryDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"query","name":{"kind":"Name","value":"InstanceConfigQuery"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"version"}},{"kind":"Field","name":{"kind":"Name","value":"instance"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"info"}}]}}]}}]} as unknown as DocumentNode<InstanceConfigQueryQuery, InstanceConfigQueryQueryVariables>;
export const InstanceHealthQueryDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"query","name":{"kind":"Name","value":"InstanceHealthQuery"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"instance"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"FragmentSpread","name":{"kind":"Name","value":"InstanceHealthFragment"}}]}}]}},...InstanceHealthFragmentFragmentDoc.definitions,...DaemonHealthFragmentFragmentDoc.definitions,...DaemonStatusForListFragmentDoc.definitions,...PythonErrorFragmentFragmentDoc.definitions,...PythonErrorChainFragmentDoc.definitions]} as unknown as DocumentNode<InstanceHealthQueryQuery, InstanceHealthQueryQueryVariables>;
export const RunReExecutionQueryDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"query","name":{"kind":"Name","value":"RunReExecutionQuery"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"runId"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"ID"}}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"pipelineRunOrError"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"runId"},"value":{"kind":"Variable","name":{"kind":"Name","value":"runId"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"Run"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"RunFragment"}}]}}]}}]}},...RunFragmentFragmentDoc.definitions,...ExecutionPlanToGraphFragmentFragmentDoc.definitions,...RunFragmentForRepositoryMatchFragmentDoc.definitions,...RunDetailsFragmentFragmentDoc.definitions]} as unknown as DocumentNode<RunReExecutionQueryQuery, RunReExecutionQueryQueryVariables>;
export const StepSummaryForRunQueryDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"query","name":{"kind":"Name","value":"StepSummaryForRunQuery"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"runId"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"ID"}}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"pipelineRunOrError"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"runId"},"value":{"kind":"Variable","name":{"kind":"Name","value":"runId"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"Run"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"status"}},{"kind":"Field","name":{"kind":"Name","value":"stepStats"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"endTime"}},{"kind":"Field","name":{"kind":"Name","value":"stepKey"}},{"kind":"Field","name":{"kind":"Name","value":"status"}}]}}]}}]}}]}}]} as unknown as DocumentNode<StepSummaryForRunQueryQuery, StepSummaryForRunQueryQueryVariables>;
export const InstanceConfigHasInfoDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"query","name":{"kind":"Name","value":"InstanceConfigHasInfo"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"instance"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"hasInfo"}}]}}]}}]} as unknown as DocumentNode<InstanceConfigHasInfoQuery, InstanceConfigHasInfoQueryVariables>;
export const InstanceWarningQueryDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"query","name":{"kind":"Name","value":"InstanceWarningQuery"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"instance"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"FragmentSpread","name":{"kind":"Name","value":"InstanceHealthFragment"}}]}},{"kind":"Field","name":{"kind":"Name","value":"partitionBackfillsOrError"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"status"},"value":{"kind":"EnumValue","value":"REQUESTED"}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"__typename"}},{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"PartitionBackfills"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"results"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"backfillId"}}]}}]}}]}}]}},...InstanceHealthFragmentFragmentDoc.definitions,...DaemonHealthFragmentFragmentDoc.definitions,...DaemonStatusForListFragmentDoc.definitions,...PythonErrorFragmentFragmentDoc.definitions,...PythonErrorChainFragmentDoc.definitions]} as unknown as DocumentNode<InstanceWarningQueryQuery, InstanceWarningQueryQueryVariables>;
export const InstanceSupportsCapturedLogsDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"query","name":{"kind":"Name","value":"InstanceSupportsCapturedLogs"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"instance"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"hasCapturedLogManager"}}]}}]}}]} as unknown as DocumentNode<InstanceSupportsCapturedLogsQuery, InstanceSupportsCapturedLogsQueryVariables>;
export const LaunchedRunListQueryDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"query","name":{"kind":"Name","value":"LaunchedRunListQuery"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"filter"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"RunsFilter"}}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"pipelineRunsOrError"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"filter"},"value":{"kind":"Variable","name":{"kind":"Name","value":"filter"}}},{"kind":"Argument","name":{"kind":"Name","value":"limit"},"value":{"kind":"IntValue","value":"500"}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"PipelineRuns"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"results"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"FragmentSpread","name":{"kind":"Name","value":"RunTableRunFragment"}},{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"runId"}}]}}]}},{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"InvalidPipelineRunsFilterError"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"message"}}]}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"PythonErrorFragment"}}]}}]}},...RunTableRunFragmentFragmentDoc.definitions,...RunTimeFragmentFragmentDoc.definitions,...PythonErrorFragmentFragmentDoc.definitions,...PythonErrorChainFragmentDoc.definitions]} as unknown as DocumentNode<LaunchedRunListQueryQuery, LaunchedRunListQueryQueryVariables>;
export const SelectedTickQueryDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"query","name":{"kind":"Name","value":"SelectedTickQuery"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"instigationSelector"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"InstigationSelector"}}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"timestamp"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"Float"}}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"instigationStateOrError"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"instigationSelector"},"value":{"kind":"Variable","name":{"kind":"Name","value":"instigationSelector"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"__typename"}},{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"InstigationState"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"tick"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"timestamp"},"value":{"kind":"Variable","name":{"kind":"Name","value":"timestamp"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"status"}},{"kind":"Field","name":{"kind":"Name","value":"timestamp"}},{"kind":"Field","name":{"kind":"Name","value":"skipReason"}},{"kind":"Field","name":{"kind":"Name","value":"runIds"}},{"kind":"Field","name":{"kind":"Name","value":"originRunIds"}},{"kind":"Field","name":{"kind":"Name","value":"error"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"FragmentSpread","name":{"kind":"Name","value":"PythonErrorFragment"}}]}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"TickTagFragment"}}]}}]}}]}}]}},...PythonErrorFragmentFragmentDoc.definitions,...PythonErrorChainFragmentDoc.definitions,...TickTagFragmentFragmentDoc.definitions]} as unknown as DocumentNode<SelectedTickQueryQuery, SelectedTickQueryQueryVariables>;
export const TickHistoryQueryDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"query","name":{"kind":"Name","value":"TickHistoryQuery"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"instigationSelector"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"InstigationSelector"}}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"dayRange"}},"type":{"kind":"NamedType","name":{"kind":"Name","value":"Int"}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"limit"}},"type":{"kind":"NamedType","name":{"kind":"Name","value":"Int"}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"cursor"}},"type":{"kind":"NamedType","name":{"kind":"Name","value":"String"}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"statuses"}},"type":{"kind":"ListType","type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"InstigationTickStatus"}}}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"instigationStateOrError"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"instigationSelector"},"value":{"kind":"Variable","name":{"kind":"Name","value":"instigationSelector"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"__typename"}},{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"InstigationState"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"instigationType"}},{"kind":"Field","name":{"kind":"Name","value":"nextTick"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"FragmentSpread","name":{"kind":"Name","value":"NextTickForHistoy"}}]}},{"kind":"Field","name":{"kind":"Name","value":"ticks"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"dayRange"},"value":{"kind":"Variable","name":{"kind":"Name","value":"dayRange"}}},{"kind":"Argument","name":{"kind":"Name","value":"limit"},"value":{"kind":"Variable","name":{"kind":"Name","value":"limit"}}},{"kind":"Argument","name":{"kind":"Name","value":"cursor"},"value":{"kind":"Variable","name":{"kind":"Name","value":"cursor"}}},{"kind":"Argument","name":{"kind":"Name","value":"statuses"},"value":{"kind":"Variable","name":{"kind":"Name","value":"statuses"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"HistoryTick"}}]}}]}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"PythonErrorFragment"}}]}}]}},...NextTickForHistoyFragmentDoc.definitions,...HistoryTickFragmentDoc.definitions,...RunStatusFragmentFragmentDoc.definitions,...PythonErrorFragmentFragmentDoc.definitions,...PythonErrorChainFragmentDoc.definitions,...TickTagFragmentFragmentDoc.definitions]} as unknown as DocumentNode<TickHistoryQueryQuery, TickHistoryQueryQueryVariables>;
export const UnloadableInstigationStatesQueryDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"query","name":{"kind":"Name","value":"UnloadableInstigationStatesQuery"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"unloadableInstigationStatesOrError"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"InstigationStates"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"results"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"InstigationStateFragment"}}]}}]}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"PythonErrorFragment"}}]}}]}},...InstigationStateFragmentFragmentDoc.definitions,...RunStatusFragmentFragmentDoc.definitions,...RunTimeFragmentFragmentDoc.definitions,...TickTagFragmentFragmentDoc.definitions,...PythonErrorFragmentFragmentDoc.definitions,...PythonErrorChainFragmentDoc.definitions]} as unknown as DocumentNode<UnloadableInstigationStatesQueryQuery, UnloadableInstigationStatesQueryQueryVariables>;
export const ConfigPartitionsQueryDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"query","name":{"kind":"Name","value":"ConfigPartitionsQuery"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"repositorySelector"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"RepositorySelector"}}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"partitionSetName"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"String"}}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"partitionSetOrError"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"repositorySelector"},"value":{"kind":"Variable","name":{"kind":"Name","value":"repositorySelector"}}},{"kind":"Argument","name":{"kind":"Name","value":"partitionSetName"},"value":{"kind":"Variable","name":{"kind":"Name","value":"partitionSetName"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"__typename"}},{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"PartitionSet"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"partitionsOrError"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"Partitions"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"results"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"FragmentSpread","name":{"kind":"Name","value":"ConfigPartitionResult"}}]}}]}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"PythonErrorFragment"}}]}}]}}]}}]}},...ConfigPartitionResultFragmentDoc.definitions,...PythonErrorFragmentFragmentDoc.definitions,...PythonErrorChainFragmentDoc.definitions]} as unknown as DocumentNode<ConfigPartitionsQueryQuery, ConfigPartitionsQueryQueryVariables>;
export const ConfigPartitionSelectionQueryDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"query","name":{"kind":"Name","value":"ConfigPartitionSelectionQuery"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"repositorySelector"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"RepositorySelector"}}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"partitionSetName"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"String"}}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"partitionName"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"String"}}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"partitionSetOrError"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"repositorySelector"},"value":{"kind":"Variable","name":{"kind":"Name","value":"repositorySelector"}}},{"kind":"Argument","name":{"kind":"Name","value":"partitionSetName"},"value":{"kind":"Variable","name":{"kind":"Name","value":"partitionSetName"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"__typename"}},{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"PartitionSet"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"partition"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"partitionName"},"value":{"kind":"Variable","name":{"kind":"Name","value":"partitionName"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"name"}},{"kind":"Field","name":{"kind":"Name","value":"solidSelection"}},{"kind":"Field","name":{"kind":"Name","value":"runConfigOrError"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"PartitionRunConfig"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"yaml"}}]}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"PythonErrorFragment"}}]}},{"kind":"Field","name":{"kind":"Name","value":"mode"}},{"kind":"Field","name":{"kind":"Name","value":"tagsOrError"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"PartitionTags"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"results"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"key"}},{"kind":"Field","name":{"kind":"Name","value":"value"}}]}}]}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"PythonErrorFragment"}}]}}]}}]}}]}}]}},...PythonErrorFragmentFragmentDoc.definitions,...PythonErrorChainFragmentDoc.definitions]} as unknown as DocumentNode<ConfigPartitionSelectionQueryQuery, ConfigPartitionSelectionQueryQueryVariables>;
export const LaunchpadRootQueryDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"query","name":{"kind":"Name","value":"LaunchpadRootQuery"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"pipelineName"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"String"}}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"repositoryName"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"String"}}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"repositoryLocationName"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"String"}}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"pipelineOrError"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"params"},"value":{"kind":"ObjectValue","fields":[{"kind":"ObjectField","name":{"kind":"Name","value":"pipelineName"},"value":{"kind":"Variable","name":{"kind":"Name","value":"pipelineName"}}},{"kind":"ObjectField","name":{"kind":"Name","value":"repositoryName"},"value":{"kind":"Variable","name":{"kind":"Name","value":"repositoryName"}}},{"kind":"ObjectField","name":{"kind":"Name","value":"repositoryLocationName"},"value":{"kind":"Variable","name":{"kind":"Name","value":"repositoryLocationName"}}}]}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"PipelineNotFoundError"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"message"}}]}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"PythonErrorFragment"}},{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"Pipeline"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"LaunchpadSessionPipelineFragment"}}]}}]}},{"kind":"Field","name":{"kind":"Name","value":"partitionSetsOrError"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"pipelineName"},"value":{"kind":"Variable","name":{"kind":"Name","value":"pipelineName"}}},{"kind":"Argument","name":{"kind":"Name","value":"repositorySelector"},"value":{"kind":"ObjectValue","fields":[{"kind":"ObjectField","name":{"kind":"Name","value":"repositoryName"},"value":{"kind":"Variable","name":{"kind":"Name","value":"repositoryName"}}},{"kind":"ObjectField","name":{"kind":"Name","value":"repositoryLocationName"},"value":{"kind":"Variable","name":{"kind":"Name","value":"repositoryLocationName"}}}]}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"__typename"}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"LaunchpadSessionPartitionSetsFragment"}},{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"PipelineNotFoundError"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"message"}}]}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"PythonErrorFragment"}}]}}]}},...PythonErrorFragmentFragmentDoc.definitions,...PythonErrorChainFragmentDoc.definitions,...LaunchpadSessionPipelineFragmentFragmentDoc.definitions,...ConfigEditorGeneratorPipelineFragmentFragmentDoc.definitions,...ConfigEditorPipelinePresetFragmentDoc.definitions,...LaunchpadSessionPartitionSetsFragmentFragmentDoc.definitions,...ConfigEditorGeneratorPartitionSetsFragmentFragmentDoc.definitions,...PartitionSetForConfigEditorFragmentDoc.definitions]} as unknown as DocumentNode<LaunchpadRootQueryQuery, LaunchpadRootQueryQueryVariables>;
export const PreviewConfigQueryDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"query","name":{"kind":"Name","value":"PreviewConfigQuery"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"pipeline"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"PipelineSelector"}}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"runConfigData"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"RunConfigData"}}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"mode"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"String"}}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"isPipelineConfigValid"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"pipeline"},"value":{"kind":"Variable","name":{"kind":"Name","value":"pipeline"}}},{"kind":"Argument","name":{"kind":"Name","value":"runConfigData"},"value":{"kind":"Variable","name":{"kind":"Name","value":"runConfigData"}}},{"kind":"Argument","name":{"kind":"Name","value":"mode"},"value":{"kind":"Variable","name":{"kind":"Name","value":"mode"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"FragmentSpread","name":{"kind":"Name","value":"ConfigEditorValidationFragment"}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"RunPreviewValidationFragment"}}]}}]}},...ConfigEditorValidationFragmentFragmentDoc.definitions,...RunPreviewValidationFragmentFragmentDoc.definitions,...RunPreviewValidationErrorsFragmentDoc.definitions,...PythonErrorFragmentFragmentDoc.definitions,...PythonErrorChainFragmentDoc.definitions]} as unknown as DocumentNode<PreviewConfigQueryQuery, PreviewConfigQueryQueryVariables>;
export const PipelineExecutionConfigSchemaQueryDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"query","name":{"kind":"Name","value":"PipelineExecutionConfigSchemaQuery"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"selector"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"PipelineSelector"}}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"mode"}},"type":{"kind":"NamedType","name":{"kind":"Name","value":"String"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"runConfigSchemaOrError"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"selector"},"value":{"kind":"Variable","name":{"kind":"Name","value":"selector"}}},{"kind":"Argument","name":{"kind":"Name","value":"mode"},"value":{"kind":"Variable","name":{"kind":"Name","value":"mode"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"FragmentSpread","name":{"kind":"Name","value":"LaunchpadSessionRunConfigSchemaFragment"}}]}}]}},...LaunchpadSessionRunConfigSchemaFragmentFragmentDoc.definitions,...ConfigEditorRunConfigSchemaFragmentFragmentDoc.definitions,...AllConfigTypesForEditorFragmentDoc.definitions,...CompositeConfigTypeForSchemaFragmentDoc.definitions,...LaunchpadSessionModeNotFoundFragmentDoc.definitions]} as unknown as DocumentNode<PipelineExecutionConfigSchemaQueryQuery, PipelineExecutionConfigSchemaQueryQueryVariables>;
export const ConfigForRunQueryDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"query","name":{"kind":"Name","value":"ConfigForRunQuery"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"runId"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"ID"}}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"runOrError"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"runId"},"value":{"kind":"Variable","name":{"kind":"Name","value":"runId"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"Run"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"mode"}},{"kind":"Field","name":{"kind":"Name","value":"runConfigYaml"}},{"kind":"Field","name":{"kind":"Name","value":"solidSelection"}}]}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"PythonErrorFragment"}}]}}]}},...PythonErrorFragmentFragmentDoc.definitions,...PythonErrorChainFragmentDoc.definitions]} as unknown as DocumentNode<ConfigForRunQueryQuery, ConfigForRunQueryQueryVariables>;
export const OpSelectorQueryDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"query","name":{"kind":"Name","value":"OpSelectorQuery"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"selector"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"PipelineSelector"}}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"requestScopeHandleID"}},"type":{"kind":"NamedType","name":{"kind":"Name","value":"String"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"pipelineOrError"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"params"},"value":{"kind":"Variable","name":{"kind":"Name","value":"selector"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"__typename"}},{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"Pipeline"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"name"}},{"kind":"Field","name":{"kind":"Name","value":"solidHandles"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"parentHandleID"},"value":{"kind":"Variable","name":{"kind":"Name","value":"requestScopeHandleID"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"handleID"}},{"kind":"Field","name":{"kind":"Name","value":"solid"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"name"}}]}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"GraphExplorerSolidHandleFragment"}}]}}]}},{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"PipelineNotFoundError"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"message"}}]}},{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"InvalidSubsetError"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"message"}}]}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"PythonErrorFragment"}}]}}]}},...GraphExplorerSolidHandleFragmentFragmentDoc.definitions,...GraphExplorerSolidFragmentDoc.definitions,...OpGraphOpFragmentFragmentDoc.definitions,...OpNodeInvocationFragmentFragmentDoc.definitions,...OpNodeDefinitionFragmentFragmentDoc.definitions,...OpNodeInputDefinitionFragmentDoc.definitions,...OpNodeOutputDefinitionFragmentDoc.definitions,...PythonErrorFragmentFragmentDoc.definitions,...PythonErrorChainFragmentDoc.definitions]} as unknown as DocumentNode<OpSelectorQueryQuery, OpSelectorQueryQueryVariables>;
export const JobMetadataQueryDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"query","name":{"kind":"Name","value":"JobMetadataQuery"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"params"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"PipelineSelector"}}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"runsFilter"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"RunsFilter"}}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"pipelineOrError"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"params"},"value":{"kind":"Variable","name":{"kind":"Name","value":"params"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"Pipeline"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"JobMetadataFragment"}}]}}]}},{"kind":"Field","name":{"kind":"Name","value":"assetNodes"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"pipeline"},"value":{"kind":"Variable","name":{"kind":"Name","value":"params"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"JobMetadataAssetNode"}}]}},{"kind":"Field","name":{"kind":"Name","value":"pipelineRunsOrError"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"filter"},"value":{"kind":"Variable","name":{"kind":"Name","value":"runsFilter"}}},{"kind":"Argument","name":{"kind":"Name","value":"limit"},"value":{"kind":"IntValue","value":"5"}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"PipelineRuns"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"results"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"RunMetadataFragment"}}]}}]}}]}}]}},...JobMetadataFragmentFragmentDoc.definitions,...ScheduleSwitchFragmentFragmentDoc.definitions,...SensorSwitchFragmentFragmentDoc.definitions,...JobMetadataAssetNodeFragmentDoc.definitions,...RunMetadataFragmentFragmentDoc.definitions,...RunTimeFragmentFragmentDoc.definitions]} as unknown as DocumentNode<JobMetadataQueryQuery, JobMetadataQueryQueryVariables>;
export const LatestRunTagQueryDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"query","name":{"kind":"Name","value":"LatestRunTagQuery"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"runsFilter"}},"type":{"kind":"NamedType","name":{"kind":"Name","value":"RunsFilter"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"pipelineRunsOrError"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"filter"},"value":{"kind":"Variable","name":{"kind":"Name","value":"runsFilter"}}},{"kind":"Argument","name":{"kind":"Name","value":"limit"},"value":{"kind":"IntValue","value":"1"}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"PipelineRuns"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"results"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"status"}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"RunTimeFragment"}}]}}]}}]}}]}},...RunTimeFragmentFragmentDoc.definitions]} as unknown as DocumentNode<LatestRunTagQueryQuery, LatestRunTagQueryQueryVariables>;
export const LocationStateChangeSubscriptionDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"subscription","name":{"kind":"Name","value":"LocationStateChangeSubscription"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"locationStateChangeEvents"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"event"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"message"}},{"kind":"Field","name":{"kind":"Name","value":"locationName"}},{"kind":"Field","name":{"kind":"Name","value":"eventType"}},{"kind":"Field","name":{"kind":"Name","value":"serverId"}}]}}]}}]}}]} as unknown as DocumentNode<LocationStateChangeSubscriptionSubscription, LocationStateChangeSubscriptionSubscriptionVariables>;
export const VersionNumberQueryDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"query","name":{"kind":"Name","value":"VersionNumberQuery"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"version"}}]}}]} as unknown as DocumentNode<VersionNumberQueryQuery, VersionNumberQueryQueryVariables>;
export const CodeLocationStatusQueryDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"query","name":{"kind":"Name","value":"CodeLocationStatusQuery"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"locationStatusesOrError"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"__typename"}},{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"WorkspaceLocationStatusEntries"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"entries"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"name"}},{"kind":"Field","name":{"kind":"Name","value":"loadStatus"}},{"kind":"Field","name":{"kind":"Name","value":"updateTimestamp"}}]}}]}}]}}]}}]} as unknown as DocumentNode<CodeLocationStatusQueryQuery, CodeLocationStatusQueryQueryVariables>;
export const RepositoryLocationStatusQueryDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"query","name":{"kind":"Name","value":"RepositoryLocationStatusQuery"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"workspaceOrError"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"__typename"}},{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"Workspace"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"locationEntries"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"__typename"}},{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"loadStatus"}},{"kind":"Field","name":{"kind":"Name","value":"locationOrLoadError"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"RepositoryLocation"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"repositories"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"name"}},{"kind":"Field","name":{"kind":"Name","value":"pipelines"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"name"}}]}}]}}]}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"PythonErrorFragment"}}]}}]}}]}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"PythonErrorFragment"}}]}}]}},...PythonErrorFragmentFragmentDoc.definitions,...PythonErrorChainFragmentDoc.definitions]} as unknown as DocumentNode<RepositoryLocationStatusQueryQuery, RepositoryLocationStatusQueryQueryVariables>;
export const ReloadWorkspaceMutationDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"mutation","name":{"kind":"Name","value":"ReloadWorkspaceMutation"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"reloadWorkspace"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"Workspace"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"locationEntries"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"__typename"}},{"kind":"Field","name":{"kind":"Name","value":"name"}},{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"loadStatus"}},{"kind":"Field","name":{"kind":"Name","value":"locationOrLoadError"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"__typename"}},{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"RepositoryLocation"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"repositories"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"name"}},{"kind":"Field","name":{"kind":"Name","value":"pipelines"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"name"}}]}}]}}]}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"PythonErrorFragment"}}]}}]}}]}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"UnauthorizedErrorFragment"}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"PythonErrorFragment"}}]}}]}},...PythonErrorFragmentFragmentDoc.definitions,...PythonErrorChainFragmentDoc.definitions,...UnauthorizedErrorFragmentFragmentDoc.definitions]} as unknown as DocumentNode<ReloadWorkspaceMutationMutation, ReloadWorkspaceMutationMutationVariables>;
export const ReloadRepositoryLocationMutationDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"mutation","name":{"kind":"Name","value":"ReloadRepositoryLocationMutation"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"location"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"String"}}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"reloadRepositoryLocation"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"repositoryLocationName"},"value":{"kind":"Variable","name":{"kind":"Name","value":"location"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"__typename"}},{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"WorkspaceLocationEntry"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}}]}},{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"UnauthorizedError"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"message"}}]}},{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"ReloadNotSupported"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"message"}}]}},{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"RepositoryLocationNotFound"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"message"}}]}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"PythonErrorFragment"}}]}}]}},...PythonErrorFragmentFragmentDoc.definitions,...PythonErrorChainFragmentDoc.definitions]} as unknown as DocumentNode<ReloadRepositoryLocationMutationMutation, ReloadRepositoryLocationMutationMutationVariables>;
export const UsedSolidDetailsQueryDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"query","name":{"kind":"Name","value":"UsedSolidDetailsQuery"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"name"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"String"}}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"repositorySelector"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"RepositorySelector"}}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"repositoryOrError"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"repositorySelector"},"value":{"kind":"Variable","name":{"kind":"Name","value":"repositorySelector"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"Repository"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"usedSolid"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"name"},"value":{"kind":"Variable","name":{"kind":"Name","value":"name"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"__typename"}},{"kind":"Field","name":{"kind":"Name","value":"definition"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"FragmentSpread","name":{"kind":"Name","value":"OpCardSolidDefinitionFragment"}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"SidebarOpDefinitionFragment"}}]}},{"kind":"Field","name":{"kind":"Name","value":"invocations"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"__typename"}},{"kind":"Field","name":{"kind":"Name","value":"pipeline"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"name"}}]}},{"kind":"Field","name":{"kind":"Name","value":"solidHandle"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"handleID"}}]}}]}}]}}]}}]}}]}},...OpCardSolidDefinitionFragmentFragmentDoc.definitions,...OpNodeDefinitionFragmentFragmentDoc.definitions,...OpNodeInputDefinitionFragmentDoc.definitions,...OpNodeOutputDefinitionFragmentDoc.definitions,...SidebarOpDefinitionFragmentFragmentDoc.definitions,...OpTypeSignatureFragmentFragmentDoc.definitions,...DagsterTypeWithTooltipFragmentFragmentDoc.definitions,...ConfigTypeSchemaFragmentFragmentDoc.definitions]} as unknown as DocumentNode<UsedSolidDetailsQueryQuery, UsedSolidDetailsQueryQueryVariables>;
export const OpsRootQueryDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"query","name":{"kind":"Name","value":"OpsRootQuery"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"repositorySelector"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"RepositorySelector"}}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"repositoryOrError"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"repositorySelector"},"value":{"kind":"Variable","name":{"kind":"Name","value":"repositorySelector"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"Repository"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"usedSolids"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"FragmentSpread","name":{"kind":"Name","value":"OpsRootUsedSolid"}}]}}]}}]}}]}},...OpsRootUsedSolidFragmentDoc.definitions,...OpTypeSignatureFragmentFragmentDoc.definitions,...DagsterTypeWithTooltipFragmentFragmentDoc.definitions]} as unknown as DocumentNode<OpsRootQueryQuery, OpsRootQueryQueryVariables>;
export const OverviewJobsQueryDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"query","name":{"kind":"Name","value":"OverviewJobsQuery"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"workspaceOrError"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"Workspace"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"locationEntries"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"locationOrLoadError"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"RepositoryLocation"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"name"}},{"kind":"Field","name":{"kind":"Name","value":"repositories"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"name"}},{"kind":"Field","name":{"kind":"Name","value":"pipelines"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"name"}},{"kind":"Field","name":{"kind":"Name","value":"isJob"}}]}}]}}]}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"PythonErrorFragment"}}]}}]}}]}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"PythonErrorFragment"}}]}}]}},...PythonErrorFragmentFragmentDoc.definitions,...PythonErrorChainFragmentDoc.definitions]} as unknown as DocumentNode<OverviewJobsQueryQuery, OverviewJobsQueryQueryVariables>;
export const OverviewSchedulesQueryDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"query","name":{"kind":"Name","value":"OverviewSchedulesQuery"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"workspaceOrError"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"Workspace"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"locationEntries"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"locationOrLoadError"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"RepositoryLocation"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"name"}},{"kind":"Field","name":{"kind":"Name","value":"repositories"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"name"}},{"kind":"Field","name":{"kind":"Name","value":"schedules"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"name"}},{"kind":"Field","name":{"kind":"Name","value":"description"}}]}}]}}]}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"PythonErrorFragment"}}]}}]}}]}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"PythonErrorFragment"}}]}},{"kind":"Field","name":{"kind":"Name","value":"unloadableInstigationStatesOrError"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"instigationType"},"value":{"kind":"EnumValue","value":"SCHEDULE"}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"InstigationStates"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"results"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}}]}}]}}]}},{"kind":"Field","name":{"kind":"Name","value":"instance"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"FragmentSpread","name":{"kind":"Name","value":"InstanceHealthFragment"}}]}}]}},...PythonErrorFragmentFragmentDoc.definitions,...PythonErrorChainFragmentDoc.definitions,...InstanceHealthFragmentFragmentDoc.definitions,...DaemonHealthFragmentFragmentDoc.definitions,...DaemonStatusForListFragmentDoc.definitions]} as unknown as DocumentNode<OverviewSchedulesQueryQuery, OverviewSchedulesQueryQueryVariables>;
export const UnloadableSchedulesQueryDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"query","name":{"kind":"Name","value":"UnloadableSchedulesQuery"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"unloadableInstigationStatesOrError"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"instigationType"},"value":{"kind":"EnumValue","value":"SCHEDULE"}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"InstigationStates"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"results"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"InstigationStateFragment"}}]}}]}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"PythonErrorFragment"}}]}}]}},...InstigationStateFragmentFragmentDoc.definitions,...RunStatusFragmentFragmentDoc.definitions,...RunTimeFragmentFragmentDoc.definitions,...TickTagFragmentFragmentDoc.definitions,...PythonErrorFragmentFragmentDoc.definitions,...PythonErrorChainFragmentDoc.definitions]} as unknown as DocumentNode<UnloadableSchedulesQueryQuery, UnloadableSchedulesQueryQueryVariables>;
export const OverviewSensorsQueryDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"query","name":{"kind":"Name","value":"OverviewSensorsQuery"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"workspaceOrError"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"Workspace"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"locationEntries"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"locationOrLoadError"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"RepositoryLocation"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"name"}},{"kind":"Field","name":{"kind":"Name","value":"repositories"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"name"}},{"kind":"Field","name":{"kind":"Name","value":"sensors"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"name"}},{"kind":"Field","name":{"kind":"Name","value":"description"}}]}}]}}]}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"PythonErrorFragment"}}]}}]}}]}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"PythonErrorFragment"}}]}},{"kind":"Field","name":{"kind":"Name","value":"unloadableInstigationStatesOrError"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"instigationType"},"value":{"kind":"EnumValue","value":"SENSOR"}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"InstigationStates"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"results"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}}]}}]}}]}},{"kind":"Field","name":{"kind":"Name","value":"instance"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"FragmentSpread","name":{"kind":"Name","value":"InstanceHealthFragment"}}]}}]}},...PythonErrorFragmentFragmentDoc.definitions,...PythonErrorChainFragmentDoc.definitions,...InstanceHealthFragmentFragmentDoc.definitions,...DaemonHealthFragmentFragmentDoc.definitions,...DaemonStatusForListFragmentDoc.definitions]} as unknown as DocumentNode<OverviewSensorsQueryQuery, OverviewSensorsQueryQueryVariables>;
export const UnloadableSensorsQueryDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"query","name":{"kind":"Name","value":"UnloadableSensorsQuery"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"unloadableInstigationStatesOrError"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"instigationType"},"value":{"kind":"EnumValue","value":"SENSOR"}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"InstigationStates"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"results"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"InstigationStateFragment"}}]}}]}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"PythonErrorFragment"}}]}}]}},...InstigationStateFragmentFragmentDoc.definitions,...RunStatusFragmentFragmentDoc.definitions,...RunTimeFragmentFragmentDoc.definitions,...TickTagFragmentFragmentDoc.definitions,...PythonErrorFragmentFragmentDoc.definitions,...PythonErrorChainFragmentDoc.definitions]} as unknown as DocumentNode<UnloadableSensorsQueryQuery, UnloadableSensorsQueryQueryVariables>;
export const BackfillSelectorQueryDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"query","name":{"kind":"Name","value":"BackfillSelectorQuery"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"pipelineSelector"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"PipelineSelector"}}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"pipelineSnapshotOrError"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"activePipelineSelector"},"value":{"kind":"Variable","name":{"kind":"Name","value":"pipelineSelector"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"PipelineSnapshot"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"name"}},{"kind":"Field","name":{"kind":"Name","value":"solidHandles"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"handleID"}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"GraphExplorerSolidHandleFragment"}},{"kind":"Field","name":{"kind":"Name","value":"solid"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"name"}},{"kind":"Field","name":{"kind":"Name","value":"definition"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"name"}}]}},{"kind":"Field","name":{"kind":"Name","value":"inputs"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"dependsOn"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"solid"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"name"}}]}}]}}]}},{"kind":"Field","name":{"kind":"Name","value":"outputs"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"dependedBy"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"solid"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"name"}}]}}]}}]}}]}}]}}]}}]}},{"kind":"Field","name":{"kind":"Name","value":"instance"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"runLauncher"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"name"}}]}},{"kind":"Field","name":{"kind":"Name","value":"daemonHealth"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"daemonStatus"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"daemonType"},"value":{"kind":"StringValue","value":"BACKFILL","block":false}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"healthy"}}]}}]}},{"kind":"Field","name":{"kind":"Name","value":"runQueuingSupported"}}]}}]}},...GraphExplorerSolidHandleFragmentFragmentDoc.definitions,...GraphExplorerSolidFragmentDoc.definitions,...OpGraphOpFragmentFragmentDoc.definitions,...OpNodeInvocationFragmentFragmentDoc.definitions,...OpNodeDefinitionFragmentFragmentDoc.definitions,...OpNodeInputDefinitionFragmentDoc.definitions,...OpNodeOutputDefinitionFragmentDoc.definitions]} as unknown as DocumentNode<BackfillSelectorQueryQuery, BackfillSelectorQueryQueryVariables>;
export const JobBackfillsQueryDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"query","name":{"kind":"Name","value":"JobBackfillsQuery"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"partitionSetName"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"String"}}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"repositorySelector"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"RepositorySelector"}}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"cursor"}},"type":{"kind":"NamedType","name":{"kind":"Name","value":"String"}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"limit"}},"type":{"kind":"NamedType","name":{"kind":"Name","value":"Int"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"partitionSetOrError"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"repositorySelector"},"value":{"kind":"Variable","name":{"kind":"Name","value":"repositorySelector"}}},{"kind":"Argument","name":{"kind":"Name","value":"partitionSetName"},"value":{"kind":"Variable","name":{"kind":"Name","value":"partitionSetName"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"PartitionSet"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"pipelineName"}},{"kind":"Field","name":{"kind":"Name","value":"backfills"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"cursor"},"value":{"kind":"Variable","name":{"kind":"Name","value":"cursor"}}},{"kind":"Argument","name":{"kind":"Name","value":"limit"},"value":{"kind":"Variable","name":{"kind":"Name","value":"limit"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"FragmentSpread","name":{"kind":"Name","value":"BackfillTableFragment"}}]}}]}}]}}]}},...BackfillTableFragmentFragmentDoc.definitions,...PartitionSetForBackfillTableFragmentDoc.definitions,...PythonErrorFragmentFragmentDoc.definitions,...PythonErrorChainFragmentDoc.definitions]} as unknown as DocumentNode<JobBackfillsQueryQuery, JobBackfillsQueryQueryVariables>;
export const PartitionsStatusQueryDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"query","name":{"kind":"Name","value":"PartitionsStatusQuery"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"partitionSetName"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"String"}}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"repositorySelector"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"RepositorySelector"}}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"partitionSetOrError"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"repositorySelector"},"value":{"kind":"Variable","name":{"kind":"Name","value":"repositorySelector"}}},{"kind":"Argument","name":{"kind":"Name","value":"partitionSetName"},"value":{"kind":"Variable","name":{"kind":"Name","value":"partitionSetName"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"PartitionSet"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"OpJobPartitionSet"}}]}}]}}]}},...OpJobPartitionSetFragmentDoc.definitions,...OpJobPartitionStatusFragmentDoc.definitions,...PythonErrorFragmentFragmentDoc.definitions,...PythonErrorChainFragmentDoc.definitions]} as unknown as DocumentNode<PartitionsStatusQueryQuery, PartitionsStatusQueryQueryVariables>;
export const PartitionRunListQueryDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"query","name":{"kind":"Name","value":"PartitionRunListQuery"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"filter"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"RunsFilter"}}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"pipelineRunsOrError"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"filter"},"value":{"kind":"Variable","name":{"kind":"Name","value":"filter"}}},{"kind":"Argument","name":{"kind":"Name","value":"limit"},"value":{"kind":"IntValue","value":"500"}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"PipelineRuns"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"results"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"FragmentSpread","name":{"kind":"Name","value":"RunTableRunFragment"}},{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"runId"}}]}}]}},{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"InvalidPipelineRunsFilterError"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"message"}}]}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"PythonErrorFragment"}}]}}]}},...RunTableRunFragmentFragmentDoc.definitions,...RunTimeFragmentFragmentDoc.definitions,...PythonErrorFragmentFragmentDoc.definitions,...PythonErrorChainFragmentDoc.definitions]} as unknown as DocumentNode<PartitionRunListQueryQuery, PartitionRunListQueryQueryVariables>;
export const PartitionStepStatusPipelineQueryDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"query","name":{"kind":"Name","value":"PartitionStepStatusPipelineQuery"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"pipelineSelector"}},"type":{"kind":"NamedType","name":{"kind":"Name","value":"PipelineSelector"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"pipelineSnapshotOrError"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"activePipelineSelector"},"value":{"kind":"Variable","name":{"kind":"Name","value":"pipelineSelector"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"PipelineSnapshot"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"name"}},{"kind":"Field","name":{"kind":"Name","value":"solidHandles"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"FragmentSpread","name":{"kind":"Name","value":"PartitionMatrixSolidHandleFragment"}}]}}]}}]}}]}},...PartitionMatrixSolidHandleFragmentFragmentDoc.definitions,...GraphExplorerSolidHandleFragmentFragmentDoc.definitions,...GraphExplorerSolidFragmentDoc.definitions,...OpGraphOpFragmentFragmentDoc.definitions,...OpNodeInvocationFragmentFragmentDoc.definitions,...OpNodeDefinitionFragmentFragmentDoc.definitions,...OpNodeInputDefinitionFragmentDoc.definitions,...OpNodeOutputDefinitionFragmentDoc.definitions]} as unknown as DocumentNode<PartitionStepStatusPipelineQueryQuery, PartitionStepStatusPipelineQueryQueryVariables>;
export const PartitionsBackfillSelectorQueryDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"query","name":{"kind":"Name","value":"PartitionsBackfillSelectorQuery"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"partitionSetName"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"String"}}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"repositorySelector"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"RepositorySelector"}}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"pipelineSelector"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"PipelineSelector"}}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"partitionSetOrError"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"partitionSetName"},"value":{"kind":"Variable","name":{"kind":"Name","value":"partitionSetName"}}},{"kind":"Argument","name":{"kind":"Name","value":"repositorySelector"},"value":{"kind":"Variable","name":{"kind":"Name","value":"repositorySelector"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"PartitionSet"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"name"}},{"kind":"Field","name":{"kind":"Name","value":"partitionsOrError"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"Partitions"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"results"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"name"}}]}}]}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"PythonErrorFragment"}}]}}]}},{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"PartitionSetNotFoundError"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"message"}}]}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"PythonErrorFragment"}}]}},{"kind":"Field","name":{"kind":"Name","value":"pipelineSnapshotOrError"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"activePipelineSelector"},"value":{"kind":"Variable","name":{"kind":"Name","value":"pipelineSelector"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"PipelineSnapshot"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"name"}},{"kind":"Field","name":{"kind":"Name","value":"solidHandles"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"handleID"}},{"kind":"Field","name":{"kind":"Name","value":"solid"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"name"}},{"kind":"Field","name":{"kind":"Name","value":"definition"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"name"}}]}},{"kind":"Field","name":{"kind":"Name","value":"inputs"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"dependsOn"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"solid"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"name"}}]}}]}}]}},{"kind":"Field","name":{"kind":"Name","value":"outputs"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"dependedBy"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"solid"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"name"}}]}}]}}]}}]}}]}}]}},{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"PipelineNotFoundError"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"message"}}]}},{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"PipelineSnapshotNotFoundError"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"message"}}]}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"PythonErrorFragment"}}]}},{"kind":"Field","name":{"kind":"Name","value":"instance"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"runLauncher"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"name"}}]}},{"kind":"Field","name":{"kind":"Name","value":"daemonHealth"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"daemonStatus"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"daemonType"},"value":{"kind":"StringValue","value":"BACKFILL","block":false}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"healthy"}}]}}]}},{"kind":"Field","name":{"kind":"Name","value":"runQueuingSupported"}}]}}]}},...PythonErrorFragmentFragmentDoc.definitions,...PythonErrorChainFragmentDoc.definitions]} as unknown as DocumentNode<PartitionsBackfillSelectorQueryQuery, PartitionsBackfillSelectorQueryQueryVariables>;
export const PartitionStatusQueryDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"query","name":{"kind":"Name","value":"PartitionStatusQuery"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"partitionSetName"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"String"}}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"repositorySelector"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"RepositorySelector"}}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"partitionSetOrError"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"partitionSetName"},"value":{"kind":"Variable","name":{"kind":"Name","value":"partitionSetName"}}},{"kind":"Argument","name":{"kind":"Name","value":"repositorySelector"},"value":{"kind":"Variable","name":{"kind":"Name","value":"repositorySelector"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"PartitionSet"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"name"}},{"kind":"Field","name":{"kind":"Name","value":"partitionStatusesOrError"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"PartitionStatuses"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"results"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"partitionName"}},{"kind":"Field","name":{"kind":"Name","value":"runStatus"}}]}}]}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"PythonErrorFragment"}}]}}]}},{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"PartitionSetNotFoundError"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"message"}}]}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"PythonErrorFragment"}}]}}]}},...PythonErrorFragmentFragmentDoc.definitions,...PythonErrorChainFragmentDoc.definitions]} as unknown as DocumentNode<PartitionStatusQueryQuery, PartitionStatusQueryQueryVariables>;
export const PartitionStepLoaderQueryDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"query","name":{"kind":"Name","value":"PartitionStepLoaderQuery"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"filter"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"RunsFilter"}}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"cursor"}},"type":{"kind":"NamedType","name":{"kind":"Name","value":"String"}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"limit"}},"type":{"kind":"NamedType","name":{"kind":"Name","value":"Int"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"pipelineRunsOrError"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"filter"},"value":{"kind":"Variable","name":{"kind":"Name","value":"filter"}}},{"kind":"Argument","name":{"kind":"Name","value":"cursor"},"value":{"kind":"Variable","name":{"kind":"Name","value":"cursor"}}},{"kind":"Argument","name":{"kind":"Name","value":"limit"},"value":{"kind":"Variable","name":{"kind":"Name","value":"limit"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"Runs"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"results"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"PartitionMatrixStepRunFragment"}}]}}]}},{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"InvalidPipelineRunsFilterError"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"message"}}]}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"PythonErrorFragment"}}]}}]}},...PartitionMatrixStepRunFragmentFragmentDoc.definitions,...PythonErrorFragmentFragmentDoc.definitions,...PythonErrorChainFragmentDoc.definitions]} as unknown as DocumentNode<PartitionStepLoaderQueryQuery, PartitionStepLoaderQueryQueryVariables>;
export const PipelineExplorerRootQueryDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"query","name":{"kind":"Name","value":"PipelineExplorerRootQuery"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"snapshotPipelineSelector"}},"type":{"kind":"NamedType","name":{"kind":"Name","value":"PipelineSelector"}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"snapshotId"}},"type":{"kind":"NamedType","name":{"kind":"Name","value":"String"}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"rootHandleID"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"String"}}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"requestScopeHandleID"}},"type":{"kind":"NamedType","name":{"kind":"Name","value":"String"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"pipelineSnapshotOrError"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"snapshotId"},"value":{"kind":"Variable","name":{"kind":"Name","value":"snapshotId"}}},{"kind":"Argument","name":{"kind":"Name","value":"activePipelineSelector"},"value":{"kind":"Variable","name":{"kind":"Name","value":"snapshotPipelineSelector"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"PipelineSnapshot"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"name"}},{"kind":"Field","name":{"kind":"Name","value":"metadataEntries"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"FragmentSpread","name":{"kind":"Name","value":"MetadataEntryFragment"}}]}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"GraphExplorerFragment"}},{"kind":"Field","name":{"kind":"Name","value":"solidHandle"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"handleID"},"value":{"kind":"Variable","name":{"kind":"Name","value":"rootHandleID"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"FragmentSpread","name":{"kind":"Name","value":"GraphExplorerSolidHandleFragment"}}]}},{"kind":"Field","name":{"kind":"Name","value":"solidHandles"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"parentHandleID"},"value":{"kind":"Variable","name":{"kind":"Name","value":"requestScopeHandleID"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"handleID"}},{"kind":"Field","name":{"kind":"Name","value":"solid"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"name"}},{"kind":"Field","name":{"kind":"Name","value":"definition"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"assetNodes"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"GraphExplorerAssetNodeFragment"}}]}}]}}]}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"GraphExplorerSolidHandleFragment"}}]}}]}},{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"PipelineNotFoundError"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"message"}}]}},{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"PipelineSnapshotNotFoundError"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"message"}}]}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"PythonErrorFragment"}}]}}]}},...MetadataEntryFragmentFragmentDoc.definitions,...TableSchemaFragmentFragmentDoc.definitions,...ConstraintsForTableColumnFragmentDoc.definitions,...TableSchemaForMetadataEntryFragmentDoc.definitions,...GraphExplorerFragmentFragmentDoc.definitions,...SidebarRootContainerFragmentFragmentDoc.definitions,...SidebarResourcesSectionFragmentFragmentDoc.definitions,...ConfigTypeSchemaFragmentFragmentDoc.definitions,...GraphExplorerSolidHandleFragmentFragmentDoc.definitions,...GraphExplorerSolidFragmentDoc.definitions,...OpGraphOpFragmentFragmentDoc.definitions,...OpNodeInvocationFragmentFragmentDoc.definitions,...OpNodeDefinitionFragmentFragmentDoc.definitions,...OpNodeInputDefinitionFragmentDoc.definitions,...OpNodeOutputDefinitionFragmentDoc.definitions,...GraphExplorerAssetNodeFragmentFragmentDoc.definitions,...PythonErrorFragmentFragmentDoc.definitions,...PythonErrorChainFragmentDoc.definitions]} as unknown as DocumentNode<PipelineExplorerRootQueryQuery, PipelineExplorerRootQueryQueryVariables>;
export const PipelineRunsRootQueryDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"query","name":{"kind":"Name","value":"PipelineRunsRootQuery"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"limit"}},"type":{"kind":"NamedType","name":{"kind":"Name","value":"Int"}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"cursor"}},"type":{"kind":"NamedType","name":{"kind":"Name","value":"String"}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"filter"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"RunsFilter"}}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"pipelineRunsOrError"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"limit"},"value":{"kind":"Variable","name":{"kind":"Name","value":"limit"}}},{"kind":"Argument","name":{"kind":"Name","value":"cursor"},"value":{"kind":"Variable","name":{"kind":"Name","value":"cursor"}}},{"kind":"Argument","name":{"kind":"Name","value":"filter"},"value":{"kind":"Variable","name":{"kind":"Name","value":"filter"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"Runs"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"results"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"RunTableRunFragment"}}]}}]}},{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"InvalidPipelineRunsFilterError"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"message"}}]}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"PythonErrorFragment"}}]}}]}},...RunTableRunFragmentFragmentDoc.definitions,...RunTimeFragmentFragmentDoc.definitions,...PythonErrorFragmentFragmentDoc.definitions,...PythonErrorChainFragmentDoc.definitions]} as unknown as DocumentNode<PipelineRunsRootQueryQuery, PipelineRunsRootQueryQueryVariables>;
export const SidebarPipelineOpQueryDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"query","name":{"kind":"Name","value":"SidebarPipelineOpQuery"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"selector"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"PipelineSelector"}}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"handleID"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"String"}}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"pipelineOrError"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"params"},"value":{"kind":"Variable","name":{"kind":"Name","value":"selector"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"__typename"}},{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"Pipeline"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"SidebarOpFragment"}}]}}]}}]}},...SidebarOpFragmentFragmentDoc.definitions,...SidebarOpInvocationFragmentFragmentDoc.definitions,...DagsterTypeWithTooltipFragmentFragmentDoc.definitions,...SidebarOpDefinitionFragmentFragmentDoc.definitions,...OpTypeSignatureFragmentFragmentDoc.definitions,...ConfigTypeSchemaFragmentFragmentDoc.definitions]} as unknown as DocumentNode<SidebarPipelineOpQueryQuery, SidebarPipelineOpQueryQueryVariables>;
export const SidebarGraphOpQueryDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"query","name":{"kind":"Name","value":"SidebarGraphOpQuery"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"selector"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"GraphSelector"}}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"handleID"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"String"}}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"graphOrError"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"selector"},"value":{"kind":"Variable","name":{"kind":"Name","value":"selector"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"__typename"}},{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"Graph"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"SidebarOpFragment"}}]}}]}}]}},...SidebarOpFragmentFragmentDoc.definitions,...SidebarOpInvocationFragmentFragmentDoc.definitions,...DagsterTypeWithTooltipFragmentFragmentDoc.definitions,...SidebarOpDefinitionFragmentFragmentDoc.definitions,...OpTypeSignatureFragmentFragmentDoc.definitions,...ConfigTypeSchemaFragmentFragmentDoc.definitions]} as unknown as DocumentNode<SidebarGraphOpQueryQuery, SidebarGraphOpQueryQueryVariables>;
export const SidebarOpGraphsQueryDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"query","name":{"kind":"Name","value":"SidebarOpGraphsQuery"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"selector"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"PipelineSelector"}}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"handleID"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"String"}}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"pipelineOrError"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"params"},"value":{"kind":"Variable","name":{"kind":"Name","value":"selector"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"__typename"}},{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"Pipeline"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"name"}},{"kind":"Field","name":{"kind":"Name","value":"solidHandle"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"handleID"},"value":{"kind":"Variable","name":{"kind":"Name","value":"handleID"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"stepStats"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"limit"},"value":{"kind":"IntValue","value":"20"}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"__typename"}},{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"SolidStepStatsConnection"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"nodes"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"runId"}},{"kind":"Field","name":{"kind":"Name","value":"startTime"}},{"kind":"Field","name":{"kind":"Name","value":"endTime"}},{"kind":"Field","name":{"kind":"Name","value":"status"}}]}}]}},{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"SolidStepStatusUnavailableError"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"__typename"}}]}}]}}]}}]}}]}}]}}]} as unknown as DocumentNode<SidebarOpGraphsQueryQuery, SidebarOpGraphsQueryQueryVariables>;
export const PipelineRunLogsSubscriptionDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"subscription","name":{"kind":"Name","value":"PipelineRunLogsSubscription"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"runId"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"ID"}}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"cursor"}},"type":{"kind":"NamedType","name":{"kind":"Name","value":"String"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"pipelineRunLogs"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"runId"},"value":{"kind":"Variable","name":{"kind":"Name","value":"runId"}}},{"kind":"Argument","name":{"kind":"Name","value":"cursor"},"value":{"kind":"Variable","name":{"kind":"Name","value":"cursor"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"__typename"}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"RunLogsSubscriptionSuccess"}},{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"PipelineRunLogsSubscriptionFailure"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"missingRunId"}},{"kind":"Field","name":{"kind":"Name","value":"message"}}]}}]}}]}},...RunLogsSubscriptionSuccessFragmentDoc.definitions,...RunDagsterRunEventFragmentFragmentDoc.definitions,...LogsScrollingTableMessageFragmentFragmentDoc.definitions,...LogsRowStructuredFragmentFragmentDoc.definitions,...MetadataEntryFragmentFragmentDoc.definitions,...TableSchemaFragmentFragmentDoc.definitions,...ConstraintsForTableColumnFragmentDoc.definitions,...TableSchemaForMetadataEntryFragmentDoc.definitions,...PythonErrorFragmentFragmentDoc.definitions,...PythonErrorChainFragmentDoc.definitions,...LogsRowUnstructuredFragmentFragmentDoc.definitions,...RunMetadataProviderMessageFragmentFragmentDoc.definitions]} as unknown as DocumentNode<PipelineRunLogsSubscriptionSubscription, PipelineRunLogsSubscriptionSubscriptionVariables>;
export const RunLogsQueryDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"query","name":{"kind":"Name","value":"RunLogsQuery"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"runId"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"ID"}}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"cursor"}},"type":{"kind":"NamedType","name":{"kind":"Name","value":"String"}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"limit"}},"type":{"kind":"NamedType","name":{"kind":"Name","value":"Int"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"pipelineRunOrError"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"runId"},"value":{"kind":"Variable","name":{"kind":"Name","value":"runId"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"Run"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"runId"}},{"kind":"Field","name":{"kind":"Name","value":"status"}},{"kind":"Field","name":{"kind":"Name","value":"canTerminate"}}]}}]}},{"kind":"Field","name":{"kind":"Name","value":"logsForRun"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"runId"},"value":{"kind":"Variable","name":{"kind":"Name","value":"runId"}}},{"kind":"Argument","name":{"kind":"Name","value":"afterCursor"},"value":{"kind":"Variable","name":{"kind":"Name","value":"cursor"}}},{"kind":"Argument","name":{"kind":"Name","value":"limit"},"value":{"kind":"Variable","name":{"kind":"Name","value":"limit"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"EventConnection"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"events"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"__typename"}},{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"MessageEvent"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"runId"}}]}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"RunDagsterRunEventFragment"}}]}},{"kind":"Field","name":{"kind":"Name","value":"cursor"}}]}},{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"PythonError"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"message"}},{"kind":"Field","name":{"kind":"Name","value":"stack"}}]}}]}}]}},...RunDagsterRunEventFragmentFragmentDoc.definitions,...LogsScrollingTableMessageFragmentFragmentDoc.definitions,...LogsRowStructuredFragmentFragmentDoc.definitions,...MetadataEntryFragmentFragmentDoc.definitions,...TableSchemaFragmentFragmentDoc.definitions,...ConstraintsForTableColumnFragmentDoc.definitions,...TableSchemaForMetadataEntryFragmentDoc.definitions,...PythonErrorFragmentFragmentDoc.definitions,...PythonErrorChainFragmentDoc.definitions,...LogsRowUnstructuredFragmentFragmentDoc.definitions,...RunMetadataProviderMessageFragmentFragmentDoc.definitions]} as unknown as DocumentNode<RunLogsQueryQuery, RunLogsQueryQueryVariables>;
export const RunActionButtonsTestQueryDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"query","name":{"kind":"Name","value":"RunActionButtonsTestQuery"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"pipelineRunOrError"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"runId"},"value":{"kind":"StringValue","value":"foo","block":false}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"Run"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"RunFragment"}}]}}]}}]}},...RunFragmentFragmentDoc.definitions,...ExecutionPlanToGraphFragmentFragmentDoc.definitions,...RunFragmentForRepositoryMatchFragmentDoc.definitions,...RunDetailsFragmentFragmentDoc.definitions]} as unknown as DocumentNode<RunActionButtonsTestQueryQuery, RunActionButtonsTestQueryQueryVariables>;
export const PipelineEnvironmentYamlQueryDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"query","name":{"kind":"Name","value":"PipelineEnvironmentYamlQuery"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"runId"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"ID"}}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"pipelineRunOrError"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"runId"},"value":{"kind":"Variable","name":{"kind":"Name","value":"runId"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"Run"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"pipelineName"}},{"kind":"Field","name":{"kind":"Name","value":"pipelineSnapshotId"}},{"kind":"Field","name":{"kind":"Name","value":"runConfigYaml"}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"RunFragmentForRepositoryMatch"}}]}}]}}]}},...RunFragmentForRepositoryMatchFragmentDoc.definitions]} as unknown as DocumentNode<PipelineEnvironmentYamlQueryQuery, PipelineEnvironmentYamlQueryQueryVariables>;
export const RunDetailsTestQueryDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"query","name":{"kind":"Name","value":"RunDetailsTestQuery"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"pipelineRunOrError"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"runId"},"value":{"kind":"StringValue","value":"abc","block":false}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"Run"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"RunDetailsFragment"}}]}}]}}]}},...RunDetailsFragmentFragmentDoc.definitions]} as unknown as DocumentNode<RunDetailsTestQueryQuery, RunDetailsTestQueryQueryVariables>;
export const RunTabsCountQueryDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"query","name":{"kind":"Name","value":"RunTabsCountQuery"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"queuedFilter"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"RunsFilter"}}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"inProgressFilter"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"RunsFilter"}}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","alias":{"kind":"Name","value":"queuedCount"},"name":{"kind":"Name","value":"pipelineRunsOrError"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"filter"},"value":{"kind":"Variable","name":{"kind":"Name","value":"queuedFilter"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"Runs"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"count"}}]}}]}},{"kind":"Field","alias":{"kind":"Name","value":"inProgressCount"},"name":{"kind":"Name","value":"pipelineRunsOrError"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"filter"},"value":{"kind":"Variable","name":{"kind":"Name","value":"inProgressFilter"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"Runs"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"count"}}]}}]}}]}}]} as unknown as DocumentNode<RunTabsCountQueryQuery, RunTabsCountQueryQueryVariables>;
export const RunRootQueryDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"query","name":{"kind":"Name","value":"RunRootQuery"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"runId"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"ID"}}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"pipelineRunOrError"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"runId"},"value":{"kind":"Variable","name":{"kind":"Name","value":"runId"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"__typename"}},{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"Run"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"RunFragment"}}]}}]}}]}},...RunFragmentFragmentDoc.definitions,...ExecutionPlanToGraphFragmentFragmentDoc.definitions,...RunFragmentForRepositoryMatchFragmentDoc.definitions,...RunDetailsFragmentFragmentDoc.definitions]} as unknown as DocumentNode<RunRootQueryQuery, RunRootQueryQueryVariables>;
export const RunStatsQueryDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"query","name":{"kind":"Name","value":"RunStatsQuery"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"runId"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"ID"}}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"pipelineRunOrError"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"runId"},"value":{"kind":"Variable","name":{"kind":"Name","value":"runId"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"__typename"}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"PythonErrorFragment"}},{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"RunNotFoundError"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"message"}}]}},{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"Run"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"runId"}},{"kind":"Field","name":{"kind":"Name","value":"pipelineName"}},{"kind":"Field","name":{"kind":"Name","value":"stats"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"RunStatsSnapshot"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"stepsSucceeded"}},{"kind":"Field","name":{"kind":"Name","value":"stepsFailed"}},{"kind":"Field","name":{"kind":"Name","value":"expectations"}},{"kind":"Field","name":{"kind":"Name","value":"materializations"}}]}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"PythonErrorFragment"}}]}}]}}]}}]}},...PythonErrorFragmentFragmentDoc.definitions,...PythonErrorChainFragmentDoc.definitions]} as unknown as DocumentNode<RunStatsQueryQuery, RunStatsQueryQueryVariables>;
export const LaunchPipelineExecutionDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"mutation","name":{"kind":"Name","value":"LaunchPipelineExecution"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"executionParams"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"ExecutionParams"}}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"launchPipelineExecution"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"executionParams"},"value":{"kind":"Variable","name":{"kind":"Name","value":"executionParams"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"__typename"}},{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"LaunchRunSuccess"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"run"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"runId"}},{"kind":"Field","name":{"kind":"Name","value":"pipelineName"}}]}}]}},{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"PipelineNotFoundError"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"message"}}]}},{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"InvalidSubsetError"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"message"}}]}},{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"RunConfigValidationInvalid"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"errors"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"message"}}]}}]}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"PythonErrorFragment"}}]}}]}},...PythonErrorFragmentFragmentDoc.definitions,...PythonErrorChainFragmentDoc.definitions]} as unknown as DocumentNode<LaunchPipelineExecutionMutation, LaunchPipelineExecutionMutationVariables>;
export const DeleteDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"mutation","name":{"kind":"Name","value":"Delete"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"runId"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"String"}}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"deletePipelineRun"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"runId"},"value":{"kind":"Variable","name":{"kind":"Name","value":"runId"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"__typename"}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"PythonErrorFragment"}},{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"UnauthorizedError"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"message"}}]}},{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"RunNotFoundError"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"message"}}]}}]}}]}},...PythonErrorFragmentFragmentDoc.definitions,...PythonErrorChainFragmentDoc.definitions]} as unknown as DocumentNode<DeleteMutation, DeleteMutationVariables>;
export const TerminateDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"mutation","name":{"kind":"Name","value":"Terminate"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"runId"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"String"}}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"terminatePolicy"}},"type":{"kind":"NamedType","name":{"kind":"Name","value":"TerminateRunPolicy"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"terminatePipelineExecution"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"runId"},"value":{"kind":"Variable","name":{"kind":"Name","value":"runId"}}},{"kind":"Argument","name":{"kind":"Name","value":"terminatePolicy"},"value":{"kind":"Variable","name":{"kind":"Name","value":"terminatePolicy"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"__typename"}},{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"TerminateRunFailure"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"message"}}]}},{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"RunNotFoundError"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"message"}}]}},{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"TerminateRunSuccess"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"run"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"runId"}},{"kind":"Field","name":{"kind":"Name","value":"canTerminate"}}]}}]}},{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"UnauthorizedError"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"message"}}]}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"PythonErrorFragment"}}]}}]}},...PythonErrorFragmentFragmentDoc.definitions,...PythonErrorChainFragmentDoc.definitions]} as unknown as DocumentNode<TerminateMutation, TerminateMutationVariables>;
export const LaunchPipelineReexecutionDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"mutation","name":{"kind":"Name","value":"LaunchPipelineReexecution"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"executionParams"}},"type":{"kind":"NamedType","name":{"kind":"Name","value":"ExecutionParams"}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"reexecutionParams"}},"type":{"kind":"NamedType","name":{"kind":"Name","value":"ReexecutionParams"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"launchPipelineReexecution"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"executionParams"},"value":{"kind":"Variable","name":{"kind":"Name","value":"executionParams"}}},{"kind":"Argument","name":{"kind":"Name","value":"reexecutionParams"},"value":{"kind":"Variable","name":{"kind":"Name","value":"reexecutionParams"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"__typename"}},{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"LaunchRunSuccess"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"run"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"runId"}},{"kind":"Field","name":{"kind":"Name","value":"pipelineName"}},{"kind":"Field","name":{"kind":"Name","value":"rootRunId"}},{"kind":"Field","name":{"kind":"Name","value":"parentRunId"}}]}}]}},{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"PipelineNotFoundError"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"message"}}]}},{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"InvalidSubsetError"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"message"}}]}},{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"RunConfigValidationInvalid"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"errors"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"message"}}]}}]}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"PythonErrorFragment"}}]}}]}},...PythonErrorFragmentFragmentDoc.definitions,...PythonErrorChainFragmentDoc.definitions]} as unknown as DocumentNode<LaunchPipelineReexecutionMutation, LaunchPipelineReexecutionMutationVariables>;
export const RunsRootQueryDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"query","name":{"kind":"Name","value":"RunsRootQuery"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"limit"}},"type":{"kind":"NamedType","name":{"kind":"Name","value":"Int"}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"cursor"}},"type":{"kind":"NamedType","name":{"kind":"Name","value":"String"}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"filter"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"RunsFilter"}}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"pipelineRunsOrError"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"limit"},"value":{"kind":"Variable","name":{"kind":"Name","value":"limit"}}},{"kind":"Argument","name":{"kind":"Name","value":"cursor"},"value":{"kind":"Variable","name":{"kind":"Name","value":"cursor"}}},{"kind":"Argument","name":{"kind":"Name","value":"filter"},"value":{"kind":"Variable","name":{"kind":"Name","value":"filter"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"Runs"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"results"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"RunTableRunFragment"}}]}}]}},{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"InvalidPipelineRunsFilterError"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"message"}}]}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"PythonErrorFragment"}}]}}]}},...RunTableRunFragmentFragmentDoc.definitions,...RunTimeFragmentFragmentDoc.definitions,...PythonErrorFragmentFragmentDoc.definitions,...PythonErrorChainFragmentDoc.definitions]} as unknown as DocumentNode<RunsRootQueryQuery, RunsRootQueryQueryVariables>;
export const QueueDaemonStatusQueryDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"query","name":{"kind":"Name","value":"QueueDaemonStatusQuery"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"instance"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"daemonHealth"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"daemonStatus"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"daemonType"},"value":{"kind":"StringValue","value":"QUEUED_RUN_COORDINATOR","block":false}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"daemonType"}},{"kind":"Field","name":{"kind":"Name","value":"healthy"}},{"kind":"Field","name":{"kind":"Name","value":"required"}}]}}]}}]}}]}}]} as unknown as DocumentNode<QueueDaemonStatusQueryQuery, QueueDaemonStatusQueryQueryVariables>;
export const SchedulerInfoQueryDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"query","name":{"kind":"Name","value":"SchedulerInfoQuery"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"instance"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"FragmentSpread","name":{"kind":"Name","value":"InstanceHealthFragment"}}]}},{"kind":"Field","name":{"kind":"Name","value":"repositoriesOrError"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"RepositoryConnection"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"nodes"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"__typename"}},{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"Repository"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"FragmentSpread","name":{"kind":"Name","value":"RepositorySchedulesFragment"}}]}}]}}]}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"PythonErrorFragment"}}]}}]}},...InstanceHealthFragmentFragmentDoc.definitions,...DaemonHealthFragmentFragmentDoc.definitions,...DaemonStatusForListFragmentDoc.definitions,...PythonErrorFragmentFragmentDoc.definitions,...PythonErrorChainFragmentDoc.definitions,...RepositorySchedulesFragmentFragmentDoc.definitions,...ScheduleFragmentFragmentDoc.definitions,...InstigationStateFragmentFragmentDoc.definitions,...RunStatusFragmentFragmentDoc.definitions,...RunTimeFragmentFragmentDoc.definitions,...TickTagFragmentFragmentDoc.definitions,...RepositoryInfoFragmentFragmentDoc.definitions]} as unknown as DocumentNode<SchedulerInfoQueryQuery, SchedulerInfoQueryQueryVariables>;
export const ComputeLogsSubscriptionDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"subscription","name":{"kind":"Name","value":"ComputeLogsSubscription"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"runId"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"ID"}}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"stepKey"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"String"}}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"ioType"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"ComputeIOType"}}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"cursor"}},"type":{"kind":"NamedType","name":{"kind":"Name","value":"String"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"computeLogs"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"runId"},"value":{"kind":"Variable","name":{"kind":"Name","value":"runId"}}},{"kind":"Argument","name":{"kind":"Name","value":"stepKey"},"value":{"kind":"Variable","name":{"kind":"Name","value":"stepKey"}}},{"kind":"Argument","name":{"kind":"Name","value":"ioType"},"value":{"kind":"Variable","name":{"kind":"Name","value":"ioType"}}},{"kind":"Argument","name":{"kind":"Name","value":"cursor"},"value":{"kind":"Variable","name":{"kind":"Name","value":"cursor"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"FragmentSpread","name":{"kind":"Name","value":"ComputeLogForSubscription"}}]}}]}},...ComputeLogForSubscriptionFragmentDoc.definitions]} as unknown as DocumentNode<ComputeLogsSubscriptionSubscription, ComputeLogsSubscriptionSubscriptionVariables>;
export const RunTimelineQueryDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"query","name":{"kind":"Name","value":"RunTimelineQuery"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"inProgressFilter"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"RunsFilter"}}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"terminatedFilter"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"RunsFilter"}}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"tickCursor"}},"type":{"kind":"NamedType","name":{"kind":"Name","value":"Float"}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"ticksUntil"}},"type":{"kind":"NamedType","name":{"kind":"Name","value":"Float"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","alias":{"kind":"Name","value":"unterminated"},"name":{"kind":"Name","value":"runsOrError"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"filter"},"value":{"kind":"Variable","name":{"kind":"Name","value":"inProgressFilter"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"Runs"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"results"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"pipelineName"}},{"kind":"Field","name":{"kind":"Name","value":"repositoryOrigin"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"repositoryName"}},{"kind":"Field","name":{"kind":"Name","value":"repositoryLocationName"}}]}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"RunTimeFragment"}}]}}]}}]}},{"kind":"Field","alias":{"kind":"Name","value":"terminated"},"name":{"kind":"Name","value":"runsOrError"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"filter"},"value":{"kind":"Variable","name":{"kind":"Name","value":"terminatedFilter"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"Runs"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"results"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"pipelineName"}},{"kind":"Field","name":{"kind":"Name","value":"repositoryOrigin"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"repositoryName"}},{"kind":"Field","name":{"kind":"Name","value":"repositoryLocationName"}}]}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"RunTimeFragment"}}]}}]}}]}},{"kind":"Field","name":{"kind":"Name","value":"workspaceOrError"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"Workspace"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"locationEntries"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"name"}},{"kind":"Field","name":{"kind":"Name","value":"loadStatus"}},{"kind":"Field","name":{"kind":"Name","value":"displayMetadata"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"key"}},{"kind":"Field","name":{"kind":"Name","value":"value"}}]}},{"kind":"Field","name":{"kind":"Name","value":"locationOrLoadError"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"RepositoryLocation"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"name"}},{"kind":"Field","name":{"kind":"Name","value":"repositories"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"name"}},{"kind":"Field","name":{"kind":"Name","value":"pipelines"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"name"}},{"kind":"Field","name":{"kind":"Name","value":"isJob"}}]}},{"kind":"Field","name":{"kind":"Name","value":"schedules"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"name"}},{"kind":"Field","name":{"kind":"Name","value":"pipelineName"}},{"kind":"Field","name":{"kind":"Name","value":"scheduleState"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"status"}}]}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"ScheduleFutureTicksFragment"}}]}}]}}]}}]}}]}}]}}]}}]}},...RunTimeFragmentFragmentDoc.definitions,...ScheduleFutureTicksFragmentFragmentDoc.definitions]} as unknown as DocumentNode<RunTimelineQueryQuery, RunTimelineQueryQueryVariables>;
export const StartThisScheduleDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"mutation","name":{"kind":"Name","value":"StartThisSchedule"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"scheduleSelector"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"ScheduleSelector"}}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"startSchedule"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"scheduleSelector"},"value":{"kind":"Variable","name":{"kind":"Name","value":"scheduleSelector"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"__typename"}},{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"ScheduleStateResult"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"scheduleState"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"__typename"}},{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"status"}},{"kind":"Field","name":{"kind":"Name","value":"runningCount"}}]}}]}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"PythonErrorFragment"}}]}}]}},...PythonErrorFragmentFragmentDoc.definitions,...PythonErrorChainFragmentDoc.definitions]} as unknown as DocumentNode<StartThisScheduleMutation, StartThisScheduleMutationVariables>;
export const StopScheduleDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"mutation","name":{"kind":"Name","value":"StopSchedule"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"scheduleOriginId"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"String"}}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"scheduleSelectorId"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"String"}}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"stopRunningSchedule"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"scheduleOriginId"},"value":{"kind":"Variable","name":{"kind":"Name","value":"scheduleOriginId"}}},{"kind":"Argument","name":{"kind":"Name","value":"scheduleSelectorId"},"value":{"kind":"Variable","name":{"kind":"Name","value":"scheduleSelectorId"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"__typename"}},{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"ScheduleStateResult"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"scheduleState"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"__typename"}},{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"status"}},{"kind":"Field","name":{"kind":"Name","value":"runningCount"}}]}}]}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"PythonErrorFragment"}}]}}]}},...PythonErrorFragmentFragmentDoc.definitions,...PythonErrorChainFragmentDoc.definitions]} as unknown as DocumentNode<StopScheduleMutation, StopScheduleMutationVariables>;
export const SchedulePartitionStatusQueryDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"query","name":{"kind":"Name","value":"SchedulePartitionStatusQuery"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"scheduleSelector"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"ScheduleSelector"}}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"scheduleOrError"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"scheduleSelector"},"value":{"kind":"Variable","name":{"kind":"Name","value":"scheduleSelector"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"Schedule"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"SchedulePartitionStatusFragment"}}]}}]}}]}},...SchedulePartitionStatusFragmentFragmentDoc.definitions,...SchedulePartitionStatusResultFragmentDoc.definitions]} as unknown as DocumentNode<SchedulePartitionStatusQueryQuery, SchedulePartitionStatusQueryQueryVariables>;
export const ScheduleRootQueryDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"query","name":{"kind":"Name","value":"ScheduleRootQuery"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"scheduleSelector"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"ScheduleSelector"}}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"scheduleOrError"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"scheduleSelector"},"value":{"kind":"Variable","name":{"kind":"Name","value":"scheduleSelector"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"Schedule"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"ScheduleFragment"}}]}},{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"ScheduleNotFoundError"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"message"}}]}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"PythonErrorFragment"}}]}},{"kind":"Field","name":{"kind":"Name","value":"instance"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"FragmentSpread","name":{"kind":"Name","value":"InstanceHealthFragment"}},{"kind":"Field","name":{"kind":"Name","value":"daemonHealth"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"daemonStatus"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"daemonType"},"value":{"kind":"StringValue","value":"SCHEDULER","block":false}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"healthy"}}]}}]}}]}}]}},...ScheduleFragmentFragmentDoc.definitions,...InstigationStateFragmentFragmentDoc.definitions,...RunStatusFragmentFragmentDoc.definitions,...RunTimeFragmentFragmentDoc.definitions,...TickTagFragmentFragmentDoc.definitions,...PythonErrorFragmentFragmentDoc.definitions,...PythonErrorChainFragmentDoc.definitions,...InstanceHealthFragmentFragmentDoc.definitions,...DaemonHealthFragmentFragmentDoc.definitions,...DaemonStatusForListFragmentDoc.definitions]} as unknown as DocumentNode<ScheduleRootQueryQuery, ScheduleRootQueryQueryVariables>;
export const PreviousRunsForScheduleQueryDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"query","name":{"kind":"Name","value":"PreviousRunsForScheduleQuery"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"filter"}},"type":{"kind":"NamedType","name":{"kind":"Name","value":"RunsFilter"}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"limit"}},"type":{"kind":"NamedType","name":{"kind":"Name","value":"Int"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"pipelineRunsOrError"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"filter"},"value":{"kind":"Variable","name":{"kind":"Name","value":"filter"}}},{"kind":"Argument","name":{"kind":"Name","value":"limit"},"value":{"kind":"Variable","name":{"kind":"Name","value":"limit"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"__typename"}},{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"Runs"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"results"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"PipelineRun"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"FragmentSpread","name":{"kind":"Name","value":"RunTableRunFragment"}}]}}]}}]}},{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"Error"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"message"}}]}}]}}]}},...RunTableRunFragmentFragmentDoc.definitions,...RunTimeFragmentFragmentDoc.definitions]} as unknown as DocumentNode<PreviousRunsForScheduleQueryQuery, PreviousRunsForScheduleQueryQueryVariables>;
export const SchedulesRootQueryDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"query","name":{"kind":"Name","value":"SchedulesRootQuery"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"repositorySelector"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"RepositorySelector"}}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"instigationType"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"InstigationType"}}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"repositoryOrError"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"repositorySelector"},"value":{"kind":"Variable","name":{"kind":"Name","value":"repositorySelector"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"__typename"}},{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"Repository"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"RepositorySchedulesFragment"}}]}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"PythonErrorFragment"}}]}},{"kind":"Field","name":{"kind":"Name","value":"unloadableInstigationStatesOrError"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"instigationType"},"value":{"kind":"Variable","name":{"kind":"Name","value":"instigationType"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"InstigationStates"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"results"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"InstigationStateFragment"}}]}}]}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"PythonErrorFragment"}}]}},{"kind":"Field","name":{"kind":"Name","value":"instance"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"FragmentSpread","name":{"kind":"Name","value":"InstanceHealthFragment"}}]}}]}},...RepositorySchedulesFragmentFragmentDoc.definitions,...ScheduleFragmentFragmentDoc.definitions,...InstigationStateFragmentFragmentDoc.definitions,...RunStatusFragmentFragmentDoc.definitions,...RunTimeFragmentFragmentDoc.definitions,...TickTagFragmentFragmentDoc.definitions,...PythonErrorFragmentFragmentDoc.definitions,...PythonErrorChainFragmentDoc.definitions,...RepositoryInfoFragmentFragmentDoc.definitions,...InstanceHealthFragmentFragmentDoc.definitions,...DaemonHealthFragmentFragmentDoc.definitions,...DaemonStatusForListFragmentDoc.definitions]} as unknown as DocumentNode<SchedulesRootQueryQuery, SchedulesRootQueryQueryVariables>;
export const ScheduleTickConfigQueryDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"query","name":{"kind":"Name","value":"ScheduleTickConfigQuery"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"scheduleSelector"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"ScheduleSelector"}}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"tickTimestamp"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"Int"}}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"scheduleOrError"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"scheduleSelector"},"value":{"kind":"Variable","name":{"kind":"Name","value":"scheduleSelector"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"Schedule"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"futureTick"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"tickTimestamp"},"value":{"kind":"Variable","name":{"kind":"Name","value":"tickTimestamp"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"evaluationResult"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"FragmentSpread","name":{"kind":"Name","value":"ScheduleFutureTickEvaluationResult"}}]}}]}}]}}]}}]}},...ScheduleFutureTickEvaluationResultFragmentDoc.definitions,...ScheduleFutureTickRunRequestFragmentDoc.definitions,...PythonErrorFragmentFragmentDoc.definitions,...PythonErrorChainFragmentDoc.definitions]} as unknown as DocumentNode<ScheduleTickConfigQueryQuery, ScheduleTickConfigQueryQueryVariables>;
export const SearchBootstrapQueryDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"query","name":{"kind":"Name","value":"SearchBootstrapQuery"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"workspaceOrError"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"__typename"}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"PythonErrorFragment"}},{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"Workspace"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"locationEntries"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"__typename"}},{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"locationOrLoadError"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"RepositoryLocation"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"name"}},{"kind":"Field","name":{"kind":"Name","value":"repositories"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"Repository"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"name"}},{"kind":"Field","name":{"kind":"Name","value":"pipelines"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"isJob"}},{"kind":"Field","name":{"kind":"Name","value":"name"}}]}},{"kind":"Field","name":{"kind":"Name","value":"schedules"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"name"}}]}},{"kind":"Field","name":{"kind":"Name","value":"sensors"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"name"}}]}},{"kind":"Field","name":{"kind":"Name","value":"partitionSets"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"name"}},{"kind":"Field","name":{"kind":"Name","value":"pipelineName"}}]}}]}}]}}]}}]}}]}}]}}]}}]}},...PythonErrorFragmentFragmentDoc.definitions,...PythonErrorChainFragmentDoc.definitions]} as unknown as DocumentNode<SearchBootstrapQueryQuery, SearchBootstrapQueryQueryVariables>;
export const SearchSecondaryQueryDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"query","name":{"kind":"Name","value":"SearchSecondaryQuery"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"assetsOrError"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"__typename"}},{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"AssetConnection"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"nodes"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"key"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"path"}}]}}]}}]}}]}}]}}]} as unknown as DocumentNode<SearchSecondaryQueryQuery, SearchSecondaryQueryQueryVariables>;
export const SetSensorCursorMutationDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"mutation","name":{"kind":"Name","value":"SetSensorCursorMutation"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"sensorSelector"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"SensorSelector"}}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"cursor"}},"type":{"kind":"NamedType","name":{"kind":"Name","value":"String"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"setSensorCursor"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"sensorSelector"},"value":{"kind":"Variable","name":{"kind":"Name","value":"sensorSelector"}}},{"kind":"Argument","name":{"kind":"Name","value":"cursor"},"value":{"kind":"Variable","name":{"kind":"Name","value":"cursor"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"Sensor"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"sensorState"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"status"}},{"kind":"Field","name":{"kind":"Name","value":"typeSpecificData"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"SensorData"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"lastCursor"}}]}}]}}]}}]}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"PythonErrorFragment"}}]}}]}},...PythonErrorFragmentFragmentDoc.definitions,...PythonErrorChainFragmentDoc.definitions]} as unknown as DocumentNode<SetSensorCursorMutationMutation, SetSensorCursorMutationMutationVariables>;
export const StartSensorDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"mutation","name":{"kind":"Name","value":"StartSensor"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"sensorSelector"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"SensorSelector"}}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"startSensor"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"sensorSelector"},"value":{"kind":"Variable","name":{"kind":"Name","value":"sensorSelector"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"__typename"}},{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"Sensor"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"sensorState"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"status"}}]}}]}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"PythonErrorFragment"}}]}}]}},...PythonErrorFragmentFragmentDoc.definitions,...PythonErrorChainFragmentDoc.definitions]} as unknown as DocumentNode<StartSensorMutation, StartSensorMutationVariables>;
export const StopRunningSensorDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"mutation","name":{"kind":"Name","value":"StopRunningSensor"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"jobOriginId"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"String"}}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"jobSelectorId"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"String"}}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"stopSensor"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"jobOriginId"},"value":{"kind":"Variable","name":{"kind":"Name","value":"jobOriginId"}}},{"kind":"Argument","name":{"kind":"Name","value":"jobSelectorId"},"value":{"kind":"Variable","name":{"kind":"Name","value":"jobSelectorId"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"__typename"}},{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"StopSensorMutationResult"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"instigationState"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"status"}}]}}]}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"PythonErrorFragment"}}]}}]}},...PythonErrorFragmentFragmentDoc.definitions,...PythonErrorChainFragmentDoc.definitions]} as unknown as DocumentNode<StopRunningSensorMutation, StopRunningSensorMutationVariables>;
export const PreviousRunsForSensorQueryDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"query","name":{"kind":"Name","value":"PreviousRunsForSensorQuery"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"filter"}},"type":{"kind":"NamedType","name":{"kind":"Name","value":"RunsFilter"}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"limit"}},"type":{"kind":"NamedType","name":{"kind":"Name","value":"Int"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"pipelineRunsOrError"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"filter"},"value":{"kind":"Variable","name":{"kind":"Name","value":"filter"}}},{"kind":"Argument","name":{"kind":"Name","value":"limit"},"value":{"kind":"Variable","name":{"kind":"Name","value":"limit"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"__typename"}},{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"Runs"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"results"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"PipelineRun"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"FragmentSpread","name":{"kind":"Name","value":"RunTableRunFragment"}}]}}]}}]}}]}}]}},...RunTableRunFragmentFragmentDoc.definitions,...RunTimeFragmentFragmentDoc.definitions]} as unknown as DocumentNode<PreviousRunsForSensorQueryQuery, PreviousRunsForSensorQueryQueryVariables>;
export const SensorRootQueryDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"query","name":{"kind":"Name","value":"SensorRootQuery"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"sensorSelector"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"SensorSelector"}}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"sensorOrError"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"sensorSelector"},"value":{"kind":"Variable","name":{"kind":"Name","value":"sensorSelector"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"__typename"}},{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"Sensor"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"SensorFragment"}}]}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"PythonErrorFragment"}}]}},{"kind":"Field","name":{"kind":"Name","value":"instance"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"FragmentSpread","name":{"kind":"Name","value":"InstanceHealthFragment"}},{"kind":"Field","name":{"kind":"Name","value":"daemonHealth"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"daemonStatus"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"daemonType"},"value":{"kind":"StringValue","value":"SENSOR","block":false}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"healthy"}}]}}]}}]}}]}},...SensorFragmentFragmentDoc.definitions,...InstigationStateFragmentFragmentDoc.definitions,...RunStatusFragmentFragmentDoc.definitions,...RunTimeFragmentFragmentDoc.definitions,...TickTagFragmentFragmentDoc.definitions,...PythonErrorFragmentFragmentDoc.definitions,...PythonErrorChainFragmentDoc.definitions,...InstanceHealthFragmentFragmentDoc.definitions,...DaemonHealthFragmentFragmentDoc.definitions,...DaemonStatusForListFragmentDoc.definitions]} as unknown as DocumentNode<SensorRootQueryQuery, SensorRootQueryQueryVariables>;
export const SensorsRootQueryDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"query","name":{"kind":"Name","value":"SensorsRootQuery"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"repositorySelector"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"RepositorySelector"}}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"instigationType"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"InstigationType"}}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"sensorsOrError"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"repositorySelector"},"value":{"kind":"Variable","name":{"kind":"Name","value":"repositorySelector"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"__typename"}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"PythonErrorFragment"}},{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"Sensors"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"results"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"SensorFragment"}}]}}]}}]}},{"kind":"Field","name":{"kind":"Name","value":"unloadableInstigationStatesOrError"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"instigationType"},"value":{"kind":"Variable","name":{"kind":"Name","value":"instigationType"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"InstigationStates"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"results"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"InstigationStateFragment"}}]}}]}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"PythonErrorFragment"}}]}},{"kind":"Field","name":{"kind":"Name","value":"instance"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"FragmentSpread","name":{"kind":"Name","value":"InstanceHealthFragment"}}]}}]}},...PythonErrorFragmentFragmentDoc.definitions,...PythonErrorChainFragmentDoc.definitions,...SensorFragmentFragmentDoc.definitions,...InstigationStateFragmentFragmentDoc.definitions,...RunStatusFragmentFragmentDoc.definitions,...RunTimeFragmentFragmentDoc.definitions,...TickTagFragmentFragmentDoc.definitions,...InstanceHealthFragmentFragmentDoc.definitions,...DaemonHealthFragmentFragmentDoc.definitions,...DaemonStatusForListFragmentDoc.definitions]} as unknown as DocumentNode<SensorsRootQueryQuery, SensorsRootQueryQueryVariables>;
export const SnapshotQueryDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"query","name":{"kind":"Name","value":"SnapshotQuery"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"snapshotId"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"String"}}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"pipelineSnapshotOrError"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"snapshotId"},"value":{"kind":"Variable","name":{"kind":"Name","value":"snapshotId"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"PipelineSnapshot"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"parentSnapshotId"}}]}}]}}]}}]} as unknown as DocumentNode<SnapshotQueryQuery, SnapshotQueryQueryVariables>;
export const TypeExplorerContainerQueryDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"query","name":{"kind":"Name","value":"TypeExplorerContainerQuery"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"pipelineSelector"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"PipelineSelector"}}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"dagsterTypeName"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"String"}}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"pipelineOrError"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"params"},"value":{"kind":"Variable","name":{"kind":"Name","value":"pipelineSelector"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"__typename"}},{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"Pipeline"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"isJob"}},{"kind":"Field","name":{"kind":"Name","value":"dagsterTypeOrError"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"dagsterTypeName"},"value":{"kind":"Variable","name":{"kind":"Name","value":"dagsterTypeName"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"__typename"}},{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"RegularDagsterType"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"FragmentSpread","name":{"kind":"Name","value":"TypeExplorerFragment"}}]}}]}}]}}]}}]}},...TypeExplorerFragmentFragmentDoc.definitions,...MetadataEntryFragmentFragmentDoc.definitions,...TableSchemaFragmentFragmentDoc.definitions,...ConstraintsForTableColumnFragmentDoc.definitions,...TableSchemaForMetadataEntryFragmentDoc.definitions,...ConfigTypeSchemaFragmentFragmentDoc.definitions]} as unknown as DocumentNode<TypeExplorerContainerQueryQuery, TypeExplorerContainerQueryQueryVariables>;
export const TypeListContainerQueryDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"query","name":{"kind":"Name","value":"TypeListContainerQuery"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"pipelineSelector"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"PipelineSelector"}}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"pipelineOrError"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"params"},"value":{"kind":"Variable","name":{"kind":"Name","value":"pipelineSelector"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"__typename"}},{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"Pipeline"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"isJob"}},{"kind":"Field","name":{"kind":"Name","value":"name"}},{"kind":"Field","name":{"kind":"Name","value":"dagsterTypes"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"FragmentSpread","name":{"kind":"Name","value":"TypeListFragment"}}]}}]}}]}}]}},...TypeListFragmentFragmentDoc.definitions,...DagsterTypeWithTooltipFragmentFragmentDoc.definitions]} as unknown as DocumentNode<TypeListContainerQueryQuery, TypeListContainerQueryQueryVariables>;
export const GraphExplorerRootQueryDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"query","name":{"kind":"Name","value":"GraphExplorerRootQuery"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"graphSelector"}},"type":{"kind":"NamedType","name":{"kind":"Name","value":"GraphSelector"}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"rootHandleID"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"String"}}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"requestScopeHandleID"}},"type":{"kind":"NamedType","name":{"kind":"Name","value":"String"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"graphOrError"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"selector"},"value":{"kind":"Variable","name":{"kind":"Name","value":"graphSelector"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"Graph"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"name"}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"GraphExplorerFragment"}},{"kind":"Field","name":{"kind":"Name","value":"solidHandle"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"handleID"},"value":{"kind":"Variable","name":{"kind":"Name","value":"rootHandleID"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"FragmentSpread","name":{"kind":"Name","value":"GraphExplorerSolidHandleFragment"}}]}},{"kind":"Field","name":{"kind":"Name","value":"solidHandles"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"parentHandleID"},"value":{"kind":"Variable","name":{"kind":"Name","value":"requestScopeHandleID"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"handleID"}},{"kind":"Field","name":{"kind":"Name","value":"solid"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"name"}}]}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"GraphExplorerSolidHandleFragment"}}]}}]}},{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"GraphNotFoundError"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"message"}}]}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"PythonErrorFragment"}}]}}]}},...GraphExplorerFragmentFragmentDoc.definitions,...SidebarRootContainerFragmentFragmentDoc.definitions,...SidebarResourcesSectionFragmentFragmentDoc.definitions,...ConfigTypeSchemaFragmentFragmentDoc.definitions,...MetadataEntryFragmentFragmentDoc.definitions,...TableSchemaFragmentFragmentDoc.definitions,...ConstraintsForTableColumnFragmentDoc.definitions,...TableSchemaForMetadataEntryFragmentDoc.definitions,...GraphExplorerSolidHandleFragmentFragmentDoc.definitions,...GraphExplorerSolidFragmentDoc.definitions,...OpGraphOpFragmentFragmentDoc.definitions,...OpNodeInvocationFragmentFragmentDoc.definitions,...OpNodeDefinitionFragmentFragmentDoc.definitions,...OpNodeInputDefinitionFragmentDoc.definitions,...OpNodeOutputDefinitionFragmentDoc.definitions,...PythonErrorFragmentFragmentDoc.definitions,...PythonErrorChainFragmentDoc.definitions]} as unknown as DocumentNode<GraphExplorerRootQueryQuery, GraphExplorerRootQueryQueryVariables>;
export const RepositoryAssetsListQueryDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"query","name":{"kind":"Name","value":"RepositoryAssetsListQuery"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"repositorySelector"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"RepositorySelector"}}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"repositoryOrError"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"repositorySelector"},"value":{"kind":"Variable","name":{"kind":"Name","value":"repositorySelector"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"__typename"}},{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"Repository"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"assetNodes"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"assetKey"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"path"}}]}},{"kind":"Field","name":{"kind":"Name","value":"opNames"}},{"kind":"Field","name":{"kind":"Name","value":"description"}},{"kind":"Field","name":{"kind":"Name","value":"repository"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"name"}},{"kind":"Field","name":{"kind":"Name","value":"location"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"name"}}]}}]}}]}}]}},{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"RepositoryNotFoundError"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"message"}}]}}]}}]}}]} as unknown as DocumentNode<RepositoryAssetsListQueryQuery, RepositoryAssetsListQueryQueryVariables>;
export const RepositoryGraphsListQueryDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"query","name":{"kind":"Name","value":"RepositoryGraphsListQuery"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"repositorySelector"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"RepositorySelector"}}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"repositoryOrError"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"repositorySelector"},"value":{"kind":"Variable","name":{"kind":"Name","value":"repositorySelector"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"__typename"}},{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"Repository"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"usedSolids"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"definition"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"__typename"}},{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"CompositeSolidDefinition"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"name"}},{"kind":"Field","name":{"kind":"Name","value":"description"}}]}}]}},{"kind":"Field","name":{"kind":"Name","value":"invocations"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"pipeline"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"name"}}]}},{"kind":"Field","name":{"kind":"Name","value":"solidHandle"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"handleID"}}]}}]}}]}},{"kind":"Field","name":{"kind":"Name","value":"pipelines"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"description"}},{"kind":"Field","name":{"kind":"Name","value":"name"}},{"kind":"Field","name":{"kind":"Name","value":"isJob"}},{"kind":"Field","name":{"kind":"Name","value":"graphName"}}]}}]}},{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"RepositoryNotFoundError"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"message"}}]}}]}}]}}]} as unknown as DocumentNode<RepositoryGraphsListQueryQuery, RepositoryGraphsListQueryQueryVariables>;
export const RepositoryPipelinesListQueryDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"query","name":{"kind":"Name","value":"RepositoryPipelinesListQuery"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"repositorySelector"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"RepositorySelector"}}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"repositoryOrError"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"repositorySelector"},"value":{"kind":"Variable","name":{"kind":"Name","value":"repositorySelector"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"__typename"}},{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"Repository"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"pipelines"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"PipelineTableFragment"}}]}}]}},{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"RepositoryNotFoundError"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"message"}}]}}]}}]}},...PipelineTableFragmentFragmentDoc.definitions]} as unknown as DocumentNode<RepositoryPipelinesListQueryQuery, RepositoryPipelinesListQueryQueryVariables>;
export const SingleAssetQueryDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"query","name":{"kind":"Name","value":"SingleAssetQuery"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"input"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"AssetKeyInput"}}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"assetOrError"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"assetKey"},"value":{"kind":"Variable","name":{"kind":"Name","value":"input"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"Asset"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"assetMaterializations"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"limit"},"value":{"kind":"IntValue","value":"1"}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"runId"}},{"kind":"Field","name":{"kind":"Name","value":"timestamp"}}]}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"AssetTableFragment"}},{"kind":"Field","name":{"kind":"Name","value":"definition"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"AssetNodeLiveFragment"}}]}}]}}]}},{"kind":"Field","name":{"kind":"Name","value":"assetsLatestInfo"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"assetKeys"},"value":{"kind":"ListValue","values":[{"kind":"Variable","name":{"kind":"Name","value":"input"}}]}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"FragmentSpread","name":{"kind":"Name","value":"AssetLatestInfoFragment"}}]}}]}},...AssetTableFragmentFragmentDoc.definitions,...AssetTableDefinitionFragmentFragmentDoc.definitions,...AssetNodeLiveFragmentFragmentDoc.definitions,...AssetNodeLiveMaterializationFragmentDoc.definitions,...AssetNodeLiveFreshnessPolicyFragmentDoc.definitions,...AssetNodeLiveFreshnessInfoFragmentDoc.definitions,...AssetNodeLiveObservationFragmentDoc.definitions,...AssetLatestInfoFragmentFragmentDoc.definitions,...AssetLatestInfoRunFragmentDoc.definitions]} as unknown as DocumentNode<SingleAssetQueryQuery, SingleAssetQueryQueryVariables>;
export const SingleGraphQueryDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"query","name":{"kind":"Name","value":"SingleGraphQuery"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"selector"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"GraphSelector"}}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"graphOrError"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"selector"},"value":{"kind":"Variable","name":{"kind":"Name","value":"selector"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"Graph"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"name"}},{"kind":"Field","name":{"kind":"Name","value":"description"}}]}}]}}]}}]} as unknown as DocumentNode<SingleGraphQueryQuery, SingleGraphQueryQueryVariables>;
export const SingleJobQueryDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"query","name":{"kind":"Name","value":"SingleJobQuery"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"selector"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"PipelineSelector"}}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"pipelineOrError"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"params"},"value":{"kind":"Variable","name":{"kind":"Name","value":"selector"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"Pipeline"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"name"}},{"kind":"Field","name":{"kind":"Name","value":"isJob"}},{"kind":"Field","name":{"kind":"Name","value":"description"}},{"kind":"Field","name":{"kind":"Name","value":"runs"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"limit"},"value":{"kind":"IntValue","value":"5"}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"RunTimeFragment"}}]}},{"kind":"Field","name":{"kind":"Name","value":"schedules"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"ScheduleSwitchFragment"}}]}},{"kind":"Field","name":{"kind":"Name","value":"sensors"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"SensorSwitchFragment"}}]}}]}}]}}]}},...RunTimeFragmentFragmentDoc.definitions,...ScheduleSwitchFragmentFragmentDoc.definitions,...SensorSwitchFragmentFragmentDoc.definitions]} as unknown as DocumentNode<SingleJobQueryQuery, SingleJobQueryQueryVariables>;
export const SingleScheduleQueryDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"query","name":{"kind":"Name","value":"SingleScheduleQuery"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"selector"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"ScheduleSelector"}}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"scheduleOrError"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"scheduleSelector"},"value":{"kind":"Variable","name":{"kind":"Name","value":"selector"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"Schedule"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"name"}},{"kind":"Field","name":{"kind":"Name","value":"pipelineName"}},{"kind":"Field","name":{"kind":"Name","value":"description"}},{"kind":"Field","name":{"kind":"Name","value":"scheduleState"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"runningCount"}},{"kind":"Field","name":{"kind":"Name","value":"ticks"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"limit"},"value":{"kind":"IntValue","value":"1"}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"TickTagFragment"}}]}},{"kind":"Field","name":{"kind":"Name","value":"runs"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"limit"},"value":{"kind":"IntValue","value":"1"}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"RunTimeFragment"}}]}},{"kind":"Field","name":{"kind":"Name","value":"nextTick"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"timestamp"}}]}}]}},{"kind":"Field","name":{"kind":"Name","value":"partitionSet"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"name"}}]}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"ScheduleSwitchFragment"}}]}}]}}]}},...TickTagFragmentFragmentDoc.definitions,...PythonErrorFragmentFragmentDoc.definitions,...PythonErrorChainFragmentDoc.definitions,...RunTimeFragmentFragmentDoc.definitions,...ScheduleSwitchFragmentFragmentDoc.definitions]} as unknown as DocumentNode<SingleScheduleQueryQuery, SingleScheduleQueryQueryVariables>;
export const SingleSensorQueryDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"query","name":{"kind":"Name","value":"SingleSensorQuery"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"selector"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"SensorSelector"}}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"sensorOrError"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"sensorSelector"},"value":{"kind":"Variable","name":{"kind":"Name","value":"selector"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"Sensor"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"description"}},{"kind":"Field","name":{"kind":"Name","value":"name"}},{"kind":"Field","name":{"kind":"Name","value":"targets"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"pipelineName"}}]}},{"kind":"Field","name":{"kind":"Name","value":"metadata"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"assetKeys"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"path"}}]}}]}},{"kind":"Field","name":{"kind":"Name","value":"minIntervalSeconds"}},{"kind":"Field","name":{"kind":"Name","value":"description"}},{"kind":"Field","name":{"kind":"Name","value":"sensorState"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"runningCount"}},{"kind":"Field","name":{"kind":"Name","value":"ticks"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"limit"},"value":{"kind":"IntValue","value":"1"}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"TickTagFragment"}}]}},{"kind":"Field","name":{"kind":"Name","value":"runs"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"limit"},"value":{"kind":"IntValue","value":"1"}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"RunTimeFragment"}}]}},{"kind":"Field","name":{"kind":"Name","value":"nextTick"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"timestamp"}}]}}]}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"SensorSwitchFragment"}}]}}]}}]}},...TickTagFragmentFragmentDoc.definitions,...PythonErrorFragmentFragmentDoc.definitions,...PythonErrorChainFragmentDoc.definitions,...RunTimeFragmentFragmentDoc.definitions,...SensorSwitchFragmentFragmentDoc.definitions]} as unknown as DocumentNode<SingleSensorQueryQuery, SingleSensorQueryQueryVariables>;
export const WorkspaceAssetsQueryDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"query","name":{"kind":"Name","value":"WorkspaceAssetsQuery"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"selector"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"RepositorySelector"}}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"repositoryOrError"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"repositorySelector"},"value":{"kind":"Variable","name":{"kind":"Name","value":"selector"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"Repository"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"name"}},{"kind":"Field","name":{"kind":"Name","value":"assetNodes"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"assetKey"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"path"}}]}},{"kind":"Field","name":{"kind":"Name","value":"groupName"}}]}}]}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"PythonErrorFragment"}}]}}]}},...PythonErrorFragmentFragmentDoc.definitions,...PythonErrorChainFragmentDoc.definitions]} as unknown as DocumentNode<WorkspaceAssetsQueryQuery, WorkspaceAssetsQueryQueryVariables>;
export const RootWorkspaceQueryDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"query","name":{"kind":"Name","value":"RootWorkspaceQuery"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"workspaceOrError"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"Workspace"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"locationEntries"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"WorkspaceLocationNode"}}]}}]}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"PythonErrorFragment"}}]}}]}},...WorkspaceLocationNodeFragmentDoc.definitions,...WorkspaceDisplayMetadataFragmentDoc.definitions,...WorkspaceLocationFragmentDoc.definitions,...WorkspaceRepositoryFragmentDoc.definitions,...WorkspaceScheduleFragmentDoc.definitions,...WorkspaceSensorFragmentDoc.definitions,...RepositoryInfoFragmentFragmentDoc.definitions,...PythonErrorFragmentFragmentDoc.definitions,...PythonErrorChainFragmentDoc.definitions]} as unknown as DocumentNode<RootWorkspaceQueryQuery, RootWorkspaceQueryQueryVariables>;
export const WorkspaceGraphsQueryDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"query","name":{"kind":"Name","value":"WorkspaceGraphsQuery"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"selector"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"RepositorySelector"}}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"repositoryOrError"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"repositorySelector"},"value":{"kind":"Variable","name":{"kind":"Name","value":"selector"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"Repository"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"usedSolids"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"definition"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"__typename"}},{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"CompositeSolidDefinition"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"name"}},{"kind":"Field","name":{"kind":"Name","value":"description"}}]}}]}},{"kind":"Field","name":{"kind":"Name","value":"invocations"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"pipeline"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"name"}}]}},{"kind":"Field","name":{"kind":"Name","value":"solidHandle"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"handleID"}}]}}]}}]}},{"kind":"Field","name":{"kind":"Name","value":"pipelines"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"name"}},{"kind":"Field","name":{"kind":"Name","value":"isJob"}},{"kind":"Field","name":{"kind":"Name","value":"graphName"}}]}}]}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"PythonErrorFragment"}}]}}]}},...PythonErrorFragmentFragmentDoc.definitions,...PythonErrorChainFragmentDoc.definitions]} as unknown as DocumentNode<WorkspaceGraphsQueryQuery, WorkspaceGraphsQueryQueryVariables>;
export const WorkspaceJobsQueryDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"query","name":{"kind":"Name","value":"WorkspaceJobsQuery"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"selector"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"RepositorySelector"}}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"repositoryOrError"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"repositorySelector"},"value":{"kind":"Variable","name":{"kind":"Name","value":"selector"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"Repository"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"name"}},{"kind":"Field","name":{"kind":"Name","value":"pipelines"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"name"}},{"kind":"Field","name":{"kind":"Name","value":"isJob"}}]}}]}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"PythonErrorFragment"}}]}}]}},...PythonErrorFragmentFragmentDoc.definitions,...PythonErrorChainFragmentDoc.definitions]} as unknown as DocumentNode<WorkspaceJobsQueryQuery, WorkspaceJobsQueryQueryVariables>;
export const WorkspaceSchedulesQueryDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"query","name":{"kind":"Name","value":"WorkspaceSchedulesQuery"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"selector"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"RepositorySelector"}}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"repositoryOrError"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"repositorySelector"},"value":{"kind":"Variable","name":{"kind":"Name","value":"selector"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"Repository"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"name"}},{"kind":"Field","name":{"kind":"Name","value":"schedules"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"name"}},{"kind":"Field","name":{"kind":"Name","value":"description"}}]}}]}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"PythonErrorFragment"}}]}}]}},...PythonErrorFragmentFragmentDoc.definitions,...PythonErrorChainFragmentDoc.definitions]} as unknown as DocumentNode<WorkspaceSchedulesQueryQuery, WorkspaceSchedulesQueryQueryVariables>;
export const WorkspaceSensorsQueryDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"query","name":{"kind":"Name","value":"WorkspaceSensorsQuery"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"selector"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"RepositorySelector"}}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"repositoryOrError"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"repositorySelector"},"value":{"kind":"Variable","name":{"kind":"Name","value":"selector"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"Repository"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"name"}},{"kind":"Field","name":{"kind":"Name","value":"sensors"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"name"}},{"kind":"Field","name":{"kind":"Name","value":"description"}}]}}]}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"PythonErrorFragment"}}]}}]}},...PythonErrorFragmentFragmentDoc.definitions,...PythonErrorChainFragmentDoc.definitions]} as unknown as DocumentNode<WorkspaceSensorsQueryQuery, WorkspaceSensorsQueryQueryVariables>;